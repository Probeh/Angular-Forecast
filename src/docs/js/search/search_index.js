var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.015,1,1.576]],["body/components/AppComponent.html",[0,1.631,1,2.71,2,1.713,3,0.153,4,0.134,5,2.044,6,2.044,7,2.044,8,2.044,9,0.134,10,3.475,11,2.044,12,3.83,13,3.629,14,5.409,15,2.749,16,6.112,17,2.749,18,5.409,19,0.439,20,1.022,21,6.112,22,1.631,23,1.271,24,5.409,25,0.545,26,0.016,27,1.029,28,1.389,29,1.274,30,4.673,31,0.254,32,0.76,33,0.153,34,0.153,35,1.33,36,2.749,37,2.749,38,2.044,39,3.322,40,2.044,41,1.326,42,2.044,43,1.22,44,2.044,45,1.591,46,2.044,47,1.591,48,2.044,49,1.668,50,2.044,51,1.591,52,2.044,53,1.668,54,2.044,55,1.668,56,2.044,57,1.668,58,1.839,59,2.044,60,2.044,61,0.008,62,0.011,63,0.008]],["title/modules/AppModule.html",[64,0.972,65,2.689]],["body/modules/AppModule.html",[1,3.125,3,0.146,4,0.128,9,0.128,26,0.017,31,0.468,32,0.726,33,0.146,34,0.146,35,1.272,61,0.008,62,0.011,63,0.008,64,0.984,65,5.289,66,1.166,67,1.759,68,3.036,69,2.877,70,2.176,71,1.389,72,3.322,73,3.322,74,3.322,75,3.322,76,4.532,77,4.391,78,2.667,79,1.954,80,1.673,81,3.846,82,1.982,83,4.533,84,2.197,85,1.982,86,5.247,87,4.533,88,2.978,89,5.247,90,3.846,91,3.846,92,2.343,93,3.846,94,3.712,95,2.978,96,2.978,97,2.72,98,3.431,99,2.978,100,2.343,101,2.514,102,3.846,103,3.846,104,3.322,105,2.978,106,3.322,107,2.514,108,2.978]],["title/modules/AppRoutingModule.html",[64,0.972,76,2.485]],["body/modules/AppRoutingModule.html",[3,0.183,4,0.16,9,0.16,26,0.017,31,0.384,32,0.911,33,0.231,34,0.183,61,0.01,62,0.013,63,0.01,66,1.463,71,1.742,76,3.982,82,1.822,85,2.301,109,4.824,110,2.939,111,3.711,112,3.095,113,2.452,114,1.742,115,4.824,116,4.72,117,4.715,118,6.09,119,4.824,120,4.824,121,3.735,122,4.824,123,4.824,124,4.824,125,4.824,126,4.824,127,4.824]],["title/classes/AppSettings.html",[34,0.144,128,2.316]],["body/classes/AppSettings.html",[3,0.157,4,0.138,9,0.138,19,0.452,20,1.042,22,1.655,23,1.618,25,0.896,26,0.017,31,0.417,33,0.157,34,0.157,61,0.009,62,0.012,63,0.009,94,5.01,95,3.206,96,3.206,97,4.387,98,3.606,99,3.206,100,3.779,101,2.707,105,4.802,107,4.055,128,3.361,129,1.994,130,6.12,131,3.577,132,2.124,133,1.326,134,4.802,135,5.516,136,4.141,137,4.141,138,4.141,139,3.543,140,2.929,141,1.203]],["title/injectables/ApplicationService.html",[142,1.831,143,2.045]],["body/injectables/ApplicationService.html",[3,0.11,4,0.096,9,0.096,19,0.315,20,0.808,22,0.771,23,1.608,25,0.907,26,0.017,28,1.761,29,1.614,31,0.432,32,0.545,33,0.11,34,0.11,41,1.049,61,0.006,62,0.009,63,0.006,84,1.65,94,3.606,95,2.236,96,2.236,97,3.606,98,2.798,99,2.236,100,3.106,101,1.888,104,2.495,105,3.947,106,2.495,107,3.333,128,3.435,132,2.085,133,0.773,134,4.881,139,3.601,140,2.043,141,0.839,142,2.061,143,2.302,144,2.043,145,2.495,146,5.098,147,3.976,148,5.098,149,5.446,150,4.404,151,1.693,152,4.279,153,2.495,154,4.365,155,2.455,156,4.279,157,1.478,158,3.313,159,1.321,160,4.279,161,2.888,162,4.279,163,1.142,164,1.391,165,2.888,166,2.888,167,5.299,168,2.453,169,2.888,170,2.888,171,2.888,172,2.888,173,1.553,174,2.236,175,2.043,176,2.236,177,2.043,178,1.65,179,2.888,180,2.888,181,2.495,182,2.888,183,2.888,184,2.888,185,2.888,186,2.888,187,2.888,188,2.236,189,2.888,190,2.236,191,2.888,192,2.888,193,2.888,194,2.888,195,2.888]],["title/classes/BaseModel.html",[34,0.144,196,1.373]],["body/classes/BaseModel.html",[3,0.148,4,0.129,9,0.129,19,0.425,20,1,22,1.041,23,1.585,25,0.815,26,0.017,27,1.651,28,1.83,29,1.677,31,0.334,33,0.148,34,0.148,41,0.956,61,0.008,62,0.011,63,0.008,70,1.617,129,1.878,132,2.104,133,0.704,155,1.878,157,1.347,159,1.783,168,1.697,175,2.758,196,1.913,197,6.013,198,1.086,199,3.436,200,3.436,201,3.436,202,3.436,203,2.196,204,5.297,205,2.618,206,3.899,207,3.899,208,3.899,209,3.471,210,3.368,211,3.899,212,6.016,213,3.899,214,3.899,215,3.899,216,3.899,217,4.101,218,3.368,219,3.899,220,1.473,221,3.899]],["title/classes/ConditionsModel.html",[34,0.144,222,2.316]],["body/classes/ConditionsModel.html",[3,0.106,4,0.093,9,0.093,19,0.306,20,0.79,22,0.748,23,1.703,25,0.962,26,0.017,27,1.768,28,1.445,29,1.325,31,0.264,33,0.159,34,0.106,41,0.687,61,0.006,62,0.009,63,0.006,129,1.349,132,2.179,133,0.506,141,1.216,155,1.349,157,0.968,159,1.281,196,2.333,198,0.78,199,2.39,200,2.39,201,2.39,202,2.39,203,1.735,205,2.416,209,1.507,220,2.355,222,2.549,223,5.432,224,1.82,225,4.798,226,3.928,227,4.798,228,3.631,229,4.798,230,3.631,231,3.928,232,4.798,233,4.798,234,3.928,235,3.614,236,2.42,237,3.353,238,2.42,239,2.42,240,2.42,241,2.42,242,2.42,243,3.172,244,2.42,245,2.42,246,3.384,247,1.707,248,1.707,249,1.707,250,1.707,251,1.162,252,1.982,253,0.36,254,1.219]],["title/components/ContainerComponent.html",[0,1.015,43,1.153]],["body/components/ContainerComponent.html",[0,1.238,1,1.025,2,1.204,3,0.094,4,0.082,5,1.256,6,1.256,7,1.256,8,1.256,9,0.082,11,1.256,12,3.46,13,3.327,15,1.933,17,1.933,19,0.27,20,0.718,22,0.66,23,1.395,25,0.705,26,0.017,27,0.973,28,1.314,29,1.649,31,0.355,32,0.467,33,0.094,34,0.094,35,0.817,36,1.933,37,1.933,38,1.256,39,2.647,40,1.256,41,1.137,42,1.256,43,1.58,44,1.256,45,0.978,46,1.256,47,0.978,48,1.256,49,1.025,50,1.256,51,0.978,52,1.256,53,1.025,54,1.256,55,1.025,56,1.256,57,1.025,58,1.74,59,1.256,60,1.256,61,0.005,62,0.008,63,0.005,98,1.616,100,2.826,101,1.616,107,3.032,108,2.945,113,1.256,132,1.924,133,0.446,143,2.801,147,1.506,150,4.006,151,1.505,157,0.854,163,0.978,164,1.19,178,1.412,181,4.006,237,2.046,255,2.135,256,1.74,257,2.494,258,5.94,259,4.638,260,3.804,261,4.638,262,4.638,263,2.801,264,2.135,265,6.188,266,3.804,267,2.945,268,2.471,269,2.471,270,3.286,271,2.471,272,2.471,273,3.804,274,2.135,275,2.471,276,2.471,277,2.691,278,2.945,279,3.804,280,2.135,281,2.471,282,2.471,283,2.471,284,2.471,285,2.471,286,1.748,287,1.913,288,2.135,289,2.135,290,2.471,291,4.006,292,3.286,293,3.286,294,2.135,295,2.135,296,2.691,297,4.354,298,3.978,299,2.135,300,3.286,301,4.354,302,3.286,303,3.286,304,2.135,305,3.286,306,3.804,307,3.286,308,2.471,309,2.945,310,3.28,311,2.471,312,2.135,313,2.471,314,2.471,315,4.638,316,3.286,317,2.135,318,3.286]],["title/modules/ContainerModule.html",[64,0.972,77,2.485]],["body/modules/ContainerModule.html",[2,1.572,3,0.105,4,0.092,9,0.092,23,0.649,25,0.374,26,0.017,31,0.456,32,0.522,33,0.105,34,0.105,35,0.914,41,0.677,43,2.121,61,0.006,62,0.009,63,0.006,64,0.707,66,1.673,67,1.264,68,2.524,69,1.331,70,2.287,71,1.793,77,5.015,78,2.104,79,1.404,80,1.202,82,1.564,83,3.577,84,1.578,85,1.876,92,1.684,114,1.495,128,3.6,133,0.499,143,3.336,151,1.093,155,1.994,157,0.955,159,1.264,163,1.093,176,2.139,177,1.954,274,2.387,319,2.387,320,2.387,321,2.387,322,2.387,323,2.387,324,3.198,325,3.198,326,4.055,327,4.055,328,4.055,329,4.055,330,3.779,331,2.139,332,3.577,333,2.763,334,4.141,335,2.763,336,4.966,337,2.227,338,1.404,339,4.966,340,2.763,341,2.929,342,2.763,343,2.929,344,2.763,345,2.763,346,2.763,347,2.763,348,2.763,349,2.763,350,2.387,351,4.966,352,4.141,353,4.141,354,3.206,355,1.807,356,2.763]],["title/modules/ContainerRoutingModule.html",[64,0.972,326,2.485]],["body/modules/ContainerRoutingModule.html",[3,0.203,4,0.178,9,0.178,26,0.016,31,0.41,32,1.012,33,0.247,34,0.203,61,0.011,62,0.014,63,0.011,66,1.625,71,1.935,82,2.024,85,2.455,110,3.265,111,3.96,112,3.303,113,2.723,114,1.935,326,4.249,357,5.358,358,5.358,359,5.358]],["title/injectables/ContextService.html",[142,1.831,327,2.485]],["body/injectables/ContextService.html",[3,0.157,4,0.138,9,0.138,19,0.452,20,1.042,22,1.655,23,1.554,25,0.747,26,0.017,28,2.143,29,1.964,31,0.417,32,0.782,33,0.157,34,0.157,61,0.009,62,0.012,63,0.009,132,1.727,142,2.656,144,2.929,147,4.316,149,6.12,167,5.333,168,2.699,173,2.227,327,3.606,360,3.577,361,4.802,362,6.202,363,5.358,364,5.516,365,4.387,366,4.141,367,4.141,368,2.929,369,4.141,370,4.141,371,4.141,372,4.141,373,4.141,374,4.141,375,4.141,376,2.707]],["title/classes/CountryModel.html",[34,0.144,377,2.316]],["body/classes/CountryModel.html",[3,0.141,4,0.124,9,0.124,19,0.406,20,0.969,22,0.994,23,1.684,25,0.929,26,0.017,27,1.883,28,1.773,29,1.625,31,0.235,33,0.195,34,0.141,41,0.913,61,0.008,62,0.011,63,0.008,129,1.793,132,2.146,133,0.672,141,1.082,155,1.793,157,1.286,159,1.703,196,2.54,198,1.037,199,2.932,200,2.932,201,2.932,202,2.932,203,2.128,205,1.62,209,2.003,224,2.233,246,3.857,247,2.269,248,2.269,249,2.269,250,2.269,251,1.544,253,0.479,254,1.62,377,3.127,378,5.141,379,4.139,380,4.901,381,3.857,382,3.857,383,3.974,384,3.217,385,2.883]],["title/classes/DayModel.html",[34,0.144,386,2.689]],["body/classes/DayModel.html",[3,0.14,4,0.122,9,0.122,19,0.402,20,0.962,22,0.983,23,1.679,25,0.926,26,0.017,27,1.612,28,1.76,29,1.613,31,0.233,33,0.193,34,0.14,41,0.903,61,0.008,62,0.011,63,0.008,129,1.774,132,2.143,133,0.665,141,1.071,155,1.774,157,1.273,159,1.685,196,2.533,198,1.026,199,2.91,200,2.91,201,2.91,202,2.91,203,2.112,205,1.603,209,1.982,220,2.207,224,2.217,226,4.457,237,3.141,246,3.84,247,2.245,248,2.245,249,2.245,250,2.245,251,1.527,253,0.474,254,1.603,383,3.945,384,3.183,385,2.852,386,3.604,387,5.122,388,5.444,389,5.444,390,3.84]],["title/classes/Encoding.html",[34,0.144,391,2.943]],["body/classes/Encoding.html",[3,0.116,4,0.101,9,0.101,19,0.333,20,0.842,23,1.51,25,0.922,26,0.017,27,1.954,28,2,29,2.289,31,0.281,33,0.116,34,0.116,41,1.092,61,0.006,62,0.009,63,0.006,114,1.901,129,1.469,132,1.791,133,0.805,151,1.763,157,2,159,1.395,163,1.763,164,1.469,168,1.328,175,2.158,332,6.516,355,2.914,391,3.45,392,2.636,393,5.264,394,5.264,395,5.264,396,5.264,397,4.456,398,4.456,399,3.051,400,3.051,401,3.051,402,3.051,403,4.456,404,3.051,405,6.806,406,3.785,407,4.456,408,3.051,409,2.363,410,5.264,411,3.051,412,3.051,413,2.636,414,2.636,415,3.051,416,3.051,417,3.051,418,3.051,419,3.051,420,3.051,421,3.051,422,4.456,423,3.051,424,3.051,425,3.051,426,4.456,427,3.051,428,3.051,429,3.051,430,2.363,431,3.051,432,3.051,433,3.051,434,3.051]],["title/components/FavoritesComponent.html",[0,1.015,45,1.504]],["body/components/FavoritesComponent.html",[0,1.449,1,1.335,2,1.467,3,0.122,4,0.107,5,1.636,6,1.636,7,1.636,8,1.636,9,0.107,11,1.636,12,3.674,13,3.481,15,2.354,17,2.354,19,0.351,22,1.449,23,1.088,26,0.016,31,0.292,32,0.608,33,0.122,34,0.122,35,1.065,36,2.354,37,2.354,38,1.636,39,3.017,40,1.636,41,1.136,42,1.636,43,0.976,44,1.636,45,2.348,46,1.636,47,1.273,48,1.636,49,1.335,50,1.636,51,1.273,52,1.636,53,1.335,54,1.636,55,1.335,56,1.636,57,1.335,58,1.472,59,1.636,60,1.636,61,0.007,62,0.01,63,0.007,121,3.587,151,1.833,163,1.273,164,1.55,256,2.119,257,2.919,263,3.192,277,3.277,286,2.277,287,2.493,298,2.277,301,5.071,309,2.493,310,2.277,435,2.781,436,5.427,437,4.633,438,3.219,439,3.219,440,5.935,441,7.305,442,6.549,443,6.549,444,6.549,445,5.935,446,5.935,447,4.633,448,5.427,449,2.781,450,2.781,451,3.219,452,3.219,453,3.219,454,3.219,455,3.219,456,3.219,457,3.219,458,3.219,459,4.202,460,3.219,461,3.219,462,2.781,463,3.219]],["title/modules/FavoritesModule.html",[64,0.972,464,2.689]],["body/modules/FavoritesModule.html",[2,1.927,3,0.151,4,0.132,9,0.132,26,0.017,31,0.411,32,0.753,33,0.151,34,0.151,35,1.319,43,2.238,45,2.127,61,0.008,62,0.011,63,0.008,64,1.02,66,1.976,67,1.824,68,3.093,69,1.92,70,2.23,71,2.198,78,2.733,79,2.027,80,1.735,82,2.032,85,2.032,92,2.43,114,1.942,324,3.375,325,3.375,337,2.893,338,2.027,464,5.451,465,3.445,466,3.988,467,3.445,468,3.988,469,4.581,470,3.088,471,3.988,472,3.445]],["title/modules/FavoritesRoutingModule.html",[64,0.972,469,2.485]],["body/modules/FavoritesRoutingModule.html",[0,1.353,3,0.192,4,0.168,9,0.168,26,0.017,31,0.431,32,0.957,33,0.238,34,0.192,45,2.484,61,0.011,62,0.013,63,0.011,66,1.537,71,1.83,82,1.915,85,2.373,110,3.088,111,3.827,112,3.192,113,2.575,114,1.83,116,3.584,469,4.107,472,4.378,473,5.068,474,5.068,475,3.924,476,5.068]],["title/modules/FeatureModule.html",[64,0.972,477,2.171]],["body/modules/FeatureModule.html",[3,0.147,4,0.128,9,0.128,26,0.017,31,0.489,32,0.73,33,0.147,34,0.147,61,0.008,62,0.011,63,0.008,66,1.173,71,1.396,82,1.461,85,1.99,178,2.209,337,2.833,338,1.965,354,2.994,477,3.009,478,3.867,479,5.99,480,3.867,481,5.267,482,3.867,483,5.267,484,3.867,485,5.267,486,3.867,487,5.267,488,3.867,489,5.267,490,3.867,491,5.267,492,3.867,493,5.267,494,3.867,495,5.267,496,3.867,497,5.267,498,3.867,499,5.267,500,3.867,501,4.55,502,3.341,503,5.267,504,3.867,505,5.267,506,3.867,507,5.267,508,3.867,509,3.867]],["title/components/ForecastComponent.html",[0,1.015,47,1.504]],["body/components/ForecastComponent.html",[0,1.617,1,1.639,2,1.693,3,0.15,4,0.131,5,2.01,6,2.01,7,2.01,8,2.01,9,0.131,11,2.01,12,3.819,13,3.618,15,2.718,17,2.718,19,0.431,22,1.617,23,1.256,26,0.016,31,0.25,32,0.747,33,0.15,34,0.15,35,1.307,36,2.718,37,2.718,38,2.01,39,3.299,40,2.01,41,1.311,42,2.01,43,1.199,44,2.01,45,1.564,46,2.01,47,2.568,48,2.01,49,1.639,50,2.01,51,1.564,52,2.01,53,1.639,54,2.01,55,1.639,56,2.01,57,1.639,58,1.808,59,2.01,60,2.01,61,0.008,62,0.011,63,0.008,151,2.115,163,1.564,164,1.904,256,2.446,257,3.259,263,3.491,510,3.416,511,4.591,512,6.059,513,5.347,514,3.954,515,3.954,516,4.14]],["title/classes/ForecastModel.html",[34,0.144,517,2.316]],["body/classes/ForecastModel.html",[3,0.14,4,0.122,9,0.122,19,0.401,20,0.961,22,0.981,23,1.646,25,0.895,26,0.017,27,0.94,28,1.757,29,1.61,31,0.368,33,0.193,34,0.14,41,0.901,61,0.008,62,0.011,63,0.008,129,1.769,132,2.112,133,0.663,141,1.695,155,1.769,157,1.269,159,1.68,168,1.599,196,2.531,198,1.023,199,2.905,200,2.905,201,2.905,202,2.905,203,2.109,205,1.599,209,1.976,224,2.213,246,3.836,247,2.239,248,2.239,249,2.239,250,2.239,251,1.523,253,0.472,254,1.599,376,2.403,383,3.938,385,2.845,517,3.099,518,4.874,519,5.438,520,5.438,521,4.452,522,3.836,523,4.116,524,3.174,525,3.174,526,4.394]],["title/modules/ForecastModule.html",[64,0.972,527,2.689]],["body/modules/ForecastModule.html",[2,1.927,3,0.151,4,0.132,9,0.132,26,0.017,31,0.411,32,0.753,33,0.151,34,0.151,35,1.319,43,2.238,47,2.127,61,0.008,62,0.011,63,0.008,64,1.02,66,1.976,67,1.824,68,3.093,69,1.92,70,2.23,71,2.198,78,2.733,79,2.027,80,1.735,82,2.032,85,2.032,92,2.43,114,1.942,324,3.375,325,3.375,337,2.893,338,2.027,527,5.451,528,3.445,529,3.988,530,3.988,531,3.445,532,4.581,533,3.088,534,3.988,535,3.445]],["title/modules/ForecastRoutingModule.html",[64,0.972,532,2.485]],["body/modules/ForecastRoutingModule.html",[0,1.353,3,0.192,4,0.168,9,0.168,26,0.017,31,0.431,32,0.957,33,0.238,34,0.192,47,2.484,61,0.011,62,0.013,63,0.011,66,1.537,71,1.83,82,1.915,85,2.373,110,3.088,111,3.827,112,3.192,113,2.575,114,1.83,116,3.584,475,3.924,532,4.107,535,4.378,536,5.068,537,5.068,538,5.068]],["title/components/HeaderComponent.html",[0,1.015,49,1.576]],["body/components/HeaderComponent.html",[0,1.188,1,0.96,2,1.145,3,0.088,4,0.077,5,1.177,6,1.177,7,1.177,8,1.177,9,0.077,11,1.177,12,3.403,13,3.276,15,1.839,17,1.839,19,0.253,20,0.683,22,1.188,23,1.282,25,0.49,26,0.017,28,1.25,29,1.145,31,0.228,32,0.437,33,0.088,34,0.088,35,0.766,36,1.839,37,1.839,38,1.177,39,2.557,40,1.177,41,0.887,42,1.177,43,0.703,44,1.177,45,0.916,46,1.177,47,0.916,48,1.177,49,2.086,50,1.177,51,0.916,52,1.177,53,0.96,54,1.177,55,0.96,56,1.177,57,0.96,58,1.059,59,1.177,60,1.177,61,0.005,62,0.008,63,0.005,80,1.574,121,2.801,132,1.683,151,1.431,163,0.916,164,1.115,168,1.937,205,2.629,218,2.001,256,1.654,257,2.394,263,2.706,286,1.638,287,1.793,288,2.001,289,2.001,291,3.846,292,3.846,293,3.846,294,2.001,295,2.001,296,4.274,297,4.226,298,4.423,300,4.346,301,3.895,302,2.001,303,2.001,304,3.125,307,3.125,309,1.793,310,4.091,312,3.125,316,3.846,317,3.846,363,3.846,449,3.125,450,2.001,459,3.895,462,2.001,539,2.001,540,6.043,541,4.451,542,3.618,543,4.451,544,4.451,545,3.618,546,3.618,547,5.031,548,2.316,549,2.316,550,2.316,551,3.618,552,2.316,553,3.618,554,3.618,555,3.618,556,3.618,557,3.125,558,3.125,559,4.451,560,5.458,561,5.784,562,6.253,563,2.316,564,2.316,565,2.316,566,3.618,567,2.316,568,5.031,569,5.031,570,5.031,571,3.618,572,4.451,573,2.316,574,2.316,575,2.316,576,2.001,577,2.316,578,2.001,579,3.618,580,3.618,581,2.316,582,2.316,583,2.316,584,3.125,585,3.125,586,3.618,587,2.316]],["title/modules/HeaderModule.html",[64,0.972,324,1.738]],["body/modules/HeaderModule.html",[2,1.905,3,0.148,4,0.129,9,0.129,26,0.017,31,0.426,32,0.736,33,0.148,34,0.148,35,1.289,43,2.228,49,2.196,61,0.008,62,0.011,63,0.008,64,0.997,66,1.958,67,1.783,68,3.057,69,1.878,70,2.196,71,2.173,78,2.692,79,1.982,80,1.697,82,2.001,85,2.001,92,2.376,114,1.913,324,3.608,325,3.359,337,2.849,338,1.982,477,3.976,588,3.368,589,3.899,590,3.899,591,3.368,592,4.551,593,3.019,594,3.019,595,3.899,596,3.899]],["title/modules/HeaderRoutingModule.html",[64,0.972,592,2.485]],["body/modules/HeaderRoutingModule.html",[3,0.203,4,0.178,9,0.178,26,0.016,31,0.41,32,1.012,33,0.247,34,0.203,61,0.011,62,0.014,63,0.011,66,1.625,71,1.935,82,2.024,85,2.455,110,3.265,111,3.96,112,3.303,113,2.723,114,1.935,592,4.249,597,5.358,598,5.358,599,5.358]],["title/interfaces/IAdministrativeArea.html",[253,0.489,600,2.316]],["body/interfaces/IAdministrativeArea.html",[3,0.167,4,0.146,9,0.146,19,0.48,20,1.084,25,0.994,26,0.016,27,2.014,33,0.167,61,0.009,62,0.012,63,0.009,133,1.403,198,1.226,220,2.414,253,0.566,379,4.429,380,5.244,381,4.127,600,3.498,601,1.52,602,3.801,603,6.773,604,6.773,605,6.773,606,6.773]],["title/interfaces/IConditions.html",[234,2.689,253,0.489]],["body/interfaces/IConditions.html",[3,0.126,4,0.11,9,0.11,19,0.361,20,0.893,25,0.959,26,0.017,27,1.879,31,0.298,33,0.179,34,0.126,61,0.007,62,0.01,63,0.007,132,1.972,133,1.377,141,1.374,196,1.707,198,0.922,203,1.373,205,2.616,220,2.629,222,2.017,223,2.563,224,1.44,225,5.492,226,4.497,227,5.492,228,4.157,229,5.492,230,4.157,231,4.497,232,5.492,233,5.492,234,3.899,237,3.742,243,3.631,251,1.373,252,2.342,253,0.426,254,1.44,601,1.144]],["title/interfaces/ICountry.html",[253,0.489,382,2.316]],["body/interfaces/ICountry.html",[3,0.174,4,0.152,9,0.152,19,0.5,20,1.114,25,0.883,26,0.016,27,1.98,31,0.29,33,0.224,34,0.174,61,0.01,62,0.012,63,0.01,132,1.816,133,1.315,141,1.333,196,2.13,198,1.278,203,1.902,224,1.996,251,1.902,253,0.59,254,1.996,377,2.795,378,3.552,379,4.654,380,5.512,381,4.337,382,3.972,601,1.585]],["title/interfaces/IDay.html",[253,0.489,390,2.316]],["body/interfaces/IDay.html",[3,0.172,4,0.15,9,0.15,19,0.494,20,1.105,25,0.877,26,0.017,27,1.752,31,0.286,33,0.222,34,0.172,61,0.009,62,0.012,63,0.009,132,1.804,133,1.311,141,1.316,196,2.112,198,1.261,203,1.877,220,2.587,224,1.97,226,5.015,237,3.683,251,1.877,253,0.582,254,1.97,386,3.203,387,3.506,388,6.125,389,6.125,390,3.948,601,1.564]],["title/interfaces/IDictionary.html",[253,0.489,365,2.689]],["body/interfaces/IDictionary.html",[3,0.211,4,0.184,9,0.184,23,1.303,26,0.016,27,1.698,31,0.35,33,0.211,61,0.012,62,0.014,63,0.012,141,1.612,196,2.565,251,2.3,253,0.713,365,4.694,406,4.34,601,1.917,607,4.793,608,5.548,609,5.548]],["title/interfaces/IElevation.html",[253,0.489,610,2.689]],["body/interfaces/IElevation.html",[3,0.197,4,0.172,9,0.172,19,0.565,20,1.202,25,0.862,26,0.016,31,0.327,33,0.197,61,0.011,62,0.013,63,0.011,133,1.298,141,1.505,198,1.443,253,0.666,601,1.789,610,4.503,611,4.475,612,7.19,613,7.19,614,4.977,615,4.475]],["title/interfaces/IForecast.html",[253,0.489,521,2.689]],["body/interfaces/IForecast.html",[3,0.171,4,0.149,9,0.149,19,0.491,20,1.1,25,0.789,26,0.017,31,0.408,33,0.221,34,0.171,61,0.009,62,0.012,63,0.009,132,1.622,133,1.233,141,1.877,168,1.958,196,2.104,198,1.253,203,1.865,224,1.958,251,1.865,253,0.578,254,1.958,376,2.942,517,2.741,518,3.483,519,6.112,520,6.112,521,4.568,522,4.311,523,4.626,524,3.887,525,3.887,526,5.032,601,1.554]],["title/interfaces/IGeoPosition.html",[139,2.171,253,0.489]],["body/interfaces/IGeoPosition.html",[3,0.188,4,0.164,9,0.164,19,0.539,20,1.168,25,0.914,26,0.016,31,0.312,33,0.188,61,0.01,62,0.013,63,0.01,133,1.341,139,3.532,141,1.436,188,5.475,190,5.475,198,1.377,220,2.806,253,0.635,601,1.708,610,5.002,616,4.27,617,7.072,618,4.943]],["title/interfaces/IHeadline.html",[253,0.489,523,2.485]],["body/interfaces/IHeadline.html",[3,0.152,4,0.133,9,0.133,19,0.436,20,1.018,25,1,26,0.016,27,1.94,33,0.152,61,0.008,62,0.011,63,0.008,133,1.408,198,1.114,205,3.051,220,2.79,228,4.264,230,4.264,253,0.514,523,3.523,578,5.634,601,1.382,619,3.455,620,6.521,621,6.521,622,6.521,623,6.521,624,6.521,625,6.521]],["title/interfaces/ILocation.html",[253,0.489,626,2.689]],["body/interfaces/ILocation.html",[3,0.099,4,0.087,9,0.087,19,0.286,20,0.751,25,0.992,26,0.017,27,1.916,31,0.399,33,0.151,34,0.099,61,0.005,62,0.008,63,0.005,132,2.027,133,1.368,139,3.297,140,1.852,141,1.835,168,1.139,196,1.436,198,0.729,203,1.086,220,2.028,222,2.423,224,1.139,237,3.104,251,1.086,253,0.337,254,1.139,368,4.082,376,1.712,377,2.929,379,3.774,381,3.517,382,3.848,406,3.774,511,1.852,517,2.423,600,3.517,601,0.905,626,3.4,627,2.028,628,4.469,629,4.082,630,4.469,631,4.986,632,4.469,633,4.986,634,4.986,635,3.774,636,2.028,637,2.262,638,2.262,639,2.262,640,2.262,641,1.852,642,2.028,643,2.028,644,2.262,645,3.435]],["title/interfaces/IMetric.html",[253,0.489,614,2.485]],["body/interfaces/IMetric.html",[3,0.192,4,0.168,9,0.168,19,0.553,20,1.186,25,0.924,26,0.016,27,1.746,29,2.259,33,0.192,61,0.011,62,0.013,63,0.011,133,1.349,198,1.411,220,2.823,253,0.652,601,1.751,614,4.107,646,4.378,647,6.164,648,7.135]],["title/interfaces/ISearchEvent.html",[253,0.489,649,2.689]],["body/interfaces/ISearchEvent.html",[3,0.199,4,0.174,9,0.174,19,0.571,20,1.211,25,0.868,26,0.016,27,1.772,33,0.199,61,0.011,62,0.013,63,0.011,253,0.673,601,1.809,649,4.534,650,4.525,651,4.525,652,7.217,653,7.217,654,6.926,655,6.926]],["title/interfaces/ISearchResult.html",[253,0.489,656,2.485]],["body/interfaces/ISearchResult.html",[3,0.159,4,0.139,9,0.139,19,0.456,20,1.048,25,1.027,26,0.017,27,1.906,31,0.264,33,0.159,61,0.009,62,0.012,63,0.009,133,1.394,141,1.214,198,1.164,220,2.683,253,0.537,381,4.044,406,4.34,600,4.416,601,1.443,628,5.139,629,4.694,632,5.139,636,3.235,656,3.628,657,3.609,658,5.734]],["title/interfaces/ITemperature.html",[243,2.171,253,0.489]],["body/interfaces/ITemperature.html",[3,0.197,4,0.173,9,0.173,19,0.567,20,1.205,25,0.864,26,0.016,31,0.328,33,0.197,61,0.011,62,0.013,63,0.011,133,1.3,141,1.511,198,1.448,243,3.645,253,0.668,601,1.796,614,4.981,615,4.491,659,4.491,660,7.199,661,7.199]],["title/interfaces/ITimeZone.html",[253,0.489,635,2.485]],["body/interfaces/ITimeZone.html",[3,0.175,4,0.153,9,0.153,19,0.504,20,1.119,25,0.966,26,0.016,27,1.867,33,0.175,41,1.691,61,0.01,62,0.012,63,0.01,133,1.382,198,1.286,205,2.845,217,5.341,220,2.47,237,3.517,253,0.594,601,1.595,635,3.873,662,3.989,663,6.898,664,6.898,665,6.898]],["title/interfaces/IWeather.html",[253,0.489,522,2.316]],["body/interfaces/IWeather.html",[3,0.129,4,0.113,9,0.113,19,0.372,20,0.911,25,0.949,26,0.017,27,1.888,31,0.353,33,0.183,34,0.129,61,0.007,62,0.01,63,0.007,132,1.952,133,1.369,141,1.627,196,1.742,198,0.949,203,1.413,205,3.102,220,2.301,224,1.482,228,4.202,230,4.202,231,4.546,243,3.671,251,1.413,252,2.41,253,0.438,254,1.482,390,4.344,522,3.412,601,1.177,666,2.638,667,5.553,668,5.553,669,5.553,670,5.553,671,2.943,672,2.41]],["title/classes/LocationModel.html",[34,0.144,641,2.689]],["body/classes/LocationModel.html",[3,0.081,4,0.071,9,0.071,19,0.233,20,0.642,22,0.571,23,1.707,25,0.994,26,0.017,27,1.823,28,1.174,29,1.076,31,0.37,33,0.129,34,0.081,41,0.525,61,0.004,62,0.007,63,0.004,129,1.03,132,2.188,133,0.386,139,2.751,140,1.513,141,1.704,155,1.03,157,0.739,159,0.979,168,0.931,196,2.117,198,0.596,199,1.941,200,1.941,201,1.941,202,1.941,203,1.409,205,0.931,209,1.151,220,1.597,222,2.576,224,1.479,235,1.848,237,2.826,246,2.934,247,1.304,248,1.304,249,1.304,250,1.304,251,0.887,253,0.275,254,0.931,368,3.406,376,1.399,377,3.201,379,3.148,381,2.934,382,2.576,406,3.148,511,2.99,517,2.576,600,2.934,626,3.406,627,5.517,628,3.728,629,3.406,630,3.728,631,4.16,632,3.728,633,4.16,634,4.16,635,3.148,636,1.657,637,1.848,638,1.848,639,1.848,640,1.848,641,2.404,642,3.273,643,3.273,644,3.652,645,2.936,673,3.399,674,2.14,675,2.14,676,2.14,677,2.14,678,2.14,679,2.14,680,2.14,681,2.14,682,2.14,683,2.14,684,2.14,685,2.14,686,2.14,687,2.14]],["title/guards/LocationResolver.html",[343,2.689,688,2.943]],["body/guards/LocationResolver.html",[3,0.154,4,0.135,9,0.135,19,0.442,22,1.083,23,1.278,25,0.737,26,0.017,31,0.444,32,0.766,33,0.154,34,0.154,41,1.334,61,0.008,62,0.011,63,0.008,84,2.317,113,2.062,133,0.982,134,3.141,142,2.62,143,3.528,147,2.472,151,2.152,154,5.079,157,1.88,158,4.753,163,1.605,173,2.182,178,2.317,256,1.855,264,3.505,267,4.213,343,3.848,355,3.557,430,4.213,689,4.057,690,3.505,691,6.56,692,4.057,693,5.441,694,6.56,695,4.057,696,4.057,697,4.014,698,5.441,699,3.505,700,3.141,701,3.505,702,4.057,703,4.057,704,4.057,705,4.057,706,4.057,707,4.057,708,4.057,709,4.057]],["title/interceptors/RequestInterceptor.html",[328,2.485,341,2.689]],["body/interceptors/RequestInterceptor.html",[3,0.17,4,0.148,9,0.148,19,0.488,22,1.719,23,1.363,25,0.785,26,0.017,31,0.406,32,0.844,33,0.17,34,0.17,41,1.096,61,0.009,62,0.012,63,0.009,84,2.554,114,2.095,133,0.807,142,2.793,151,2.294,157,1.544,163,1.768,173,2.404,256,2.044,277,4.554,328,3.793,355,2.923,697,4.21,710,3.862,711,5.563,712,3.461,713,5.011,714,4.47,715,5.011,716,5.887,717,5.887,718,4.47,719,3.862,720,3.862,721,5.011,722,5.801,723,4.47,724,4.47,725,4.47,726,4.47,727,4.47,728,4.47]],["title/interceptors/ResponseInterceptor.html",[329,2.485,341,2.689]],["body/interceptors/ResponseInterceptor.html",[3,0.16,4,0.14,9,0.14,19,0.46,22,1.67,23,1.311,25,0.571,26,0.017,31,0.42,32,0.796,33,0.16,34,0.16,41,1.033,61,0.009,62,0.012,63,0.009,84,2.408,114,2.016,133,0.761,142,2.688,151,2.208,157,1.456,163,1.667,173,2.267,256,1.928,277,4.426,278,4.321,280,3.642,329,3.649,355,3.649,697,4.091,699,3.642,700,3.264,710,3.642,712,3.264,713,4.822,715,4.822,716,5.754,717,5.754,719,3.642,720,3.642,721,4.822,729,5.406,730,4.215,731,4.215,732,5.581,733,4.822,734,5.581,735,4.215,736,4.215,737,5.581,738,4.215,739,4.215,740,4.215,741,4.215]],["title/components/SearchComponent.html",[0,1.015,51,1.504]],["body/components/SearchComponent.html",[0,1.367,1,1.207,2,1.363,3,0.111,4,0.097,5,1.48,6,1.48,7,1.48,8,1.48,9,0.097,11,1.48,12,3.597,13,3.449,15,2.188,17,2.188,19,0.318,20,0.813,22,0.777,23,1.485,25,0.694,26,0.017,28,1.487,29,1.622,31,0.399,32,0.55,33,0.111,34,0.111,35,0.963,36,2.188,37,2.188,38,1.48,39,2.877,40,1.48,41,1.256,42,1.48,43,0.883,44,1.48,45,1.152,46,1.48,47,1.152,48,1.48,49,1.207,50,1.48,51,2.239,52,1.48,53,1.207,54,1.48,55,1.207,56,1.48,57,1.207,58,2.343,59,1.48,60,1.48,61,0.011,62,0.009,63,0.006,117,3.966,132,1.91,133,1.09,141,0.846,147,3.122,151,1.703,157,1.006,163,1.152,164,1.402,167,4.382,168,1.267,173,1.566,178,1.663,256,1.969,257,2.755,263,3.044,278,3.334,330,3.449,350,2.516,430,2.255,649,3.623,656,1.904,697,3.35,700,2.255,742,2.516,743,5.123,744,4.306,745,5.123,746,5.123,747,5.123,748,5.123,749,2.912,750,4.306,751,2.912,752,2.912,753,2.912,754,2.912,755,2.912,756,4.306,757,2.912,758,2.912,759,2.516,760,2.912,761,2.912,762,2.912,763,2.912,764,2.912,765,2.912,766,2.912]],["title/modules/SearchModule.html",[64,0.972,767,2.689]],["body/modules/SearchModule.html",[2,1.849,3,0.14,4,0.122,9,0.122,26,0.017,31,0.443,32,0.696,33,0.14,34,0.14,35,1.218,43,2.201,51,2.015,61,0.008,62,0.011,63,0.008,64,0.942,66,1.911,67,1.685,68,2.968,69,1.774,70,2.112,71,2.109,78,2.589,79,1.872,80,1.603,82,1.925,85,1.925,92,2.245,114,1.84,324,3.319,325,3.319,337,2.74,338,1.872,477,3.908,594,2.852,767,5.482,768,3.183,769,3.183,770,3.684,771,3.684,772,4.474,773,4.474,774,2.852,775,5.095,776,3.183,777,3.684,778,3.183,779,3.684]],["title/modules/SearchRoutingModule.html",[64,0.972,772,2.485]],["body/modules/SearchRoutingModule.html",[0,1.353,3,0.192,4,0.168,9,0.168,26,0.017,31,0.431,32,0.957,33,0.238,34,0.192,51,2.484,61,0.011,62,0.013,63,0.011,66,1.537,71,1.83,82,1.915,85,2.373,110,3.088,111,3.827,112,3.192,113,2.575,114,1.83,116,3.584,475,3.924,772,4.107,778,4.378,780,5.068,781,5.068,782,5.068]],["title/components/SettingsComponent.html",[0,1.015,53,1.576]],["body/components/SettingsComponent.html",[0,1.617,1,1.639,2,1.693,3,0.15,4,0.131,5,2.01,6,2.01,7,2.01,8,2.01,9,0.131,11,2.01,12,3.819,13,3.618,15,2.718,17,2.718,19,0.431,22,1.617,23,1.256,26,0.016,31,0.25,32,0.747,33,0.15,34,0.15,35,1.307,36,2.718,37,2.718,38,2.01,39,3.299,40,2.01,41,1.311,42,2.01,43,1.199,44,2.01,45,1.564,46,2.01,47,1.564,48,2.01,49,1.639,50,2.01,51,1.564,52,2.01,53,2.691,54,2.01,55,1.639,56,2.01,57,1.639,58,1.808,59,2.01,60,2.01,61,0.008,62,0.011,63,0.008,151,2.115,163,1.564,164,1.904,177,4.591,256,2.446,257,3.259,263,3.491,516,4.14,783,3.416,784,6.059,785,5.347,786,3.954,787,3.954]],["title/components/SidenavComponent.html",[0,1.015,55,1.576]],["body/components/SidenavComponent.html",[0,1.471,1,1.373,2,1.496,3,0.126,4,0.11,5,1.682,6,1.682,7,1.682,8,1.682,9,0.11,11,1.682,12,3.695,13,3.593,15,2.402,17,2.402,19,0.361,22,0.884,23,1.295,25,0.64,26,0.016,28,1.144,29,1.048,31,0.379,32,0.625,33,0.126,34,0.126,35,1.095,36,2.402,37,2.402,38,1.682,39,3.055,40,1.682,41,1.351,42,1.682,43,1.004,44,1.682,45,1.31,46,1.682,47,1.31,48,1.682,49,1.373,50,1.682,51,1.31,52,1.682,53,1.373,54,1.682,55,2.492,56,1.682,57,1.373,58,1.514,59,1.682,60,1.682,61,0.007,62,0.01,63,0.007,80,2.056,98,2.165,100,3.359,101,2.165,107,3.604,108,3.659,132,0.922,133,0.598,143,3.233,151,1.87,157,1.144,163,1.31,164,1.594,178,1.891,256,2.161,257,2.965,263,3.233,286,2.342,296,2.342,297,2.563,298,2.342,299,2.86,310,3.343,318,4.762,459,2.563,557,2.86,558,2.86,584,4.083,585,4.083,701,2.86,788,2.86,789,5.512,790,4.726,791,4.726,792,3.31,793,4.726,794,4.726,795,3.31,796,4.726,797,3.31,798,4.726,799,3.31,800,3.31]],["title/modules/SidenavModule.html",[64,0.972,325,1.738]],["body/modules/SidenavModule.html",[2,1.91,3,0.149,4,0.13,9,0.13,26,0.017,31,0.44,32,0.741,33,0.149,34,0.149,35,1.296,43,2.23,53,2.204,55,2.204,61,0.008,62,0.011,63,0.008,64,1.003,66,1.962,67,1.793,68,3.066,69,1.888,70,2.204,71,2.179,78,2.702,79,1.993,80,1.706,82,2.009,85,2.009,114,1.92,324,3.363,325,3.596,337,2.86,338,1.993,477,3.983,501,4.593,502,3.387,594,3.036,801,3.921,802,3.921,803,3.921,804,3.921,805,3.036,806,3.921,807,3.921]],["title/components/WeatherComponent.html",[0,1.015,57,1.576]],["body/components/WeatherComponent.html",[0,1.617,1,1.639,2,1.693,3,0.15,4,0.131,5,2.01,6,2.01,7,2.01,8,2.01,9,0.131,11,2.01,12,3.819,13,3.618,15,2.718,17,2.718,19,0.431,22,1.617,23,1.256,26,0.016,31,0.25,32,0.747,33,0.15,34,0.15,35,1.307,36,2.718,37,2.718,38,2.01,39,3.299,40,2.01,41,1.311,42,2.01,43,1.199,44,2.01,45,1.564,46,2.01,47,1.564,48,2.01,49,1.639,50,2.01,51,1.564,52,2.01,53,1.639,54,2.01,55,1.639,56,2.01,57,2.691,58,3.101,59,2.01,60,2.01,61,0.008,62,0.011,63,0.008,151,2.115,163,1.564,164,1.904,256,2.446,257,3.259,263,3.491,516,4.14,808,3.416,809,6.059,810,5.347,811,3.954,812,3.954]],["title/classes/WeatherModel.html",[34,0.144,672,2.689]],["body/classes/WeatherModel.html",[3,0.109,4,0.096,9,0.096,19,0.314,20,0.806,22,0.768,23,1.696,25,0.956,26,0.017,27,1.78,28,1.474,29,1.351,31,0.321,33,0.162,34,0.109,41,0.705,61,0.006,62,0.009,63,0.006,129,1.385,132,2.173,133,0.519,141,1.478,155,1.385,157,0.994,159,1.315,196,2.353,198,0.801,199,2.437,200,2.437,201,2.437,202,2.437,203,1.769,205,2.912,209,1.547,220,1.921,224,1.856,228,3.679,230,3.679,231,3.979,236,2.485,238,2.485,239,2.485,240,2.485,241,2.485,242,2.485,243,3.214,244,2.485,245,3.686,246,3.428,247,1.753,248,1.753,249,1.753,250,1.753,251,1.193,252,2.034,253,0.37,254,1.251,390,3.97,522,3.428,666,5.386,667,4.86,668,4.86,669,4.86,670,4.86,671,2.485,672,3.018]],["title/modules/WeatherModule.html",[64,0.972,773,2.485]],["body/modules/WeatherModule.html",[2,1.964,3,0.157,4,0.138,9,0.138,26,0.017,31,0.391,32,0.782,33,0.157,34,0.157,35,1.369,43,2.255,57,2.287,61,0.009,62,0.012,63,0.009,64,1.059,66,2.006,67,1.894,68,3.152,69,1.994,70,2.287,71,2.24,78,2.803,79,2.104,80,1.802,82,2.084,85,2.084,114,1.992,324,3.401,325,3.401,337,2.967,338,2.104,773,5.016,813,4.141,814,4.141,815,4.141,816,4.141,817,3.206,818,4.141]],["title/injectables/WeatherService.html",[142,1.831,330,2.316]],["body/injectables/WeatherService.html",[3,0.163,4,0.143,9,0.143,19,0.47,20,1.069,22,1.149,23,1.33,25,0.583,26,0.017,27,1.102,28,1.488,29,1.363,31,0.452,32,0.813,33,0.163,34,0.163,41,1.056,61,0.009,62,0.012,63,0.009,70,1.785,84,2.459,117,4.382,128,4.093,132,1.761,133,0.777,141,1.251,142,2.726,144,3.045,147,2.624,153,3.72,154,5.2,155,3.045,157,1.488,158,4.382,159,1.969,173,2.316,175,3.045,176,3.334,177,3.045,178,2.459,330,3.449,656,2.815,697,3.701,759,3.72,819,3.72,820,4.896,821,4.306,822,4.306,823,4.306,824,4.306,825,4.306]],["title/coverage.html",[826,4.497]],["body/coverage.html",[0,1.682,1,0.902,2,1.869,9,0.072,10,1.88,25,0.295,26,0.017,34,0.239,43,0.66,45,0.861,47,0.861,49,0.902,51,0.861,53,0.902,55,0.902,57,0.902,61,0.005,62,0.007,63,0.005,66,1.79,70,1.428,128,1.326,130,1.88,131,1.88,139,1.243,142,2.059,143,1.17,145,1.88,168,0.947,174,2.667,196,0.786,197,1.88,198,2.03,222,1.326,223,2.667,234,1.539,243,1.243,253,0.904,255,1.88,305,6.835,327,1.423,328,1.423,329,1.423,330,1.326,331,2.667,341,2.436,343,1.539,360,1.88,361,1.685,365,1.539,377,1.326,378,2.667,382,1.326,386,1.539,387,2.667,390,1.326,391,1.685,392,1.88,409,2.667,435,1.88,470,2.667,510,1.88,517,1.326,518,2.667,521,1.539,522,1.326,523,1.423,533,2.667,539,1.88,593,2.667,600,1.326,602,1.88,607,1.88,610,1.539,611,1.88,614,1.423,616,1.88,619,1.88,626,1.539,627,2.667,635,1.423,641,1.539,646,1.88,649,1.539,650,1.88,651,1.88,656,1.423,657,1.88,659,1.88,662,1.88,666,2.667,672,1.539,688,1.685,690,1.88,711,1.88,712,2.667,729,1.88,742,1.88,774,2.667,783,1.88,788,1.88,805,2.667,808,1.88,817,2.667,819,1.88,826,1.88,827,2.176,828,2.176,829,2.176,830,6.796,831,4.275,832,7.396,833,7.427,834,4.861,835,5.297,836,4.275,837,2.176,838,4.275,839,4.275,840,2.176,841,2.176,842,2.176,843,2.176,844,4.2,845,2.976,846,4.2,847,2.976,848,1.88,849,2.176,850,2.176]],["title/dependencies.html",[67,2.093,851,3.166]],["body/dependencies.html",[26,0.017,32,0.884,61,0.01,62,0.012,63,0.01,67,2.14,69,2.253,87,5.16,88,4.625,113,2.378,173,2.517,209,2.517,210,4.042,338,2.378,413,4.042,414,4.042,576,4.042,776,4.042,852,4.679,853,6.575,854,4.679,855,4.679,856,4.679,857,4.679,858,4.679,859,4.679,860,4.679,861,4.679,862,4.679,863,4.679,864,4.679,865,4.679,866,4.679,867,4.679,868,4.679,869,5.973,870,4.679,871,4.679,872,4.679,873,4.679,874,4.679,875,4.679,876,4.679,877,4.679]],["title/miscellaneous/enumerations.html",[878,2.239,879,3.954]],["body/miscellaneous/enumerations.html",[19,0.461,26,0.016,29,2.476,58,2.558,61,0.009,62,0.012,63,0.009,94,3.956,97,3.956,100,3.408,368,3.956,629,3.956,642,4.33,820,4.33,878,2.99,879,3.653,880,4.228,881,5.592,882,4.228,883,5.592,884,5.592,885,4.228,886,5.592,887,5.592,888,4.228,889,5.592,890,5.592,891,5.592,892,4.228,893,5.592,894,5.592,895,4.228,896,5.592,897,4.831,898,5.592,899,4.831,900,4.228,901,5.592,902,4.228,903,5.592,904,5.592,905,5.592,906,5.592,907,5.592,908,5.592,909,5.592]],["title/index.html",[19,0.345,733,2.735,910,3.166]],["body/index.html",[0,1.67,4,0.14,13,2.03,26,0.012,30,5.406,41,1.033,61,0.009,62,0.012,63,0.009,80,1.834,168,1.834,217,3.264,267,3.264,296,2.981,511,2.981,643,3.264,647,4.822,658,3.642,853,3.642,911,5.581,912,4.215,913,6.257,914,6.257,915,7.12,916,4.215,917,4.215,918,4.215,919,4.215,920,4.215,921,4.215,922,5.581,923,7.263,924,4.215,925,4.215,926,4.215,927,4.215,928,4.215,929,4.215,930,4.215,931,4.215,932,4.215,933,6.257,934,6.257,935,4.215,936,6.929,937,4.215,938,4.215,939,4.215,940,4.215,941,4.215,942,3.642,943,5.581,944,6.661,945,4.215,946,5.581,947,5.581,948,4.215,949,6.661,950,4.215,951,4.215,952,4.215,953,6.257,954,4.215,955,4.215,956,4.215,957,3.264,958,4.215,959,4.215,960,4.215]],["title/modules.html",[66,1.579]],["body/modules.html",[26,0.013,61,0.01,62,0.013,63,0.01,65,3.354,66,1.438,76,3.101,77,3.101,88,5.851,324,2.169,325,2.169,326,3.101,464,3.354,469,3.101,477,2.709,527,3.354,532,3.101,592,3.101,767,3.354,772,3.101,773,3.101,961,7.557,962,7.557,963,7.869,964,7.467,965,7.467]],["title/overview.html",[957,4.031]],["body/overview.html",[1,2.575,2,0.791,26,0.017,35,0.826,43,2.293,61,0.005,62,0.008,63,0.005,64,0.639,65,4.649,66,0.758,67,1.142,68,1.269,69,1.203,70,1.035,71,0.902,72,2.158,73,2.158,74,2.158,75,2.158,76,3.052,77,4.926,78,1.949,79,1.269,80,1.087,112,1.269,129,1.203,143,2.511,144,1.766,319,2.158,320,2.158,321,2.158,322,2.158,323,2.158,324,3.56,325,3.549,326,3.052,327,3.052,328,3.052,329,3.052,330,2.845,464,4.961,465,2.158,467,2.158,469,3.052,477,3.228,527,4.961,528,2.158,531,2.158,532,3.052,588,2.158,591,2.158,592,3.052,601,0.863,688,1.934,767,5.143,768,2.158,769,2.158,772,3.052,773,4.529,957,1.934,966,2.498,967,3.835,968,2.498,969,2.498,970,2.498,971,2.498]],["title/routes.html",[112,2.646]],["body/routes.html",[26,0.015,61,0.013,62,0.015,63,0.013,112,3.129]],["title/miscellaneous/variables.html",[878,2.239,972,3.954]],["body/miscellaneous/variables.html",[2,2.223,19,0.26,25,1.014,26,0.017,27,0.946,28,2.577,29,2.362,43,0.723,45,0.943,47,0.943,49,0.988,51,0.943,53,0.988,55,0.988,57,0.988,58,1.691,61,0.005,62,0.008,63,0.005,66,2.13,70,2.118,174,3.956,188,2.864,190,2.864,270,2.059,324,1.09,325,1.09,331,1.845,354,2.864,361,2.864,409,3.956,470,1.845,533,1.845,593,1.845,630,2.864,774,1.845,805,1.845,817,1.845,820,2.864,844,2.059,845,4.414,846,2.059,847,2.059,848,3.195,878,1.686,897,3.195,899,3.195,942,3.195,972,2.059,973,5.109,974,5.109,975,3.699,976,3.699,977,3.699,978,3.699,979,3.699,980,3.699,981,3.699,982,3.699,983,3.699,984,3.699,985,3.699,986,3.699,987,3.699,988,5.853,989,3.699,990,3.699,991,3.699,992,3.699,993,3.699,994,5.109,995,3.699,996,3.699,997,3.699,998,3.699,999,3.699,1000,3.699,1001,3.699,1002,3.699,1003,3.699,1004,3.699,1005,3.699,1006,3.699,1007,2.383,1008,2.383,1009,2.383]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":305,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":583,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":459,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":969,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":294,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":457,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":299,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":311,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":579,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11.0.0",{"_index":853,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":966,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":317,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["16",{"_index":970,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":295,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":799,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":458,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["3",{"_index":968,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":798,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.855499",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":456,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400px",{"_index":452,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["4c87",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6.6.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":971,"title":{},"body":{"overview.html":{}}}],["868c",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":967,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":461,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["action",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":694,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":628,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["aes",{"_index":411,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.decrypt(cipher",{"_index":417,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.encrypt(value",{"_index":420,"title":{},"body":{"classes/Encoding.html":{}}}],["afa5425d",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afd9",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["amount",{"_index":293,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":913,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":338,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":776,"title":{},"body":{"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":267,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"index.html":{}}}],["application/json",{"_index":725,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["applicationservice",{"_index":143,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":76,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":128,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["args",{"_index":155,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["args[key",{"_index":213,"title":{},"body":{"classes/BaseModel.html":{}}}],["array",{"_index":376,"title":{},"body":{"injectables/ContextService.html":{},"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["artifacts",{"_index":937,"title":{},"body":{"index.html":{}}}],["atob(value",{"_index":415,"title":{},"body":{"classes/Encoding.html":{}}}],["authreq",{"_index":726,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["auto",{"_index":315,"title":{},"body":{"components/ContainerComponent.html":{}}}],["autocomplete",{"_index":820,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocompletemodule",{"_index":481,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":928,"title":{},"body":{"index.html":{}}}],["available",{"_index":965,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":287,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["basemodel",{"_index":196,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["basemodel:12",{"_index":248,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["basemodel:13",{"_index":249,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["basemodel:5",{"_index":247,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["basemodel:6",{"_index":250,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["baseurl",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":303,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["black",{"_index":454,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":237,"title":{},"body":{"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"classes/DayModel.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{}}}],["bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":580,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bottom",{"_index":463,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["browse",{"_index":963,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":419,"title":{},"body":{"classes/Encoding.html":{}}}],["build",{"_index":936,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":483,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["calc(#{$navbar",{"_index":566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caption",{"_index":453,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":448,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":485,"title":{},"body":{"modules/FeatureModule.html":{}}}],["category",{"_index":620,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["center",{"_index":562,"title":{},"body":{"components/HeaderComponent.html":{}}}],["change",{"_index":930,"title":{},"body":{"index.html":{}}}],["check",{"_index":956,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":487,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":475,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["cipher",{"_index":416,"title":{},"body":{"classes/Encoding.html":{}}}],["city",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":34,"title":{"classes/AppSettings.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":129,"title":{},"body":{"classes/AppSettings.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"overview.html":{}}}],["cli",{"_index":914,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["client_id",{"_index":409,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":319,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":321,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":322,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":323,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":320,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":465,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":468,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":466,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":467,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_forecastmodule",{"_index":528,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_forecastmodule_declarations",{"_index":530,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":529,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":531,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":588,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":589,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":590,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":591,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":768,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":770,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":771,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":769,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":801,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":804,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":802,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":803,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":813,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_declarations",{"_index":814,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":815,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":816,"title":{},"body":{"modules/WeatherModule.html":{}}}],["code",{"_index":217,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/ITimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":919,"title":{},"body":{"index.html":{}}}],["color",{"_index":449,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["colorscheme",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colorscheme.light",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{}}}],["colortheme",{"_index":146,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["column",{"_index":314,"title":{},"body":{"components/ContainerComponent.html":{}}}],["command",{"_index":958,"title":{},"body":{"index.html":{}}}],["common.scss",{"_index":286,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/request",{"_index":340,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":342,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":344,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/services/application.service",{"_index":274,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":337,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":642,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["conditionsmodel",{"_index":222,"title":{"classes/ConditionsModel.html":{}},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["config",{"_index":794,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(`request",{"_index":738,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["const",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Encoding.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["constants/color",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/data",{"_index":369,"title":{},"body":{"injectables/ContextService.html":{}}}],["constants/panel",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":264,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{}}}],["constructor(args",{"_index":203,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["constructor(config",{"_index":792,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":153,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":178,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":749,"title":{},"body":{"components/SearchComponent.html":{}}}],["container",{"_index":258,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":260,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":259,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":345,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":346,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":594,"title":{},"body":{"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":595,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":596,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":347,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":806,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":807,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":348,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":43,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":77,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":358,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":326,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":301,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["context",{"_index":361,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextservice",{"_index":327,"title":{"injectables/ContextService.html":{}},"body":{"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"coverage.html":{},"overview.html":{}}}],["countries",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":629,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":603,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["countrymodel",{"_index":377,"title":{"classes/CountryModel.html":{}},"body":{"classes/CountryModel.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["coverage",{"_index":826,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":199,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["crypto",{"_index":413,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["currentconditions",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentdate",{"_index":543,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentroute",{"_index":261,"title":{},"body":{"components/ContainerComponent.html":{}}}],["d",{"_index":556,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dailyforecasts",{"_index":519,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["datasets",{"_index":368,"title":{},"body":{"injectables/ContextService.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":205,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["date.now",{"_index":734,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["day",{"_index":667,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["daymodel",{"_index":386,"title":{"classes/DayModel.html":{}},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["debouncetime",{"_index":755,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":763,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":393,"title":{},"body":{"classes/Encoding.html":{}}}],["decoded",{"_index":426,"title":{},"body":{"classes/Encoding.html":{}}}],["decryptaes",{"_index":394,"title":{},"body":{"classes/Encoding.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":174,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IDictionary.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":67,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":925,"title":{},"body":{"index.html":{}}}],["development",{"_index":921,"title":{},"body":{"index.html":{}}}],["df144bdb3b49",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":313,"title":{},"body":{"components/ContainerComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":935,"title":{},"body":{"index.html":{}}}],["directory",{"_index":940,"title":{},"body":{"index.html":{}}}],["display",{"_index":296,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":939,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":756,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":489,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":950,"title":{},"body":{"index.html":{}}}],["ease",{"_index":585,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["eeee",{"_index":554,"title":{},"body":{"components/HeaderComponent.html":{}}}],["effectivedate",{"_index":621,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":622,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["elapsed",{"_index":737,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":617,"title":{},"body":{"interfaces/IGeoPosition.html":{}}}],["enc",{"_index":412,"title":{},"body":{"classes/Encoding.html":{}}}],["encodebase64",{"_index":395,"title":{},"body":{"classes/Encoding.html":{}}}],["encoded",{"_index":424,"title":{},"body":{"classes/Encoding.html":{}}}],["encoding",{"_index":391,"title":{"classes/Encoding.html":{}},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["encryptaes",{"_index":396,"title":{},"body":{"classes/Encoding.html":{}}}],["encrypted",{"_index":422,"title":{},"body":{"classes/Encoding.html":{}}}],["end",{"_index":949,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":623,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":624,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["englishname",{"_index":379,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["englishtype",{"_index":604,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["enumerations",{"_index":879,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":175,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Encoding.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":668,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["epochtime",{"_index":225,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["event",{"_index":278,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.ts",{"_index":651,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":281,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":547,"title":{},"body":{"components/HeaderComponent.html":{}}}],["execute",{"_index":946,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["extend",{"_index":557,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":224,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["f",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["failure",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":270,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["favorites",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":437,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":436,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":471,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":472,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":45,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":464,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":474,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":469,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":477,"title":{"modules/FeatureModule.html":{}},"body":{"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules.html":{},"overview.html":{}}}],["fieldsetmodule",{"_index":491,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":931,"title":{},"body":{"index.html":{}}}],["first",{"_index":440,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":643,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"index.html":{}}}],["flex",{"_index":297,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":655,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["foreach(key",{"_index":374,"title":{},"body":{"injectables/ContextService.html":{}}}],["forecast",{"_index":511,"title":{},"body":{"components/ForecastComponent.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast.component.html",{"_index":513,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":512,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":918,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":920,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":534,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":535,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":47,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodel",{"_index":517,"title":{"classes/ForecastModel.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["forecastmodule",{"_index":527,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{},"overview.html":{}}}],["forecastroutes",{"_index":537,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":532,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["forecasts",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":775,"title":{},"body":{"modules/SearchModule.html":{}}}],["forroot",{"_index":333,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":334,"title":{},"body":{"modules/ContainerModule.html":{}}}],["fromstorage",{"_index":397,"title":{},"body":{"classes/Encoding.html":{}}}],["fromstorage(key",{"_index":403,"title":{},"body":{"classes/Encoding.html":{}}}],["fsevents",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":952,"title":{},"body":{"index.html":{}}}],["generate",{"_index":933,"title":{},"body":{"index.html":{}}}],["generated",{"_index":912,"title":{},"body":{"index.html":{}}}],["geoposition",{"_index":630,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/variables.html":{}}}],["getcurrentposition",{"_index":185,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getflag",{"_index":200,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["geticon",{"_index":201,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["getting",{"_index":910,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":148,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["gmtoffset",{"_index":663,"title":{},"body":{"interfaces/ITimeZone.html":{}}}],["go",{"_index":955,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":289,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":964,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":688,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":689,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":209,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"dependencies.html":{}}}],["guid.newguid",{"_index":216,"title":{},"body":{"classes/BaseModel.html":{}}}],["hasprecipitation",{"_index":226,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/DayModel.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["header",{"_index":540,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":542,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":541,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":49,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":324,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":598,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":592,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headers",{"_index":722,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["headline",{"_index":520,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":298,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":953,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":176,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/dictionary",{"_index":371,"title":{},"body":{"injectables/ContextService.html":{}}}],["helpers/search",{"_index":758,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":308,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":158,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://dataservice.accuweather.com",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.com/locations/v1",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.comcurrentconditions/v1",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.comforecasts/v1/daily/5day",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":927,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":339,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":154,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httpevent",{"_index":720,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":717,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":721,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":716,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":732,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":600,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"interfaces/IAdministrativeArea.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["icon",{"_index":388,"title":{},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{}}}],["iconditions",{"_index":234,"title":{"interfaces/IConditions.html":{}},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["iconphrase",{"_index":389,"title":{},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":382,"title":{"interfaces/ICountry.html":{}},"body":{"classes/CountryModel.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["id",{"_index":380,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{}}}],["iday",{"_index":390,"title":{"interfaces/IDay.html":{}},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["identifier",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["idictionary",{"_index":365,"title":{"interfaces/IDictionary.html":{}},"body":{"injectables/ContextService.html":{},"interfaces/IDictionary.html":{},"coverage.html":{}}}],["ielevation",{"_index":610,"title":{"interfaces/IElevation.html":{}},"body":{"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":521,"title":{"interfaces/IForecast.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["igeoposition",{"_index":139,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["iheadline",{"_index":523,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":626,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["image",{"_index":565,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imetric",{"_index":614,"title":{"interfaces/IMetric.html":{}},"body":{"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"coverage.html":{}}}],["imperial",{"_index":612,"title":{},"body":{"interfaces/IElevation.html":{}}}],["implements",{"_index":256,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./search/search.module').then(m",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":608,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":246,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["initcontext",{"_index":362,"title":{},"body":{"injectables/ContextService.html":{}}}],["injectable",{"_index":142,"title":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":796,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputevent",{"_index":654,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":791,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":493,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":280,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept",{"_index":713,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":715,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":341,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":712,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:10",{"_index":731,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:6",{"_index":714,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:7",{"_index":730,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:9",{"_index":718,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptors",{"_index":710,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":253,"title":{"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":601,"title":{},"body":{"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["isalias",{"_index":631,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["isdaylightsaving",{"_index":664,"title":{},"body":{"interfaces/ITimeZone.html":{}}}],["isdaytime",{"_index":227,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":649,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isearchresult",{"_index":656,"title":{"interfaces/ISearchResult.html":{}},"body":{"interfaces/ISearchResult.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["isfavorite",{"_index":644,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["isloading",{"_index":150,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":451,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["itemperature",{"_index":243,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["items",{"_index":561,"title":{},"body":{"components/HeaderComponent.html":{}}}],["itimezone",{"_index":635,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["iweather",{"_index":522,"title":{"interfaces/IWeather.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["jquery",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":414,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["json.parse(decoded",{"_index":429,"title":{},"body":{"classes/Encoding.html":{}}}],["json.stringify(value",{"_index":434,"title":{},"body":{"classes/Encoding.html":{}}}],["justify",{"_index":300,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["karma",{"_index":948,"title":{},"body":{"index.html":{}}}],["key",{"_index":406,"title":{},"body":{"classes/Encoding.html":{},"interfaces/IDictionary.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["key).tostring",{"_index":421,"title":{},"body":{"classes/Encoding.html":{}}}],["key).tostring(enc.utf8",{"_index":418,"title":{},"body":{"classes/Encoding.html":{}}}],["keyfiltermodule",{"_index":495,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":442,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["languages",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["latitude",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/IGeoPosition.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":462,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":605,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":292,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":288,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":228,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["literal",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":916,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localizedname",{"_index":381,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["localizedtype",{"_index":606,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":229,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["localstorage.getitem(key",{"_index":423,"title":{},"body":{"classes/Encoding.html":{}}}],["localstorage.setitem(key",{"_index":431,"title":{},"body":{"classes/Encoding.html":{}}}],["location",{"_index":162,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationmodel",{"_index":641,"title":{"classes/LocationModel.html":{}},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["locationresolver",{"_index":343,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationtype",{"_index":884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/IGeoPosition.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.searchmodule",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":312,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":699,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{}}}],["map(event",{"_index":736,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["map(x",{"_index":706,"title":{},"body":{"guards/LocationResolver.html":{}}}],["margin",{"_index":304,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["matching",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":316,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maximum",{"_index":660,"title":{},"body":{"interfaces/ITemperature.html":{}}}],["measure",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":151,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":613,"title":{},"body":{"interfaces/IElevation.html":{}}}],["min",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":661,"title":{},"body":{"interfaces/ITemperature.html":{}}}],["miscellaneous",{"_index":878,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":555,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mobilelink",{"_index":230,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["mode.enum",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":141,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":198,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":385,"title":{},"body":{"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{}}}],["model.ts:11",{"_index":383,"title":{},"body":{"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{}}}],["model.ts:12",{"_index":207,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:13",{"_index":208,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:16",{"_index":236,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:17",{"_index":238,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:18",{"_index":239,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:19",{"_index":240,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:20",{"_index":241,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:21",{"_index":242,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:22",{"_index":244,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:23",{"_index":245,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:24",{"_index":235,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/LocationModel.html":{}}}],["model.ts:25",{"_index":674,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:26",{"_index":675,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:27",{"_index":676,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:28",{"_index":677,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:29",{"_index":678,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:30",{"_index":679,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:31",{"_index":680,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:32",{"_index":681,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:33",{"_index":682,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:34",{"_index":683,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:35",{"_index":684,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:36",{"_index":685,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:37",{"_index":686,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:38",{"_index":687,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:39",{"_index":673,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:5",{"_index":206,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:6",{"_index":204,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:9",{"_index":384,"title":{},"body":{"classes/CountryModel.html":{},"classes/DayModel.html":{}}}],["models/administrativearea",{"_index":636,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["models/autocomplete",{"_index":759,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/base",{"_index":251,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["models/conditions",{"_index":637,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/country",{"_index":638,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/day",{"_index":671,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["models/elevation",{"_index":618,"title":{},"body":{"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":639,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/geoposition",{"_index":140,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/headline",{"_index":524,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["models/metric",{"_index":615,"title":{},"body":{"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{}}}],["models/temperature",{"_index":252,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["models/timezone",{"_index":640,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/weather",{"_index":525,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":64,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":66,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":336,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":954,"title":{},"body":{"index.html":{}}}],["ms",{"_index":741,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["multi",{"_index":353,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":926,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":273,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":184,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":168,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":277,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(authreq",{"_index":728,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":735,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["nextoffsetchange",{"_index":665,"title":{},"body":{"interfaces/ITimeZone.html":{}}}],["ng",{"_index":923,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["ngoninit",{"_index":263,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":669,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["none",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":430,"title":{},"body":{"classes/Encoding.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{}}}],["number",{"_index":220,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/DayModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["object",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args)?.foreach(key",{"_index":211,"title":{},"body":{"classes/BaseModel.html":{}}}],["object.keys(datasets",{"_index":373,"title":{},"body":{"injectables/ContextService.html":{}}}],["observable",{"_index":697,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["of(null",{"_index":709,"title":{},"body":{"guards/LocationResolver.html":{}}}],["onchange",{"_index":363,"title":{},"body":{"injectables/ContextService.html":{},"components/HeaderComponent.html":{}}}],["oninit",{"_index":257,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":745,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":746,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":262,"title":{},"body":{"components/ContainerComponent.html":{}}}],["opacity",{"_index":455,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":133,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["originalevent",{"_index":652,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["out",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":551,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":545,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":306,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":957,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":851,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":309,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":960,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelmode.push",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{}}}],["panelstate",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":285,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":157,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["params",{"_index":824,"title":{},"body":{"injectables/WeatherService.html":{}}}],["path",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["pathmatch",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":705,"title":{},"body":{"guards/LocationResolver.html":{}}}],["placeholder",{"_index":444,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["popper.js",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":460,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["preview",{"_index":917,"title":{},"body":{"index.html":{}}}],["previous",{"_index":447,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":291,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":480,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/autocomplete",{"_index":482,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":484,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":486,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":488,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":490,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":492,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":494,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":496,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":498,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":500,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":502,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":504,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":506,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":508,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":479,"title":{},"body":{"modules/FeatureModule.html":{}}}],["private",{"_index":147,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":941,"title":{},"body":{"index.html":{}}}],["production",{"_index":942,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":911,"title":{},"body":{"index.html":{}}}],["promise",{"_index":698,"title":{},"body":{"guards/LocationResolver.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":951,"title":{},"body":{"index.html":{}}}],["provide",{"_index":351,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${code}/shiny/${size}.png",{"_index":219,"title":{},"body":{"classes/BaseModel.html":{}}}],["providers.weather.icons}/${code}.svg",{"_index":221,"title":{},"body":{"classes/BaseModel.html":{}}}],["public",{"_index":132,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["q",{"_index":825,"title":{},"body":{"injectables/WeatherService.html":{}}}],["query",{"_index":653,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":497,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":582,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rank",{"_index":632,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{}}}],["redirectto",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":959,"title":{},"body":{"index.html":{}}}],["region",{"_index":633,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["reload",{"_index":929,"title":{},"body":{"index.html":{}}}],["representative",{"_index":443,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":719,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":727,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.headers",{"_index":723,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":739,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["requestinterceptor",{"_index":328,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":691,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":693,"title":{},"body":{"guards/LocationResolver.html":{}}}],["responseinterceptor",{"_index":329,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":355,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["returns",{"_index":163,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":563,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ripplemodule",{"_index":499,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":696,"title":{},"body":{"guards/LocationResolver.html":{}}}],["router",{"_index":265,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":359,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":476,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":538,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":599,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":782,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":112,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{}}}],["routing.module.ts",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["run",{"_index":915,"title":{},"body":{"index.html":{}}}],["running",{"_index":943,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":173,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":700,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["scaffolding",{"_index":932,"title":{},"body":{"index.html":{}}}],["scheme.enum",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["scheme.enum.ts",{"_index":881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["screen",{"_index":569,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":744,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":743,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":777,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":778,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["searchcomponent",{"_index":51,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":767,"title":{"modules/SearchModule.html":{}},"body":{"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchroutes",{"_index":781,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":772,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["searchtext",{"_index":747,"title":{},"body":{"components/SearchComponent.html":{}}}],["second",{"_index":445,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["secret",{"_index":410,"title":{},"body":{"classes/Encoding.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":924,"title":{},"body":{"index.html":{}}}],["server",{"_index":922,"title":{},"body":{"index.html":{}}}],["services/application.service",{"_index":701,"title":{},"body":{"guards/LocationResolver.html":{},"components/SidenavComponent.html":{}}}],["services/context.service",{"_index":349,"title":{},"body":{"modules/ContainerModule.html":{}}}],["services/weather.service",{"_index":350,"title":{},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{}}}],["set('content",{"_index":724,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["sets.enum",{"_index":370,"title":{},"body":{"injectables/ContextService.html":{}}}],["sets.enum.ts",{"_index":883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":177,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":785,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":784,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":131,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":135,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":136,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":137,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":138,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":53,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":152,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setuserlocation(location",{"_index":160,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["severity",{"_index":625,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["shadow",{"_index":558,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":318,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":790,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":789,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":800,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":797,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":55,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":325,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["size",{"_index":218,"title":{},"body":{"classes/BaseModel.html":{},"components/HeaderComponent.html":{}}}],["slide",{"_index":441,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":670,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["space",{"_index":302,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["spec\\.ts",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast.module.ts",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":357,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":255,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:12",{"_index":269,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:13",{"_index":271,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:14",{"_index":266,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:25",{"_index":268,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":272,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":331,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:38",{"_index":335,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":478,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":597,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":539,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":546,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":549,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":550,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":593,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":783,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":787,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":786,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":788,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":793,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":795,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":805,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":473,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":435,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":439,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":438,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":470,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":536,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":510,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":515,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":514,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":533,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":780,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":742,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:14",{"_index":754,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:15",{"_index":750,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:17",{"_index":751,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:25",{"_index":752,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:27",{"_index":753,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":774,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather.component.ts",{"_index":808,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":812,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":811,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":817,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":130,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts",{"_index":607,"title":{},"body":{"interfaces/IDictionary.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts:3",{"_index":609,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["src/common/helpers/encoding.ts",{"_index":392,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["src/common/helpers/encoding.ts:18",{"_index":408,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:5",{"_index":399,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:6",{"_index":400,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:7",{"_index":401,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:8",{"_index":402,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:9",{"_index":404,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/search",{"_index":650,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/request",{"_index":711,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":729,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":602,"title":{},"body":{"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":657,"title":{},"body":{"interfaces/ISearchResult.html":{},"coverage.html":{}}}],["src/common/models/base",{"_index":197,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":223,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":378,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":387,"title":{},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":611,"title":{},"body":{"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":518,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":616,"title":{},"body":{"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":619,"title":{},"body":{"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":627,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":646,"title":{},"body":{"interfaces/IMetric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":659,"title":{},"body":{"interfaces/ITemperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":662,"title":{},"body":{"interfaces/ITimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":666,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":690,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:11",{"_index":695,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:9",{"_index":692,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":145,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:13",{"_index":172,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":169,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":165,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":170,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":171,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":156,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:25",{"_index":166,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:30",{"_index":161,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/context.service.ts",{"_index":360,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{}}}],["src/common/services/context.service.ts:11",{"_index":367,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:8",{"_index":366,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:9",{"_index":364,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/weather.service.ts",{"_index":819,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:11",{"_index":822,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:9",{"_index":821,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":733,"title":{"index.html":{}},"body":{"interceptors/ResponseInterceptor.html":{}}}],["state.enum",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":332,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{}}}],["stored",{"_index":938,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":167,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"components/SearchComponent.html":{}}}],["subscribe",{"_index":283,"title":{},"body":{"components/ContainerComponent.html":{}}}],["success",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":748,"title":{},"body":{"components/SearchComponent.html":{}}}],["super(args",{"_index":254,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["support",{"_index":961,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":962,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":757,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":764,"title":{},"body":{"components/SearchComponent.html":{}}}],["t",{"_index":405,"title":{},"body":{"classes/Encoding.html":{}}}],["table",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":501,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tel",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":231,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":945,"title":{},"body":{"index.html":{}}}],["tests",{"_index":944,"title":{},"body":{"index.html":{}}}],["text",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IHeadline.html":{}}}],["third",{"_index":446,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.application",{"_index":704,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.isloading",{"_index":282,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.isloading$.next(true",{"_index":702,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.sidenavstate",{"_index":275,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.userlocation",{"_index":703,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.args.sidenavstate",{"_index":182,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.colortheme",{"_index":179,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.context[key",{"_index":375,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.created",{"_index":214,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.currentdate",{"_index":553,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.currentroute",{"_index":279,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.dailyforecasts",{"_index":526,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["this.datasets",{"_index":645,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["this.decodebase64(encoded",{"_index":427,"title":{},"body":{"classes/Encoding.html":{}}}],["this.decryptaes(encrypted",{"_index":425,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encodebase64(typeof",{"_index":433,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encryptaes",{"_index":432,"title":{},"body":{"classes/Encoding.html":{}}}],["this.getuserlocation",{"_index":183,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.http.get(providers.weather.autocomplete",{"_index":823,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(providers.weather.endpoints.locations",{"_index":707,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.initcontext",{"_index":372,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.isloading",{"_index":284,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.onchange.emit",{"_index":552,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.primengconfig.ripple",{"_index":509,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.router.events.subscribe",{"_index":276,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchtext",{"_index":760,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext$.next(event.query",{"_index":766,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext$.pipe",{"_index":762,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setuserlocation",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setuserlocation(default_location",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavmode",{"_index":180,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":181,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.suggestions",{"_index":761,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.uid",{"_index":215,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.userlocation",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.userlocation$.next(location",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.weather.autocomplete(text",{"_index":765,"title":{},"body":{"components/SearchComponent.html":{}}}],["this[key",{"_index":212,"title":{},"body":{"classes/BaseModel.html":{}}}],["timezone",{"_index":634,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmodule",{"_index":503,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglebuttonmodule",{"_index":505,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":544,"title":{},"body":{"components/HeaderComponent.html":{}}}],["took",{"_index":740,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["tooltipmodule",{"_index":507,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":290,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostorage",{"_index":398,"title":{},"body":{"classes/Encoding.html":{}}}],["tostorage(key",{"_index":407,"title":{},"body":{"classes/Encoding.html":{}}}],["transition",{"_index":584,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":581,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":354,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":210,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":428,"title":{},"body":{"classes/Encoding.html":{}}}],["uid",{"_index":202,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["unit",{"_index":647,"title":{},"body":{"interfaces/IMetric.html":{},"index.html":{}}}],["unittype",{"_index":648,"title":{},"body":{"interfaces/IMetric.html":{}}}],["use",{"_index":934,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":352,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":134,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["usevalue",{"_index":356,"title":{},"body":{"modules/ContainerModule.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":972,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":658,"title":{},"body":{"interfaces/ISearchResult.html":{},"index.html":{}}}],["via",{"_index":947,"title":{},"body":{"index.html":{}}}],["void",{"_index":164,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather.component.html",{"_index":810,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":809,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather.component",{"_index":818,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.module",{"_index":779,"title":{},"body":{"modules/SearchModule.html":{}}}],["weathercomponent",{"_index":57,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":232,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["weathermodel",{"_index":672,"title":{"classes/WeatherModel.html":{}},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["weathermodule",{"_index":773,"title":{"modules/WeatherModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":330,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":233,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":450,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":310,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":516,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":708,"title":{},"body":{"guards/LocationResolver.html":{}}}],["y",{"_index":307,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["yes",{"_index":159,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorScheme             } from '@constants/color-scheme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ContainerModule.forRoot({\n      colorScheme: ColorScheme.Light,\n      sidenavMode: PanelMode.Push,\n      sidenavState: PanelState.Hide,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'search', loadChildren: () => \"import('./search/search.module').then(m => m.SearchModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'search' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                colorScheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorScheme  } from '@constants/color-scheme.enum'\nimport { PanelMode    } from '@constants/panel-mode.enum'\nimport { PanelState   } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public colorScheme ?: ColorScheme ;\n  public sidenavMode ?: PanelMode   ;\n  public sidenavState?: PanelState  ;\n  public userLocation?: IGeoPosition;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colorTheme\n                            \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                isLoading$\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(location: IGeoPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                IGeoPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colorTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject          } from 'rxjs'\nimport { HttpClient       } from '@angular/common/http'\nimport { Injectable       } from '@angular/core'\nimport { ColorScheme       } from '@constants/color-scheme.enum'\nimport { PanelMode        } from '@constants/panel-mode.enum'\nimport { PanelState       } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION } from '@env/environment'\nimport { AppSettings      } from '@helpers/app-settings'\nimport { IGeoPosition      } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly userLocation$: Subject = new Subject();\n  public readonly isLoading$: Subject = new Subject();\n  public colorTheme  : ColorScheme ;\n  public sidenavMode : PanelMode  ;\n  public sidenavState: PanelState ;\n  public userLocation: IGeoPosition;\n  constructor(private http: HttpClient, private args?: AppSettings) {\n    this.colorTheme = ColorScheme.Light;\n    this.sidenavMode = PanelMode.Push;\n    this.sidenavState = this.args.sidenavState;\n    this.getUserLocation();\n  }\n  private getUserLocation = () => navigator.geolocation\n    .getCurrentPosition(\n      (success) => this.setUserLocation({ latitude: success.coords.latitude, longitude: success.coords.longitude }),\n      (failure) => this.setUserLocation(DEFAULT_LOCATION)\n    );\n  private setUserLocation(location: IGeoPosition) {\n    this.userLocation = location;\n    this.userLocation$.next(location);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Guid      } from 'guid-ts'\nimport { providers } from '@env/environment'\n\nexport class BaseModel {\n  public created: Date         ;\n  public uid    : Guid | string;\n  constructor(args?: any) {\n    Object.keys(args)?.forEach(key => this[key] ? this[key] = this[key] ?? args[key] : {});\n    this.created = new Date();\n    this.uid = Guid.newGuid();\n  }\n  public getFlag = (code: string, size: string) => `${providers.countryFlags.baseUrl}/${code}/shiny/${size}.png`;\n  public getIcon = (code: number) => `${providers.weather.icons}/${code}.svg`;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConditionsModel.html":{"url":"classes/ConditionsModel.html","title":"class - ConditionsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConditionsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITemperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel   } from '@models/base-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  epochTime               ?: number     ;\n  hasPrecipitation        ?: boolean    ;\n  isDayTime               ?: boolean    ;\n  link                    ?: string     ;\n  localObservationDateTime?: Date       ;\n  mobileLink              ?: string     ;\n  temperature             ?: ITemperature;\n  weatherIcon             ?: number     ;\n  weatherText             ?: string     ;\n}\nexport class ConditionsModel extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : ITemperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component         , OnInit } from '@angular/core'\nimport { NavigationEnd     , Router } from '@angular/router'                     ;\nimport { ApplicationService         } from '@common/services/application.service'\nimport { PanelState                 } from '@constants/panel-state.enum'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string         ;\n  public isLoading   : boolean = false;\n  public sidenavState: PanelState     ;\n  constructor(private application: ApplicationService, private router: Router) {\n    this.sidenavState = this.application.sidenavState;\n    this.router.events.subscribe({\n      next: event =>\n        this.currentRoute = !(event instanceof NavigationEnd) ? this.currentRoute :\n          `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n    this.application.isLoading$\n      .subscribe({ next: value => this.isLoading = value });\n  }\n  ngOnInit() { }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ContextService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                             } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule         } from '@angular/core'\nimport { RequestInterceptor                       } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                      } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                         } from '@common/resolvers/location.resolver'\nimport { ApplicationService                       } from '@common/services/application.service'\nimport { ContainerRoutingModule                   } from '@container/container-routing.module'\nimport { ContainerComponent                       } from '@container/container.component'\nimport { HeaderModule                             } from '@container/header/header.module'\nimport { SidenavModule                            } from '@container/sidenav/sidenav.module'\nimport { AppSettings                              } from '@helpers/app-settings'\nimport { ContextService                           } from '@services/context.service'\nimport { WeatherService                           } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor, multi: true },\n    ApplicationService,\n    LocationResolver  ,\n    ContextService    ,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContextService.html":{"url":"injectables/ContextService.html","title":"injectable - ContextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/context.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                initContext\n                            \n                            \n                                    Public\n                                    Readonly\n                                onChange$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            onChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject     } from 'rxjs'\nimport { Injectable  } from '@angular/core'\nimport { DataSets    } from '@constants/data-sets.enum'\nimport { IDictionary } from '@helpers/dictionary'\n\n@Injectable()\nexport class ContextService {\n  private readonly context: IDictionary = {};\n  public readonly onChange$: Subject = new Subject();\n  constructor() { this.initContext(); }\n  private initContext = () =>\n    Object.keys(DataSets)\n      .forEach(key => this.context[key] = new Array());\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountryModel.html":{"url":"classes/CountryModel.html","title":"class - CountryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  englishName  ?: string;\n  id           ?: string;\n  localizedName?: string;\n}\nexport class CountryModel extends BaseModel {\n  public englishName  : string;\n  public id           : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DayModel.html":{"url":"classes/DayModel.html","title":"class - DayModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DayModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  hasPrecipitation?: boolean;\n  icon            ?: number ;\n  iconPhrase      ?: string ;\n}\nexport class DayModel extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encoding.html":{"url":"classes/Encoding.html","title":"class - Encoding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encoding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/encoding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decodeBase64\n                            \n                            \n                                    Static\n                                decryptAES\n                            \n                            \n                                    Static\n                                encodeBase64\n                            \n                            \n                                    Static\n                                encryptAES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromStorage\n                            \n                            \n                                    Static\n                                toStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decryptAES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encryptAES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromStorage(key: string, type?)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:9\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toStorage(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CLIENT_ID as secret } from '@env/environment';\nimport { AES, enc } from 'crypto-js';\n\nexport class Encoding {\n  public static decodeBase64 = (value: string): string => atob(value);\n  public static decryptAES = (cipher: string, key: string = secret): string => AES.decrypt(cipher, key).toString(enc.Utf8);\n  public static encodeBase64 = (value: string): string => btoa(value);\n  public static encryptAES = (value: string, key: string = secret): string => AES.encrypt(value, key).toString();\n  public static fromStorage(key: string, type?: new () => T): T {\n    const encrypted: string = localStorage.getItem(key);\n    if (encrypted) {\n      const encoded: string = this.decryptAES(encrypted);\n      const decoded: string = this.decodeBase64(encoded);\n      return typeof (type) == 'string' ? decoded : JSON.parse(decoded);\n    }\n    return null;\n  }\n  public static toStorage(key: string, value: T) {\n    localStorage.setItem(key, this.encryptAES(\n      this.encodeBase64(typeof (value) == 'string'\n        ? value\n        : JSON.stringify(value))));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForecastModel.html":{"url":"classes/ForecastModel.html","title":"class - ForecastModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForecastModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dailyForecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dailyForecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IWeather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IHeadline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IHeadline } from '@models/headline-model'\nimport { IWeather  } from '@models/weather-model'\n\nexport interface IForecast {\n  dailyForecasts?: IWeather [];\n  headline      ?: IHeadline  ;\n}\nexport class ForecastModel extends BaseModel {\n  public dailyForecasts: IWeather [];\n  public headline      : IHeadline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.dailyForecasts = this.dailyForecasts ?? new Array();\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_exports\n\n\n\ncluster_ForecastModule_declarations\n\n\n\ncluster_ForecastModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForecastRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public onChange: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav = () => this.onChange.emit();\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  {{this.currentDate | date: 'EEEE MMMM d, y'}}\n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-date {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      display: flex;\n      align-items: center;\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites        {{this.currentDate | date: \\'EEEE MMMM d, y\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        countryId\n                                \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        englishType\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        level\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        localizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryId\n                                    \n                                \n                                \n                                    \n                                        countryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishType\n                                    \n                                \n                                \n                                    \n                                        englishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedType\n                                    \n                                \n                                \n                                    \n                                        localizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAdministrativeArea {\n  countryId?:     string;\n  englishName?:   string;\n  englishType?:   string;\n  id?:            string;\n  level?:         number;\n  localizedName?: string;\n  localizedType?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        epochTime\n                                \n                                \n                                            Optional\n                                        hasPrecipitation\n                                \n                                \n                                            Optional\n                                        isDayTime\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        localObservationDateTime\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        temperature\n                                \n                                \n                                            Optional\n                                        weatherIcon\n                                \n                                \n                                            Optional\n                                        weatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        epochTime\n                                    \n                                \n                                \n                                    \n                                        epochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        hasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDayTime\n                                    \n                                \n                                \n                                    \n                                        isDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        localObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherText\n                                    \n                                \n                                \n                                    \n                                        weatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel   } from '@models/base-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  epochTime               ?: number     ;\n  hasPrecipitation        ?: boolean    ;\n  isDayTime               ?: boolean    ;\n  link                    ?: string     ;\n  localObservationDateTime?: Date       ;\n  mobileLink              ?: string     ;\n  temperature             ?: ITemperature;\n  weatherIcon             ?: number     ;\n  weatherText             ?: string     ;\n}\nexport class ConditionsModel extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : ITemperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  englishName  ?: string;\n  id           ?: string;\n  localizedName?: string;\n}\nexport class CountryModel extends BaseModel {\n  public englishName  : string;\n  public id           : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasPrecipitation\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        iconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        hasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconPhrase\n                                    \n                                \n                                \n                                    \n                                        iconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  hasPrecipitation?: boolean;\n  icon            ?: number ;\n  iconPhrase      ?: string ;\n}\nexport class DayModel extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDictionary.html":{"url":"interfaces/IDictionary.html","title":"interface - IDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/dictionary.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BaseModel[]\n\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/dictionary.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model';\n\nexport interface IDictionary {\n  [key: string]: BaseModel[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imperial\n                                \n                                \n                                            Optional\n                                        metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imperial\n                                    \n                                \n                                \n                                    \n                                        imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metric\n                                    \n                                \n                                \n                                    \n                                        metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMetric } from '@models/metric-model'\n\nexport interface IElevation {\n  imperial?: IMetric;\n  metric  ?: IMetric;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dailyForecasts\n                                \n                                \n                                            Optional\n                                        headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dailyForecasts\n                                    \n                                \n                                \n                                    \n                                        dailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headline\n                                    \n                                \n                                \n                                    \n                                        headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IHeadline } from '@models/headline-model'\nimport { IWeather  } from '@models/weather-model'\n\nexport interface IForecast {\n  dailyForecasts?: IWeather [];\n  headline      ?: IHeadline  ;\n}\nexport class ForecastModel extends BaseModel {\n  public dailyForecasts: IWeather [];\n  public headline      : IHeadline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.dailyForecasts = this.dailyForecasts ?? new Array();\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        elevation\n                                \n                                \n                                            Optional\n                                        latitude\n                                \n                                \n                                            Optional\n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        elevation\n                                    \n                                \n                                \n                                    \n                                        elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  elevation?: IElevation;\n  latitude ?: number    ;\n  longitude?: number    ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        category\n                                \n                                \n                                            Optional\n                                        effectiveDate\n                                \n                                \n                                            Optional\n                                        effectiveEpochDate\n                                \n                                \n                                            Optional\n                                        endDate\n                                \n                                \n                                            Optional\n                                        endEpochDate\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        severity\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        effectiveDate\n                                    \n                                \n                                \n                                    \n                                        effectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        effectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        effectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endEpochDate\n                                    \n                                \n                                \n                                    \n                                        endEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        severity\n                                    \n                                \n                                \n                                    \n                                        severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHeadline {\n  category          ?: string;\n  effectiveDate     ?: Date  ;\n  effectiveEpochDate?: number;\n  endDate           ?: Date  ;\n  endEpochDate      ?: number;\n  link              ?: string;\n  mobileLink        ?: string;\n  severity          ?: number;\n  text              ?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        administrativeArea\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        dataSets\n                                \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        geoPosition\n                                \n                                \n                                            Optional\n                                        isAlias\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        rank\n                                \n                                \n                                            Optional\n                                        region\n                                \n                                \n                                            Optional\n                                        timeZone\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        administrativeArea\n                                    \n                                \n                                \n                                    \n                                        administrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataSets\n                                    \n                                \n                                \n                                    \n                                        dataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoPosition\n                                    \n                                \n                                \n                                    \n                                        geoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAlias\n                                    \n                                \n                                \n                                    \n                                        isAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeZone\n                                    \n                                \n                                \n                                    \n                                        timeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAdministrativeArea               } from '@models/administrativeArea-model'\nimport { BaseModel                         } from '@models/base-model'\nimport { ConditionsModel                   } from '@models/conditions-model'\nimport { ICountry           , CountryModel } from '@models/country-model'\nimport { ForecastModel                     } from '@models/forecast-model'\nimport { IGeoPosition                      } from '@models/geoPosition-model'\nimport { ITimeZone                         } from '@models/timeZone-model'\n\nexport interface ILocation {\n  administrativeArea?: IAdministrativeArea;\n  country           ?: ICountry           ;\n  dataSets          ?: string[]           ;\n  englishName       ?: string             ;\n  geoPosition       ?: IGeoPosition       ;\n  isAlias           ?: boolean            ;\n  key               ?: string             ;\n  localizedName     ?: string             ;\n  rank              ?: number             ;\n  region            ?: ICountry           ;\n  timeZone          ?: ITimeZone          ;\n  type              ?: string             ;\n}\nexport class LocationModel extends BaseModel {\n  public administrativeArea: IAdministrativeArea;\n  public conditions        : ConditionsModel    ;\n  public country           : CountryModel       ;\n  public dataSets          : string[]           ;\n  public englishName       : string             ;\n  public flag              : string             ;\n  public forecast          : ForecastModel      ;\n  public geoPosition       : IGeoPosition       ;\n  public isAlias           : boolean            ;\n  public isFavorite        : boolean            ;\n  public key               : string             ;\n  public localizedName     : string             ;\n  public rank              : number             ;\n  public region            : CountryModel       ;\n  public timeZone          : ITimeZone          ;\n  public type              : string             ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitType\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitType\n                                    \n                                \n                                \n                                    \n                                        unitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMetric {\n  unit    ?: string;\n  unitType?: number;\n  value   ?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchResult.html":{"url":"interfaces/ISearchResult.html","title":"interface - ISearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        administrativeArea\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        rank\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        administrativeArea\n                                    \n                                \n                                \n                                    \n                                        administrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAdministrativeArea } from '@models/administrativeArea-model'\n\nexport interface ISearchResult {\n  administrativeArea?: IAdministrativeArea;\n  country           ?: IAdministrativeArea;\n  key               ?: string             ;\n  localizedName     ?: string             ;\n  rank              ?: number             ;\n  type              ?: string             ;\n  version           ?: number             ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        maximum\n                                \n                                \n                                            Optional\n                                        minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maximum\n                                    \n                                \n                                \n                                    \n                                        maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimum\n                                    \n                                \n                                \n                                    \n                                        minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMetric } from '@models/metric-model'\n\nexport interface ITemperature {\n  maximum?: IMetric;\n  minimum?: IMetric;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        code\n                                \n                                \n                                            Optional\n                                        gmtOffset\n                                \n                                \n                                            Optional\n                                        isDaylightSaving\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gmtOffset\n                                    \n                                \n                                \n                                    \n                                        gmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        isDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        nextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITimeZone {\n  code            ?: string ;\n  gmtOffset       ?: number ;\n  isDaylightSaving?: boolean;\n  name            ?: string ;\n  nextOffsetChange?: Date   ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        day\n                                \n                                \n                                            Optional\n                                        epochDate\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        night\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        epochDate\n                                    \n                                \n                                \n                                    \n                                        epochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                    \n                                \n                                \n                                    \n                                        night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel    } from '@models/base-model'\nimport { IDay         } from '@models/day-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  date       ?: Date        ;\n  day        ?: IDay        ;\n  epochDate  ?: number      ;\n  link       ?: string      ;\n  mobileLink ?: string      ;\n  night      ?: IDay        ;\n  sources    ?: string[]    ;\n  temperature?: ITemperature;\n}\nexport class WeatherModel extends BaseModel {\n  public date       : Date        ;\n  public day        : IDay        ;\n  public epochDate  : number      ;\n  public link       : string      ;\n  public mobileLink : string      ;\n  public night      : IDay        ;\n  public sources    : string[]    ;\n  public temperature: ITemperature;\n  constructor(args?: IWeather) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationModel.html":{"url":"classes/LocationModel.html","title":"class - LocationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                flag\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConditionsModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CountryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ForecastModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CountryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IAdministrativeArea               } from '@models/administrativeArea-model'\nimport { BaseModel                         } from '@models/base-model'\nimport { ConditionsModel                   } from '@models/conditions-model'\nimport { ICountry           , CountryModel } from '@models/country-model'\nimport { ForecastModel                     } from '@models/forecast-model'\nimport { IGeoPosition                      } from '@models/geoPosition-model'\nimport { ITimeZone                         } from '@models/timeZone-model'\n\nexport interface ILocation {\n  administrativeArea?: IAdministrativeArea;\n  country           ?: ICountry           ;\n  dataSets          ?: string[]           ;\n  englishName       ?: string             ;\n  geoPosition       ?: IGeoPosition       ;\n  isAlias           ?: boolean            ;\n  key               ?: string             ;\n  localizedName     ?: string             ;\n  rank              ?: number             ;\n  region            ?: ICountry           ;\n  timeZone          ?: ITimeZone          ;\n  type              ?: string             ;\n}\nexport class LocationModel extends BaseModel {\n  public administrativeArea: IAdministrativeArea;\n  public conditions        : ConditionsModel    ;\n  public country           : CountryModel       ;\n  public dataSets          : string[]           ;\n  public englishName       : string             ;\n  public flag              : string             ;\n  public forecast          : ForecastModel      ;\n  public geoPosition       : IGeoPosition       ;\n  public isAlias           : boolean            ;\n  public isFavorite        : boolean            ;\n  public key               : string             ;\n  public localizedName     : string             ;\n  public rank              : number             ;\n  public region            : CountryModel       ;\n  public timeZone          : ITimeZone          ;\n  public type              : string             ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable            , of      } from 'rxjs'\nimport { map                             } from 'rxjs/operators'\nimport { HttpClient                      } from '@angular/common/http'\nimport { Injectable                      } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ApplicationService              } from '@services/application.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    this.application.isLoading$.next(true);\n\n    return !this.application.userLocation\n      ? this.application\n        .userLocation$\n        .pipe(\n          map(x => {\n            // this.http.get(providers.weather.endpoints.locations)\n            return x;\n          })) : of(null);\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const headers = req.headers\n      .set('Content-Type', 'application/json');\n    const authReq = req.clone({ headers });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n          const elapsed = Date.now() - started;\n          console.log(`Request for ${req.urlWithParams} took ${elapsed} ms.`);\n        }\n        return event;\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Private\n                                    Optional\n                                searchText$\n                            \n                            \n                                    Public\n                                    Optional\n                                suggestions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            suggestions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable        , Subject                         } from 'rxjs'\nimport { debounceTime      , distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component         , OnInit                          } from '@angular/core'\nimport { ISearchEvent                                        } from '@helpers/search-event'\nimport { ISearchResult                                       } from '@models/autoComplete-model'\nimport { WeatherService                                      } from '@services/weather.service'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  private searchText$?: Subject;\n  public suggestions$?: Observable;\n  constructor(private weather: WeatherService) { }\n  ngOnInit() {\n    this.searchText$ = new Subject();\n    this.suggestions$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text))\n    );\n  }\n  public onSearch = (event: ISearchEvent) =>\n    this.searchText$.next(event.query);\n  public onSelect = (value: ISearchEvent) => null;\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{result}}\n        \n      \n    \n  \n  \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .app-search {\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{result}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FormsModule         } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\nimport { WeatherModule       } from '@weather/weather.module'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, SearchRoutingModule, FormsModule, WeatherModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { ApplicationService } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_imports\n\n\n\ncluster_SidenavModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherModel.html":{"url":"classes/WeatherModel.html","title":"class - WeatherModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITemperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel    } from '@models/base-model'\nimport { IDay         } from '@models/day-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  date       ?: Date        ;\n  day        ?: IDay        ;\n  epochDate  ?: number      ;\n  link       ?: string      ;\n  mobileLink ?: string      ;\n  night      ?: IDay        ;\n  sources    ?: string[]    ;\n  temperature?: ITemperature;\n}\nexport class WeatherModel extends BaseModel {\n  public date       : Date        ;\n  public day        : IDay        ;\n  public epochDate  : number      ;\n  public link       : string      ;\n  public mobileLink : string      ;\n  public night      : IDay        ;\n  public sources    : string[]    ;\n  public temperature: ITemperature;\n  constructor(args?: IWeather) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule     } from '@angular/common'\nimport { NgModule         } from '@angular/core'\nimport { WeatherComponent } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable    } from 'rxjs'\nimport { HttpClient    } from '@angular/common/http'\nimport { Injectable    } from '@angular/core'\nimport { providers     } from '@env/environment'\nimport { AppSettings   } from '@helpers/app-settings'\nimport { ISearchResult } from '@models/autoComplete-model'\n\n@Injectable()\nexport class WeatherService {\n  constructor(private http: HttpClient, private args?: AppSettings) { }\n  public autoComplete = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } });\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/dictionary.ts\n            \n            interface\n            IDictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/encoding.ts\n            \n            class\n            Encoding\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            ISearchResult\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            ConditionsModel\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            CountryModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            DayModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            ForecastModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            LocationModel\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            WeatherModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/services/context.service.ts\n            \n            injectable\n            ContextService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.6.0\n        \n            crypto-js : ^4.0.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorScheme   (src/.../color-scheme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-scheme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorScheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CLIENT_ID   (src/.../environment.ts)\n                        \n                        \n                            CLIENT_ID   (src/.../environment.prod.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude: 32.109333,\n  longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey           : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                             ,\n    autocomplete     : 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl          : 'http://dataservice.accuweather.com'                                       ,\n    currentconditions: 'http://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts        : 'http://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition      : 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons            : 'https://www.accuweather.com/images/weathericons'                          ,\n    locations        : 'http://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude: 32.109333,\n  longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey           : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                             ,\n    autocomplete     : 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl          : 'http://dataservice.accuweather.com'                                       ,\n    currentconditions: 'http://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts        : 'http://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition      : 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons            : 'https://www.accuweather.com/images/weathericons'                          ,\n    locations        : 'http://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
