var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractModel.html",[0,0.09,1,0.818]],["body/classes/AbstractModel.html",[0,0.103,1,1.225,2,1.523,3,0.143,4,0.125,5,0.125,6,6.448,7,0.97,8,0.359,9,0.683,10,1.106,11,2.618,12,2.413,13,1.344,14,0.651,15,0.97,16,1.225,17,1.45,18,5.88,19,1.007,20,0.015,21,0.545,22,1.922,23,1.523,24,2.145,25,4.482,26,2.667,27,1.378,28,4.482,29,4.482,30,0.211,31,2.983,32,2.983,33,3.892,34,0.143,35,3.504,36,4.482,37,5.88,38,4.482,39,4.482,40,1.169,41,5.88,42,4.482,43,5.88,44,4.482,45,0.008,46,0.01,47,0.008]],["title/classes/AdministrativeArea.html",[0,0.09,48,2.174]],["body/classes/AdministrativeArea.html",[0,0.089,1,1.518,2,1.315,3,0.123,4,0.108,5,0.108,7,0.837,8,0.31,9,0.619,10,1.137,11,2.125,12,2.24,13,1.175,14,0.664,15,0.837,16,1.11,17,1.544,19,0.869,20,0.014,21,0.471,22,1.265,23,1.315,24,1.265,26,1.482,27,1.491,30,0.139,34,0.17,45,0.007,46,0.009,47,0.007,48,2.949,49,5.806,50,1.29,51,5.701,52,4.087,53,5.701,54,5.701,55,3.633,56,5.701,57,3.633,58,3.546,59,3.026,60,3.026,61,3.026,62,1.65,63,2.576,64,2.776,65,2.731,66,1.61,67,1.61,68,1.61,69,1.61,70,0.903,71,0.664,72,0.328,73,0.937]],["title/components/AppComponent.html",[74,1.236,75,1.784]],["body/components/AppComponent.html",[0,0.104,3,0.145,4,0.127,5,0.127,8,0.363,9,0.688,13,1.144,14,0.385,15,1.428,17,1.189,20,0.014,27,0.842,30,0.163,34,0.145,45,0.008,46,0.01,47,0.008,74,2.077,75,3.18,76,2.179,77,2.512,78,2.512,79,2.512,80,2.512,81,3.941,82,2.512,83,4.347,84,4.122,85,5.928,86,3.281,87,6.602,88,3.281,89,5.928,90,5.734,91,5.928,92,1.81,93,1.603,94,5.149,95,1.019,96,1.737,97,3.281,98,3.281,99,2.512,100,3.875,101,2.512,102,2.512,103,1.603,104,2.512,105,1.971,106,2.512,107,2.061,108,2.512,109,1.971,110,2.512,111,2.061,112,2.512,113,2.061,114,2.512,115,1.971,116,1.603,117,2.512,118,2.512]],["title/modules/AppModule.html",[119,1.19,120,2.818]],["body/modules/AppModule.html",[0,0.098,3,0.136,4,0.119,5,0.119,20,0.015,30,0.279,34,0.136,45,0.008,46,0.01,47,0.008,75,3.582,95,0.957,96,1.631,119,1.291,120,5.616,121,1.448,122,2.127,123,3.543,124,3.36,125,1.932,126,1.7,127,3.701,128,3.701,129,3.701,130,3.701,131,4.872,132,4.736,133,3.148,134,2.358,135,1.935,136,4.261,137,2.366,138,4.446,139,2.127,140,2.366,141,5.687,142,4.939,143,3.332,144,5.687,145,4.261,146,4.261,147,2.653,148,4.261,149,2.836,150,3.056,151,3.056,152,4.079,153,3.54,154,3.332,155,2.496,156,2.653,157,4.261,158,4.261,159,3.701,160,4.261,161,3.701,162,3.701,163,2.836,164,3.701]],["title/modules/AppRoutingModule.html",[119,1.19,131,2.615]],["body/modules/AppRoutingModule.html",[0,0.12,3,0.167,4,0.146,5,0.146,20,0.015,30,0.233,34,0.207,45,0.009,46,0.012,47,0.009,95,1.178,116,2.297,121,1.782,126,2.092,131,4.327,137,2.182,140,2.705,165,5.245,166,3.266,167,4.047,168,3.412,169,2.495,170,1.715,171,5.245,172,5.067,173,3.762,174,6.501,175,5.245,176,5.245,177,5.245,178,5.245,179,5.245,180,5.245,181,5.245,182,5.245]],["title/classes/AppSettings.html",[0,0.09,183,2.446]],["body/classes/AppSettings.html",[0,0.107,2,1.585,3,0.149,4,0.13,5,0.13,8,0.373,9,0.701,10,1.113,14,0.6,15,1.448,17,1.469,20,0.014,21,0.942,30,0.254,34,0.149,45,0.008,46,0.011,47,0.008,71,0.8,149,4.454,150,3.346,151,3.346,152,4.799,153,3.758,154,3.648,155,3.919,156,2.905,159,5.812,161,5.812,163,4.454,183,3.758,184,6.519,185,4.052,186,5.812,187,6.036,188,3.919,189,4.666,190,4.666,191,4.666,192,3.346]],["title/injectables/ApplicationService.html",[193,1.869,194,2.062]],["body/injectables/ApplicationService.html",[0,0.067,3,0.093,4,0.082,5,0.082,8,0.234,9,0.506,10,1.118,13,0.564,14,0.608,15,0.632,16,0.609,17,1.477,19,0.657,20,0.015,21,0.356,22,1.424,23,0.993,30,0.247,34,0.093,40,1.749,45,0.005,46,0.008,47,0.005,71,0.501,92,1.738,93,2.435,95,0.657,149,3.466,150,2.097,151,2.097,152,3.735,153,2.712,154,2.286,155,3.05,156,1.82,163,3.466,183,3.593,192,2.097,193,2.072,194,2.287,195,2.097,196,2.539,197,5.621,198,5.208,199,5.621,200,5.208,201,5.208,202,4.523,203,2.599,204,5.208,205,5.208,206,4.357,207,4.125,208,2.923,209,5.621,210,2.923,211,2.923,212,2.923,213,2.883,214,2.923,215,2.923,216,2.287,217,2.923,218,2.923,219,2.923,220,2.923,221,2.923,222,6.172,223,1.618,224,2.286,225,1.391,226,2.286,227,2.097,228,1.459,229,2.923,230,2.923,231,2.539,232,2.923,233,2.923,234,2.923,235,2.923,236,2.923,237,2.923,238,2.923,239,2.923,240,4.357,241,2.923,242,2.923,243,1.946,244,2.923,245,4.357,246,4.357,247,2.923,248,2.923,249,2.539,250,2.923,251,2.9,252,4.357,253,4.357,254,2.539,255,2.923,256,4.357]],["title/classes/AutoComplete.html",[0,0.09,257,2.174]],["body/classes/AutoComplete.html",[0,0.075,1,1.449,2,1.117,3,0.105,4,0.092,5,0.092,7,0.711,8,0.263,9,0.551,10,1.133,11,1.895,12,1.746,13,1.076,14,0.651,15,0.711,16,0.989,17,1.526,19,0.739,20,0.015,21,0.4,22,1.075,23,1.117,24,1.075,26,1.259,27,1.4,30,0.2,34,0.151,40,1.239,45,0.006,46,0.008,47,0.006,48,4.017,50,1.15,55,3.38,57,3.086,58,2.189,61,2.571,62,1.827,63,2.189,64,2.359,65,2.54,66,1.368,67,1.368,68,1.368,69,1.368,70,0.767,71,0.814,72,0.279,73,0.796,92,1.895,93,1.678,125,1.117,225,1.564,257,2.629,258,5.762,259,3.205,260,4.842,261,3.38,262,4.379,263,4.842,264,4.774,265,4.064,266,3.407,267,2.856,268,2.359,269,2.571,270,2.359,271,2.359,272,2.359,273,2.359,274,2.856,275,2.856,276,2.856,277,2.856,278,2.856]],["title/interfaces/CacheResult.html",[72,0.333,279,2.615]],["body/interfaces/CacheResult.html",[3,0.171,4,0.15,5,0.15,7,1.162,8,0.43,9,0.766,14,0.606,20,0.014,21,0.947,27,1.325,30,0.193,34,0.171,45,0.009,46,0.012,47,0.009,62,1.933,72,0.456,139,2.68,279,4.39,280,1.824,281,4.663,282,5.822,283,5.822,284,5.34,285,5.34]],["title/injectables/CacheService.html",[193,1.869,286,2.615]],["body/injectables/CacheService.html",[0,0.121,3,0.122,4,0.107,5,0.107,8,0.306,9,0.614,10,0.955,13,1.02,14,0.514,15,1.311,17,1.375,19,1.188,20,0.015,21,0.644,30,0.217,34,0.169,35,4.738,40,1.38,45,0.007,46,0.009,47,0.007,62,1.037,71,0.657,92,2.11,93,1.869,95,0.86,139,1.911,170,2.136,193,2.516,195,2.747,203,3.539,279,2.549,282,2.994,283,5.362,284,2.747,285,5.312,286,3.52,287,2.994,288,6.159,289,5.262,290,5.262,291,2.298,292,4.594,293,5.289,294,5.262,295,5.312,296,3.83,297,3.794,298,2.298,299,4.687,300,4.594,301,3.83,302,3.18,303,3.293,304,4.594,305,3.83,306,3.326,307,3.293,308,1.593,309,2.747,310,2.994,311,3.326,312,3.326,313,3.326,314,4.594,315,4.594,316,3.326,317,1.822,318,3.326,319,4.594,320,3.326,321,4.594,322,3.326,323,3.326,324,3.326,325,3.326]],["title/classes/Conditions.html",[0,0.09,326,2.062]],["body/classes/Conditions.html",[0,0.067,1,1.397,2,0.995,3,0.093,4,0.082,5,0.082,7,0.633,8,0.234,9,0.506,10,1.137,11,1.74,12,1.604,13,1.006,14,0.648,15,0.633,16,0.909,17,1.53,19,0.658,20,0.015,21,0.356,22,0.957,23,0.995,24,1.888,26,1.121,27,1.382,30,0.207,34,0.139,40,0.764,45,0.008,46,0.008,47,0.005,50,1.056,58,1.949,62,1.753,65,2.403,66,1.218,67,1.218,68,1.218,69,1.218,70,0.683,71,0.748,72,0.248,73,0.709,92,1.74,93,1.541,125,0.995,170,0.957,216,3.399,225,1.393,266,2.1,268,2.1,269,3.411,303,1.823,317,1.393,326,2.289,327,5.823,328,5.017,329,4.527,330,3.739,331,4.143,332,5.017,333,3.596,334,5.017,335,3.596,336,3.713,337,5.017,338,5.017,339,3.383,340,2.543,341,2.543,342,2.29,343,2.29,344,2.29,345,2.928,346,2.928,347,2.1,348,2.543,349,2.414,350,2.1,351,2.1,352,2.1,353,2.543,354,2.543,355,2.543,356,2.543,357,1.537,358,1.949,359,2.543]],["title/components/ContainerComponent.html",[74,1.236,103,1.388]],["body/components/ContainerComponent.html",[0,0.064,3,0.088,4,0.077,5,0.077,8,0.222,9,0.486,10,1.045,13,0.973,14,0.512,15,0.6,17,1.321,19,0.623,20,0.015,21,0.337,27,0.777,30,0.236,34,0.088,45,0.005,46,0.007,47,0.005,74,1.587,75,1.259,76,1.539,77,1.534,78,1.534,79,1.534,80,1.534,82,1.534,83,3.915,84,3.772,86,2.317,88,2.317,92,1.106,93,0.979,95,0.623,96,1.061,97,2.317,98,2.317,99,1.534,100,3.111,101,1.534,102,1.534,103,1.986,104,1.534,105,1.204,106,1.534,107,1.259,108,1.534,109,1.204,110,1.534,111,1.259,112,1.534,113,1.259,114,1.534,115,1.204,116,1.479,117,1.534,118,1.534,149,1.845,150,1.988,151,1.988,153,1.726,155,2.954,156,1.726,163,3.357,164,2.407,169,1.319,194,2.95,197,4.381,199,4.381,203,1.383,207,3.534,223,1.534,228,1.383,231,4.381,249,2.407,251,1.845,254,2.407,291,1.819,298,1.204,302,1.455,308,1.742,360,2.407,361,2.954,362,6.344,363,5.044,364,4.186,365,5.044,366,5.044,367,3.292,368,2.167,369,5.72,370,4.186,371,3.002,372,2.772,373,2.772,374,2.772,375,2.772,376,2.772,377,4.186,378,1.845,379,2.772,380,2.772,381,2.772,382,2.772,383,3.273,384,4.186,385,2.407,386,2.772,387,4.186,388,1.845,389,1.988,390,2.407,391,2.772,392,2.772,393,3.617,394,4.381,395,3.273,396,3.273,397,2.407,398,2.407,399,3.357,400,4.863,401,4.327,402,4.381,403,3.944,404,4.96,405,3.944,406,3.944,407,2.167,408,3.636,409,6.033,410,4.381,411,5.62,412,3.273,413,1.988,414,3.357,415,2.772,416,2.407,417,3.636,418,3.636,419,4.881,420,3.617,421,2.167,422,3.636]],["title/modules/ContainerModule.html",[119,1.19,132,2.615]],["body/modules/ContainerModule.html",[0,0.068,3,0.095,4,0.083,5,0.083,13,0.576,14,0.253,17,0.599,19,0.671,20,0.015,21,0.363,22,1.447,23,1.015,30,0.276,34,0.095,45,0.005,46,0.008,47,0.005,76,1.939,95,0.671,96,1.143,103,2.583,119,0.905,121,1.981,122,1.49,123,2.919,124,1.567,125,1.981,126,2.103,132,5.356,133,2.45,134,1.653,135,1.356,137,1.841,138,3.46,139,1.49,140,2.194,147,1.859,170,1.447,183,3.877,194,3.423,226,2.335,227,2.142,286,2.946,291,1.297,298,1.297,307,2.755,317,1.42,378,1.987,423,2.593,424,2.593,425,2.593,426,2.593,427,2.593,428,3.477,429,3.648,430,3.648,431,3.648,432,4.341,433,4.341,434,4.341,435,3.423,436,2.335,437,4.426,438,2.986,439,4.426,440,2.986,441,5.273,442,4.426,443,2.142,444,2.592,445,1.653,446,5.273,447,2.986,448,3.174,449,2.986,450,2.946,451,2.593,452,2.986,453,2.986,454,1.987,455,2.986,456,2.986,457,2.986,458,2.593,459,1.987,460,5.832,461,5.273,462,4.426,463,3.46,464,2.986]],["title/modules/ContainerRoutingModule.html",[119,1.19,432,2.615]],["body/modules/ContainerRoutingModule.html",[0,0.131,3,0.182,4,0.16,5,0.16,20,0.014,30,0.246,34,0.218,45,0.01,46,0.012,47,0.01,95,1.286,121,1.945,126,2.283,137,2.382,140,2.853,166,3.564,167,4.269,168,3.599,169,2.723,170,1.872,432,4.564,465,5.725,466,5.725,467,5.725]],["title/classes/Country.html",[0,0.09,259,2.062]],["body/classes/Country.html",[0,0.101,1,1.57,2,1.497,3,0.14,4,0.123,5,0.123,7,0.953,8,0.352,9,0.675,10,1.115,11,2.319,12,2.392,13,1.255,14,0.657,15,0.953,16,1.211,17,1.511,19,0.99,20,0.014,21,0.536,22,1.44,23,1.497,24,1.44,26,1.686,27,1.45,30,0.158,34,0.185,45,0.008,46,0.01,47,0.008,50,1.408,52,4.308,55,3.831,65,2.879,66,1.833,67,1.833,68,1.833,69,1.833,70,1.027,71,0.755,72,0.374,73,1.067,259,3.052,468,5.411,469,4.308,470,3.62,471,3.445]],["title/classes/Day.html",[0,0.09,357,2.062]],["body/classes/Day.html",[0,0.092,1,1.531,2,1.359,3,0.127,4,0.112,5,0.112,7,0.865,8,0.32,9,0.632,10,1.126,11,2.173,12,2.003,13,1.196,14,0.651,15,0.865,16,1.135,17,1.521,19,0.898,20,0.015,21,0.487,22,1.307,23,1.359,24,1.307,26,1.53,27,1.333,30,0.196,34,0.174,45,0.007,46,0.01,47,0.007,50,1.319,62,1.678,63,2.661,65,2.768,66,1.663,67,1.663,68,1.663,69,1.663,70,0.932,71,0.686,72,0.339,73,0.968,92,1.595,93,1.413,125,1.359,216,3.253,225,1.902,330,4.445,331,4.773,357,2.86,470,2.489,472,5.618,473,5.203,474,5.779,475,4.143,476,3.907,477,2.489,478,3.472]],["title/classes/Elevation.html",[0,0.09,479,2.446]],["body/classes/Elevation.html",[0,0.098,1,1.558,2,1.451,3,0.136,4,0.119,5,0.119,7,0.924,8,0.342,9,0.661,10,1.111,11,2.272,12,2.094,13,1.236,14,0.653,15,0.924,16,1.186,17,1.499,19,0.959,20,0.015,21,0.52,22,1.396,23,1.451,24,1.396,26,1.635,27,1.189,30,0.204,34,0.181,40,1.486,45,0.008,46,0.01,47,0.008,50,1.379,65,2.844,66,1.777,67,1.777,68,1.777,69,1.777,70,0.996,71,0.977,72,0.362,73,1.034,470,3.546,471,3.339,479,3.546,480,5.345,481,4.903,482,4.257,483,4.256,484,3.547,485,3.063,486,3.063,487,3.063,488,3.063,489,3.063]],["title/interceptors/ExceptionInterceptor.html",[433,2.615,448,2.818]],["body/interceptors/ExceptionInterceptor.html",[0,0.095,3,0.132,4,0.116,5,0.116,8,0.332,13,0.801,14,0.352,17,0.833,19,1.256,20,0.015,21,0.505,30,0.253,34,0.201,45,0.007,46,0.011,47,0.007,95,0.933,125,1.411,139,2.073,170,1.828,193,2.659,207,3.701,223,2.299,225,1.976,251,4.206,284,2.979,291,2.429,295,4.848,297,2.979,298,1.804,308,1.728,317,2.659,433,3.721,490,3.608,491,4.371,492,2.979,493,4.855,494,4.855,495,5.871,496,4.154,497,5.59,498,3.608,499,4.855,500,4.154,501,2.765,502,2.979,503,3.608,504,3.608,505,3.608,506,3.608,507,3.608,508,3.608,509,3.608,510,3.608,511,3.608,512,3.608,513,3.248,514,3.608,515,4.855,516,3.608,517,3.608,518,3.608,519,3.608,520,3.608,521,4.855,522,3.608,523,3.608,524,3.608,525,3.608,526,3.608,527,3.608,528,3.608,529,3.608,530,4.371,531,3.608,532,2.979,533,3.608,534,3.608,535,3.608,536,3.608,537,3.608,538,3.608,539,3.608,540,3.608,541,4.154,542,4.154,543,4.154,544,4.154,545,4.154]],["title/components/FavoritesComponent.html",[74,1.236,105,1.707]],["body/components/FavoritesComponent.html",[0,0.083,3,0.115,4,0.101,5,0.101,8,0.29,9,0.591,10,0.819,13,1.135,14,0.432,15,0.784,17,1.179,19,0.814,20,0.015,21,0.441,30,0.241,34,0.115,40,1.327,45,0.006,46,0.009,47,0.006,71,0.621,74,1.851,75,1.646,76,1.871,77,2.006,78,2.006,79,2.006,80,2.006,82,2.006,83,4.165,84,3.949,86,2.817,88,2.817,92,1.445,93,1.28,95,0.814,96,1.387,97,2.817,98,2.817,99,2.006,100,3.531,101,2.006,102,2.006,103,1.28,104,2.006,105,2.772,106,2.006,107,1.646,108,2.006,109,1.574,110,2.006,111,1.646,112,2.006,113,1.646,114,2.006,115,1.574,116,2.078,117,2.006,118,2.006,173,4.82,228,1.808,291,2.211,298,1.574,302,1.902,308,2.117,361,3.446,367,3.737,388,2.412,389,2.599,393,2.599,401,2.599,412,2.833,413,2.599,414,2.412,435,3.349,459,2.412,546,3.147,547,5.882,548,5.089,549,2.833,550,5.089,551,3.623,552,3.184,553,2.817,554,2.412,555,3.147,556,3.147,557,2.599,558,3.623,559,3.623,560,3.623,561,3.147,562,3.623,563,5.089,564,5.089,565,5.089,566,5.089,567,5.882,568,3.147,569,2.833,570,3.623,571,3.623,572,3.623,573,3.623,574,3.147,575,3.147,576,3.623,577,4.219,578,3.623,579,3.623,580,2.833,581,3.147]],["title/modules/FavoritesModule.html",[119,1.19,582,2.818]],["body/modules/FavoritesModule.html",[0,0.096,3,0.133,4,0.116,5,0.116,20,0.015,30,0.243,34,0.133,45,0.007,46,0.01,47,0.007,76,2.329,95,0.937,96,1.597,103,2.705,105,2.436,119,1.264,121,2.301,122,2.083,123,3.506,124,2.19,125,1.905,126,2.526,133,3.104,134,2.31,135,1.895,137,2.333,140,2.333,147,2.598,170,1.833,428,3.642,429,3.821,430,3.821,431,3.821,444,3.285,445,2.31,582,5.839,583,3.624,584,4.173,585,4.173,586,3.624,587,4.843,588,3.263,589,4.173,590,3.624]],["title/modules/FavoritesRoutingModule.html",[119,1.19,587,2.615]],["body/modules/FavoritesRoutingModule.html",[0,0.125,3,0.174,4,0.153,5,0.153,20,0.015,30,0.258,34,0.212,45,0.01,46,0.012,47,0.01,74,1.72,95,1.228,105,2.897,121,1.857,126,2.18,137,2.274,140,2.774,166,3.403,167,4.151,168,3.5,169,2.6,170,1.787,172,3.921,587,4.438,590,4.748,591,5.466,592,5.466,593,4.274,594,5.466]],["title/modules/FeatureModule.html",[119,1.19,428,1.869]],["body/modules/FeatureModule.html",[0,0.1,3,0.138,4,0.121,5,0.121,20,0.015,30,0.29,34,0.138,45,0.008,46,0.01,47,0.008,95,0.975,121,1.475,126,1.732,137,1.807,140,2.396,228,2.167,428,2.74,443,3.114,444,3.373,445,2.404,463,3.395,595,4.342,596,6.461,597,5.759,598,4.342,599,5.759,600,4.342,601,5.759,602,4.342,603,5.759,604,4.342,605,5.759,606,4.342,607,5.759,608,4.342,609,5.759,610,4.342,611,5.759,612,4.342,613,5.759,614,4.342,615,5.759,616,4.342,617,5.002,618,3.771,619,5.759,620,4.342,621,5.759,622,4.342,623,5.759,624,4.342,625,4.342]],["title/classes/Forecast.html",[0,0.09,626,2.174]],["body/classes/Forecast.html",[0,0.094,1,1.542,2,1.395,3,0.131,4,0.115,5,0.115,7,0.888,8,0.329,9,0.644,10,1.105,11,2.213,12,2.04,13,1.212,14,0.647,15,0.888,16,1.156,17,1.484,19,0.923,20,0.015,21,0.5,22,1.343,23,1.395,24,1.343,26,1.572,27,1.166,30,0.225,34,0.177,40,1.639,45,0.007,46,0.01,47,0.007,50,1.343,65,2.799,66,1.709,67,1.709,68,1.709,69,1.709,70,0.958,71,1.077,72,0.348,73,0.994,116,2.22,470,2.557,477,3.454,553,2.273,626,3.071,627,5.261,628,4.506,629,4.609,630,3.941,631,3.454,632,3.567,633,3.454,634,3.567,635,3.567,636,3.567,637,3.567,638,3.567,639,3.567,640,3.567,641,3.567]],["title/classes/GeoPosition.html",[0,0.09,213,2.174]],["body/classes/GeoPosition.html",[0,0.094,1,1.542,2,1.395,3,0.131,4,0.115,5,0.115,7,0.888,8,0.329,9,0.644,10,1.119,11,2.213,12,2.04,13,1.212,14,0.654,15,0.888,16,1.156,17,1.51,19,0.923,20,0.015,21,0.5,22,1.343,23,1.395,24,1.343,26,1.572,27,1.166,30,0.199,34,0.177,40,1.071,45,0.007,46,0.01,47,0.007,50,1.343,62,1.961,65,2.799,66,1.709,67,1.709,68,1.709,69,1.709,70,0.958,71,0.951,72,0.348,73,0.994,188,3.941,213,3.071,243,4.478,470,2.557,476,3.979,477,2.557,479,4.609,483,3.454,642,5.495,643,4.826,644,3.567,645,3.567,646,3.567]],["title/components/HeaderComponent.html",[74,1.236,107,1.784]],["body/components/HeaderComponent.html",[0,0.07,3,0.098,4,0.086,5,0.086,8,0.246,9,0.525,10,0.823,13,0.872,14,0.261,15,1.16,17,1.185,20,0.015,30,0.162,34,0.098,40,0.801,45,0.005,46,0.008,47,0.005,74,1.687,75,1.395,76,1.661,77,1.7,78,1.7,79,1.7,80,1.7,82,1.7,83,4.015,84,3.861,86,2.501,88,2.501,92,1.225,93,1.085,95,0.69,96,1.176,97,2.501,98,2.501,99,1.7,100,3.273,101,1.7,102,1.7,103,1.085,104,1.7,105,1.334,106,1.7,107,2.686,108,1.7,109,1.334,110,1.7,111,1.395,112,1.7,113,1.395,114,1.7,115,1.334,116,1.085,117,1.7,118,1.7,135,2.053,173,3.241,291,1.963,298,1.334,302,1.612,308,1.88,361,3.14,367,3.463,388,2.044,389,2.203,390,2.668,393,4.519,394,4.656,395,4.192,396,4.192,397,2.668,398,2.668,399,4.194,400,4.24,401,4.726,403,4.623,404,4.623,405,2.402,406,2.402,407,3.534,413,2.203,414,3.568,416,3.925,420,3.241,421,5.327,568,2.668,577,4.24,580,2.402,647,2.668,648,5.472,649,5.361,650,4.519,651,5.361,652,4.519,653,5.361,654,4.519,655,5.912,656,3.072,657,3.072,658,3.925,659,3.072,660,3.925,661,3.925,662,3.072,663,5.361,664,4.519,665,5.135,666,5.472,667,3.072,668,2.668,669,3.072,670,3.072,671,3.072,672,2.668,673,2.402,674,2.668,675,3.072,676,2.203,677,4.519,678,4.519,679,4.519,680,3.072,681,3.925,682,2.668,683,3.925,684,3.072,685,3.072,686,2.668,687,3.072,688,3.072,689,3.534,690,3.534,691,4.519,692,3.072]],["title/modules/HeaderModule.html",[119,1.19,429,1.961]],["body/modules/HeaderModule.html",[0,0.095,3,0.133,4,0.116,5,0.116,20,0.015,30,0.253,34,0.133,45,0.007,46,0.01,47,0.007,76,2.326,95,0.935,96,1.594,103,2.704,107,2.543,119,1.261,121,2.299,122,2.078,123,3.502,124,2.185,125,1.902,126,2.523,133,3.099,134,2.304,135,1.891,137,2.329,140,2.329,147,2.592,170,1.83,428,3.711,429,4.111,430,3.819,431,3.819,444,3.28,445,2.304,454,2.771,693,3.616,694,3.616,695,4.163,696,4.163,697,4.839,698,3.255,699,4.163,700,4.163]],["title/modules/HeaderRoutingModule.html",[119,1.19,697,2.615]],["body/modules/HeaderRoutingModule.html",[0,0.131,3,0.182,4,0.16,5,0.16,20,0.014,30,0.246,34,0.218,45,0.01,46,0.012,47,0.01,95,1.286,121,1.945,126,2.283,137,2.382,140,2.853,166,3.564,167,4.269,168,3.599,169,2.723,170,1.872,697,4.564,701,5.725,702,5.725,703,5.725]],["title/classes/Headline.html",[0,0.09,629,2.446]],["body/classes/Headline.html",[0,0.078,1,1.465,2,1.159,3,0.109,4,0.095,5,0.095,7,0.738,8,0.273,9,0.566,10,1.141,11,1.945,12,1.793,13,1.098,14,0.663,15,0.738,16,1.016,17,1.547,19,0.767,20,0.015,21,0.415,22,1.115,23,1.159,24,2.3,26,1.306,27,1.441,30,0.122,34,0.155,45,0.006,46,0.009,47,0.006,50,1.181,58,2.271,61,2.668,62,1.982,63,2.271,64,2.447,65,2.584,66,1.42,67,1.42,68,1.42,69,1.42,70,0.796,71,0.585,72,0.29,73,0.826,266,2.447,268,2.447,333,3.866,335,3.866,342,2.668,343,2.668,344,3.814,629,3.036,631,3.866,676,4.454,704,5.879,705,5.394,706,5.394,707,5.394,708,5.394,709,5.394,710,5.394]],["title/interfaces/IAdministrativeArea.html",[57,2.174,72,0.333]],["body/interfaces/IAdministrativeArea.html",[0,0.102,1,1.215,3,0.141,4,0.124,5,0.124,7,0.958,8,0.354,9,0.677,10,1.03,12,2.549,14,0.64,16,0.922,20,0.014,21,0.975,27,1.524,30,0.159,34,0.186,45,0.008,46,0.01,47,0.008,48,2.45,49,3.462,50,1.072,51,6.258,52,4.486,53,6.258,54,6.258,55,3.988,56,6.258,57,3.611,62,1.877,70,1.032,71,0.759,72,0.376,73,1.072,280,1.504]],["title/interfaces/IAutoComplete.html",[72,0.333,265,2.615]],["body/interfaces/IAutoComplete.html",[0,0.092,1,1.136,3,0.128,4,0.112,5,0.112,7,0.867,8,0.321,9,0.633,10,1.042,14,0.657,16,0.835,20,0.015,27,1.459,30,0.223,34,0.174,40,1.423,45,0.007,46,0.01,47,0.007,48,4.144,50,0.97,55,3.857,57,4.072,62,2.027,70,0.935,71,0.935,72,0.34,73,0.97,125,1.362,225,1.906,257,2.218,258,3.133,259,3.657,260,3.48,261,3.857,262,4.998,263,3.48,264,5.448,265,4.129,270,2.874,271,2.874,272,2.874,273,2.874,274,3.48,275,3.48,276,3.48,277,3.48,278,3.48,280,1.362]],["title/interfaces/IConditions.html",[72,0.333,339,2.301]],["body/interfaces/IConditions.html",[0,0.08,1,1.028,3,0.111,4,0.097,5,0.097,7,0.751,8,0.278,9,0.573,10,1.05,14,0.624,16,0.723,20,0.015,21,0.962,24,2.046,27,1.426,30,0.225,34,0.157,40,0.905,45,0.009,46,0.009,47,0.006,50,0.84,62,1.956,70,0.81,71,0.846,72,0.295,73,0.84,125,1.179,170,1.135,216,3.793,225,1.651,280,1.179,303,2.161,317,1.651,326,1.822,327,2.714,328,5.743,329,3.015,330,2.489,331,4.743,332,5.743,333,4.117,334,5.743,335,4.117,336,3.913,337,5.743,338,5.743,339,3.366,347,2.489,348,3.015,349,3.464,350,2.489,351,2.489,352,2.489,353,3.015,354,3.015,355,3.015,356,3.015,357,1.822,358,2.31,359,3.015]],["title/interfaces/ICountry.html",[72,0.333,469,2.446]],["body/interfaces/ICountry.html",[0,0.117,1,1.328,3,0.162,4,0.142,5,0.142,7,1.1,8,0.407,9,0.74,10,0.888,12,2.685,14,0.591,16,1.059,20,0.015,21,0.934,27,1.494,30,0.182,34,0.203,45,0.009,46,0.011,47,0.009,50,1.231,52,4.683,55,4.164,70,1.186,71,0.872,72,0.431,73,1.231,259,2.668,280,1.727,468,3.975,469,4.336]],["title/interfaces/IDay.html",[72,0.333,475,2.446]],["body/interfaces/IDay.html",[0,0.111,1,1.285,3,0.154,4,0.135,5,0.135,7,1.044,8,0.386,9,0.716,10,0.998,14,0.577,16,1.005,20,0.015,21,0.922,27,1.33,30,0.221,34,0.197,45,0.009,46,0.011,47,0.009,50,1.169,62,1.94,70,1.126,71,0.828,72,0.41,73,1.169,125,1.64,216,3.761,225,2.296,280,1.64,330,3.462,331,5.311,357,2.534,472,3.774,473,5.79,474,6.432,475,4.234,478,4.192]],["title/interfaces/IElevation.html",[72,0.333,483,2.446]],["body/interfaces/IElevation.html",[0,0.115,1,1.319,3,0.16,4,0.14,5,0.14,7,1.088,8,0.402,9,0.735,10,0.882,14,0.537,16,1.047,20,0.015,21,0.885,30,0.227,34,0.202,40,1.651,45,0.009,46,0.011,47,0.009,50,1.217,70,1.173,71,1.086,72,0.427,73,1.217,280,1.708,479,3.13,480,3.931,481,5.377,482,4.35,483,4.314,484,4.301,485,3.606,486,3.606,487,3.606,488,3.606,489,3.606]],["title/interfaces/IForecast.html",[72,0.333,630,2.301]],["body/interfaces/IForecast.html",[0,0.11,1,1.281,3,0.153,4,0.134,5,0.134,7,1.039,8,0.384,9,0.714,10,0.856,14,0.522,16,1,20,0.015,21,0.87,30,0.243,34,0.196,40,1.769,45,0.008,46,0.011,47,0.008,50,1.162,70,1.12,71,1.163,72,0.407,73,1.162,116,2.173,280,1.631,553,2.658,626,2.658,627,3.754,628,3.444,629,4.788,630,3.973,631,4.453,632,4.17,633,4.453,634,4.17,635,6.212,636,4.17,637,4.17,638,4.17,639,4.17,640,4.17,641,4.17]],["title/interfaces/IGeoPosition.html",[72,0.333,188,2.301]],["body/interfaces/IGeoPosition.html",[0,0.111,1,1.287,3,0.154,4,0.135,5,0.135,7,1.047,8,0.387,9,0.717,10,0.948,14,0.578,16,1.008,20,0.015,21,0.922,30,0.222,34,0.197,40,1.262,45,0.009,46,0.011,47,0.009,50,1.172,62,2.112,70,1.129,71,1.06,72,0.411,73,1.172,188,3.988,213,2.679,243,4.933,280,1.645,479,4.796,483,4.466,642,3.784,643,5.316,644,4.204,645,4.204,646,4.204]],["title/interfaces/IHeadline.html",[72,0.333,631,2.446]],["body/interfaces/IHeadline.html",[0,0.09,1,1.123,3,0.125,4,0.11,5,0.11,7,0.852,8,0.315,9,0.626,10,1.053,14,0.642,16,0.82,20,0.015,21,0.977,24,2.437,27,1.478,30,0.141,34,0.172,45,0.007,46,0.01,47,0.007,50,0.953,62,2.108,70,0.918,71,0.675,72,0.334,73,0.953,280,1.338,333,4.312,335,4.312,629,2.451,631,3.827,676,4.967,704,3.079,705,6.015,706,6.015,707,6.015,708,6.015,709,6.015,710,6.015]],["title/interfaces/ILocation.html",[72,0.333,711,2.615]],["body/interfaces/ILocation.html",[0,0.062,1,0.853,3,0.086,4,0.075,5,0.075,7,0.583,8,0.215,9,0.476,10,1.04,14,0.647,16,0.561,20,0.015,21,0.965,27,1.423,30,0.234,34,0.131,40,1.753,45,0.005,46,0.007,47,0.005,48,3.61,50,0.652,52,3.709,55,3.298,57,3.065,62,1.499,70,0.628,71,1.118,72,0.229,73,0.652,188,3.244,192,1.932,213,3.72,216,3.127,259,3.685,261,3.298,262,4.273,270,1.932,271,1.932,272,1.932,273,1.932,280,0.915,317,1.281,326,3.746,339,3.244,469,4.061,552,2.045,553,1.491,554,3.965,626,3.95,630,3.244,711,3.299,712,2.106,713,5.174,714,5.174,715,4.184,716,3.448,717,2.106,718,2.339,719,2.106,720,2.339,721,2.339,722,3.558,723,3.558,724,2.339,725,2.339,726,3.558,727,2.339,728,2.339,729,2.339,730,2.339,731,2.339,732,2.339,733,2.339,734,2.339]],["title/interfaces/IMenuEvent.html",[72,0.333,735,2.818]],["body/interfaces/IMenuEvent.html",[3,0.18,4,0.157,5,0.157,8,0.451,9,0.789,14,0.576,20,0.014,30,0.202,34,0.18,45,0.01,46,0.012,47,0.01,72,0.478,280,1.915,443,4.042,569,5.919,735,4.872,736,4.895,737,4.407,738,6.574,739,6.574,740,7.292]],["title/interfaces/IMetric.html",[72,0.333,484,2.174]],["body/interfaces/IMetric.html",[0,0.115,1,1.319,3,0.16,4,0.14,5,0.14,7,1.088,8,0.402,9,0.735,10,0.965,14,0.588,16,1.047,20,0.015,21,0.931,27,1.35,30,0.18,34,0.202,45,0.009,46,0.011,47,0.009,50,1.217,62,2.128,70,1.173,71,0.862,72,0.427,73,1.217,93,2.649,280,1.708,482,2.783,484,3.836,741,3.931,742,5.862,743,6.512]],["title/interfaces/IQueryParams.html",[72,0.333,744,2.818]],["body/interfaces/IQueryParams.html",[0,0.113,3,0.158,4,0.138,5,0.138,8,0.396,9,0.727,10,1.007,14,0.584,16,1.03,20,0.015,21,0.927,22,1.617,27,1.163,30,0.177,31,3.291,32,3.291,34,0.2,45,0.009,46,0.011,47,0.009,62,2.17,72,0.42,261,4.002,280,1.68,308,2.057,744,5.186,745,3.867,746,3.867,747,5.351,748,5.351,749,3.291,750,3.867,751,4.295,752,3.867,753,4.295,754,4.295]],["title/interfaces/ISearchEvent.html",[72,0.333,755,2.818]],["body/interfaces/ISearchEvent.html",[3,0.179,4,0.157,5,0.157,8,0.449,9,0.787,14,0.575,20,0.014,27,1.351,34,0.179,45,0.01,46,0.012,47,0.01,72,0.477,280,1.909,737,4.393,738,6.567,755,4.863,756,4.88,757,7.562,758,7.282,759,7.282]],["title/interfaces/ITemperature.html",[72,0.333,349,2.174]],["body/interfaces/ITemperature.html",[0,0.103,1,1.229,3,0.144,4,0.126,5,0.126,7,0.974,8,0.36,9,0.685,10,0.972,14,0.592,16,0.938,20,0.015,21,0.935,30,0.212,34,0.188,40,1.821,45,0.008,46,0.01,47,0.008,50,1.09,70,1.05,71,1.011,72,0.382,73,1.09,280,1.53,309,5.197,336,2.493,349,3.641,481,5.197,482,4.341,484,4.425,485,3.23,486,3.23,487,3.23,488,3.23,489,3.23,760,3.522,761,6.293,762,3.912,763,3.912,764,3.912,765,3.912]],["title/interfaces/ITimeZone.html",[72,0.333,716,2.446]],["body/interfaces/ITimeZone.html",[0,0.106,1,1.247,3,0.147,4,0.129,5,0.129,7,0.997,8,0.369,9,0.695,10,0.98,13,1.358,14,0.619,16,0.96,20,0.015,21,0.958,24,2.302,27,1.413,30,0.165,34,0.191,45,0.008,46,0.011,47,0.008,50,1.115,62,1.906,70,1.074,71,0.79,72,0.391,73,1.115,216,3.696,280,1.565,715,2.868,716,4.141,766,3.602,767,5.707,768,6.339,769,6.339,770,6.339]],["title/interfaces/IWeather.html",[72,0.333,633,2.446]],["body/interfaces/IWeather.html",[0,0.085,1,1.075,3,0.118,4,0.103,5,0.103,7,0.8,8,0.296,9,0.599,10,1.022,14,0.623,16,0.77,20,0.015,21,0.961,24,2.439,27,1.43,30,0.213,34,0.164,40,1.679,45,0.007,46,0.009,47,0.007,50,0.895,62,1.742,70,0.862,71,1.02,72,0.314,73,0.895,116,1.306,280,1.256,333,4.215,335,4.215,336,3.984,349,3.563,350,2.652,351,2.652,352,2.652,357,3.966,358,4.506,475,4.481,553,2.046,633,3.702,771,2.891,772,5.88,773,5.88,774,3.211,775,4.483,776,3.211,777,3.211,778,3.211,779,3.211]],["title/classes/Location.html",[0,0.09,552,1.961]],["body/classes/Location.html",[0,0.055,1,1.299,2,0.809,3,0.076,4,0.066,5,0.066,7,0.515,8,0.19,9,0.432,10,1.135,11,1.485,12,1.369,13,0.885,14,0.649,15,0.515,16,0.775,17,1.517,19,0.535,20,0.015,21,0.29,22,0.778,23,0.809,24,0.778,26,0.911,27,1.365,30,0.224,34,0.119,40,1.684,45,0.004,46,0.007,47,0.004,48,3.452,50,0.901,52,3.229,55,2.871,57,2.061,62,1.241,65,2.158,66,0.99,67,0.99,68,0.99,69,0.99,70,0.555,71,1.069,72,0.202,73,0.576,92,0.949,93,0.841,188,2.18,192,1.707,213,3.573,216,2.955,259,3.631,261,2.871,262,3.72,267,2.067,269,1.861,270,1.707,271,1.707,272,1.707,273,1.707,317,1.132,326,3.631,339,2.18,340,2.067,341,2.067,469,2.855,552,2.289,553,1.317,554,3.452,626,3.829,630,2.18,711,3.452,712,5.799,713,4.504,714,4.504,715,4.019,716,2.318,717,1.861,718,2.067,719,1.861,720,2.067,721,3.982,722,3.233,723,3.233,724,2.067,725,2.067,726,3.233,727,2.067,728,2.067,729,2.067,730,2.067,731,2.067,732,2.067,733,2.067,734,3.982,780,3.723,781,2.379,782,2.379,783,2.379,784,2.379,785,2.379,786,2.379,787,2.379,788,2.379,789,2.379,790,2.379]],["title/guards/LocationResolver.html",[450,2.615,791,3.072]],["body/guards/LocationResolver.html",[0,0.097,3,0.135,4,0.118,5,0.118,8,0.338,9,0.491,13,1.092,14,0.48,15,0.915,17,1.135,19,1.272,20,0.015,21,0.689,30,0.272,34,0.135,45,0.007,46,0.01,47,0.007,71,0.725,95,0.95,116,2.254,169,2.013,170,1.383,193,2.693,194,3.575,202,3.675,203,3.184,207,3.989,223,2.342,225,2.013,228,2.112,291,2.459,298,1.838,308,1.76,317,2.013,368,3.308,371,4.06,378,2.816,435,3.575,450,3.767,459,2.816,501,2.816,532,3.035,552,2.112,557,3.035,792,4.231,793,3.675,794,5.66,795,5.915,796,4.231,797,5.66,798,6.81,799,4.231,800,3.675,801,5.66,802,3.308,803,4.426,804,4.231,805,4.231,806,4.231,807,4.231,808,4.231,809,4.231,810,5.66,811,4.231,812,4.231,813,4.231,814,4.231,815,4.231,816,4.231,817,4.231,818,4.231]],["title/classes/Metric.html",[0,0.09,482,2.174]],["body/classes/Metric.html",[0,0.098,1,1.557,2,1.448,3,0.136,4,0.119,5,0.119,7,0.922,8,0.341,9,0.66,10,1.124,11,2.268,12,2.091,13,1.235,14,0.659,15,0.922,16,1.185,17,1.522,19,0.957,20,0.014,21,0.518,22,1.393,23,1.448,24,1.393,26,1.631,27,1.358,30,0.153,34,0.181,45,0.008,46,0.01,47,0.008,50,1.377,62,1.982,65,2.841,66,1.773,67,1.773,68,1.773,69,1.773,70,0.994,71,0.731,72,0.362,73,1.032,93,2.413,470,2.653,471,3.332,477,3.54,482,3.148,484,3.78,741,5.564,742,5.34,743,5.931]],["title/classes/QueryParams.html",[0,0.09,749,2.615]],["body/classes/QueryParams.html",[0,0.104,2,1.546,3,0.145,4,0.127,5,0.127,8,0.364,9,0.689,10,1.109,13,0.878,14,0.595,15,0.984,16,1.237,17,1.457,19,1.022,20,0.015,21,0.554,22,1.941,23,1.546,27,1.227,30,0.163,31,3.028,32,3.028,34,0.189,45,0.008,46,0.011,47,0.008,62,2.056,72,0.386,92,1.814,93,1.607,261,2.518,308,2.47,744,5.347,745,5.829,746,3.557,747,5.026,748,5.026,749,3.952,750,5.169,751,3.951,752,5.169,753,3.951,754,3.951,819,5.938,820,4.549,821,4.549,822,4.549]],["title/classes/RequestCache.html",[0,0.09,307,2.446]],["body/classes/RequestCache.html",[0,0.128,2,1.402,3,0.131,4,0.115,5,0.115,8,0.33,10,0.574,13,1.074,14,0.472,15,0.892,17,1.116,19,1.25,20,0.015,21,0.677,30,0.226,34,0.177,35,5.796,40,1.076,45,0.007,46,0.01,47,0.007,71,0.707,95,0.927,139,2.059,170,2.204,193,2.647,203,2.777,279,2.746,282,3.226,283,5.503,284,2.959,285,5.406,286,2.746,287,3.226,288,4.833,289,3.583,290,3.583,291,2.418,292,4.833,294,5.469,295,5.406,297,3.991,298,2.418,299,4.835,300,4.833,302,3.305,303,2.568,304,3.583,306,3.583,307,3.92,308,1.716,309,2.959,310,3.226,311,3.583,312,3.583,313,3.583,314,4.833,315,4.833,316,3.583,317,1.962,318,3.583,319,4.833,320,3.583,321,4.833,322,3.583,323,3.583,324,3.583,325,3.583,823,4.125,824,4.125]],["title/interceptors/RequestInterceptor.html",[434,2.615,448,2.818]],["body/interceptors/RequestInterceptor.html",[0,0.096,3,0.133,4,0.116,5,0.116,8,0.334,13,1.082,14,0.476,15,0.903,17,1.124,19,1.26,20,0.015,21,0.682,30,0.271,32,2.777,34,0.133,45,0.007,46,0.01,47,0.007,95,0.937,125,1.418,139,2.083,170,1.364,193,2.668,194,3.555,203,2.083,207,3.71,223,2.31,225,1.985,228,2.083,251,4.216,285,4.022,291,2.436,295,4.857,297,4.543,298,1.813,307,4.216,308,1.736,310,4.952,317,1.985,368,3.263,371,4.022,378,2.777,383,4.385,385,3.624,434,3.732,458,3.624,490,3.624,492,2.993,493,4.87,494,4.87,495,5.882,498,3.624,499,4.87,501,2.777,803,3.263,825,5.501,826,4.173,827,4.173,828,4.173,829,2.993,830,4.173,831,4.173,832,4.173,833,4.173,834,4.173,835,5.608,836,4.173,837,4.173,838,4.173,839,4.173,840,4.173,841,4.173,842,4.173]],["title/components/SearchComponent.html",[74,1.236,109,1.707]],["body/components/SearchComponent.html",[0,0.044,3,0.061,4,0.054,5,0.054,8,0.154,9,0.365,10,1.068,13,0.769,14,0.487,15,0.417,17,1.356,19,0.433,20,0.015,21,0.235,30,0.238,34,0.061,40,1.199,45,0.003,46,0.006,47,0.003,71,0.33,74,1.254,75,0.876,76,1.156,77,1.067,78,1.067,79,1.067,80,1.067,82,1.067,83,3.521,84,3.419,86,1.741,88,1.741,90,1.674,92,2.168,93,2.026,95,0.433,96,0.738,97,1.741,98,1.741,99,1.067,100,2.545,101,1.067,102,1.067,103,0.681,104,1.067,105,0.837,106,1.067,107,0.876,108,1.067,109,1.998,110,1.067,111,0.876,112,1.067,113,0.876,114,1.067,115,0.837,116,1.79,117,1.067,118,1.067,135,1.429,153,1.2,155,1.129,156,1.2,169,0.917,186,2.732,203,2.295,207,2.334,209,3.994,223,1.067,228,0.962,243,2.094,257,2.206,261,1.067,291,1.367,298,0.837,299,1.382,302,1.012,303,1.2,308,1.309,361,2.334,367,2.694,369,4.98,383,3.116,388,1.283,389,2.256,393,4.849,395,2.46,396,2.46,399,3.061,400,4.112,403,2.46,404,2.46,405,2.46,406,2.46,407,3.596,413,4.112,414,1.283,417,1.674,418,1.674,419,2.732,420,1.382,421,3.116,435,2.414,443,1.382,459,1.283,473,2.46,501,1.283,549,1.507,552,1.989,574,2.732,575,1.674,577,3.899,580,1.507,581,2.732,643,2.256,648,2.732,665,3.461,666,3.461,668,2.732,672,4.401,673,2.46,674,2.732,676,3.298,682,1.674,683,3.994,686,4.721,689,2.46,690,2.46,735,2.858,739,4.401,747,1.382,748,1.382,749,2.094,755,2.256,843,1.674,844,4.721,845,3.985,846,3.146,847,3.985,848,3.985,849,3.985,850,3.985,851,3.985,852,3.985,853,3.985,854,3.985,855,3.985,856,3.985,857,3.985,858,3.146,859,1.927,860,1.927,861,1.927,862,1.927,863,1.927,864,4.599,865,1.927,866,1.927,867,1.927,868,1.927,869,1.927,870,3.146,871,3.146,872,3.146,873,1.927,874,1.927,875,3.146,876,1.927,877,2.732,878,1.927,879,1.674,880,1.927,881,1.927,882,1.927,883,1.507,884,3.146,885,1.927,886,3.985,887,1.927,888,1.927,889,1.927,890,1.927,891,1.927,892,1.927,893,1.927,894,1.927,895,1.927,896,3.146,897,1.927,898,1.927,899,1.927,900,3.146,901,3.146,902,1.927,903,3.146,904,1.927,905,1.927,906,1.927,907,1.927,908,3.985,909,1.927,910,2.732,911,3.146,912,3.146,913,1.927,914,3.146,915,1.927,916,1.927,917,1.927,918,5.734,919,3.146,920,4.599,921,3.146,922,3.146,923,4.599,924,4.599,925,4.599,926,3.146,927,3.985,928,3.146,929,2.732,930,1.927,931,1.927]],["title/modules/SearchModule.html",[119,1.19,430,1.961]],["body/modules/SearchModule.html",[0,0.094,3,0.131,4,0.115,5,0.115,20,0.015,30,0.26,34,0.131,45,0.007,46,0.01,47,0.007,76,2.31,95,0.923,96,1.572,103,2.696,109,2.41,119,1.244,121,2.286,122,2.05,123,3.478,124,2.156,125,1.885,126,2.506,133,3.071,134,2.273,135,1.865,137,2.308,140,2.308,147,2.557,170,1.814,428,3.702,429,3.808,430,4.107,431,3.808,444,3.249,445,2.273,454,2.733,883,3.211,932,3.567,933,3.567,934,4.107,935,4.107,936,4.82,937,3.211,938,5.548,939,4.107,940,3.567]],["title/modules/SearchRoutingModule.html",[119,1.19,936,2.615]],["body/modules/SearchRoutingModule.html",[0,0.125,3,0.174,4,0.153,5,0.153,20,0.015,30,0.258,34,0.212,45,0.01,46,0.012,47,0.01,74,1.72,95,1.228,109,2.897,121,1.857,126,2.18,137,2.274,140,2.774,166,3.403,167,4.151,168,3.5,169,2.6,170,1.787,172,3.921,593,4.274,936,4.438,940,4.748,941,5.466,942,5.466,943,5.466]],["title/components/SettingsComponent.html",[74,1.236,111,1.784]],["body/components/SettingsComponent.html",[0,0.103,3,0.142,4,0.125,5,0.125,8,0.358,13,1.133,15,1.418,17,1.177,20,0.014,30,0.16,34,0.142,45,0.008,46,0.01,47,0.008,74,2.062,75,2.031,76,2.158,77,2.475,78,2.475,79,2.475,80,2.475,82,2.475,83,4.336,84,4.111,86,3.249,88,3.249,95,1.004,96,1.711,97,3.249,98,3.249,99,2.475,100,3.853,101,2.475,102,2.475,103,1.58,104,2.475,105,1.942,106,2.475,107,2.031,108,2.475,109,1.942,110,2.475,111,3.162,112,2.475,113,2.031,114,2.475,115,1.942,116,1.58,117,2.475,118,2.475,227,4.992,291,2.55,298,1.942,302,2.347,308,2.442,361,3.839,367,4.077,944,3.883,945,6.555,946,5.871,947,4.471,948,4.471,949,5.871]],["title/components/SidenavComponent.html",[74,1.236,113,1.784]],["body/components/SidenavComponent.html",[0,0.083,3,0.115,4,0.101,5,0.101,8,0.29,9,0.591,10,0.888,13,1.135,14,0.499,15,0.784,17,1.279,19,0.814,20,0.015,21,0.441,27,0.944,30,0.241,34,0.115,45,0.006,46,0.009,47,0.006,74,1.851,75,1.646,76,1.871,77,2.006,78,2.006,79,2.006,80,2.006,82,2.006,83,4.165,84,4.062,86,2.817,88,2.817,95,0.814,96,1.387,97,2.817,98,2.817,99,2.006,100,3.531,101,2.006,102,2.006,103,1.28,104,2.006,105,1.574,106,2.006,107,1.646,108,2.006,109,1.574,110,2.006,111,1.646,112,2.006,113,2.898,114,2.006,115,1.574,116,1.28,117,2.006,118,2.006,135,2.312,139,1.808,153,2.256,155,3.446,156,2.256,163,3.915,194,3.349,203,1.808,228,1.808,291,2.211,298,1.574,302,1.902,308,2.117,361,3.446,367,3.737,378,2.412,388,2.412,399,2.412,400,2.599,401,2.599,402,3.147,414,3.387,422,5.109,577,2.599,658,5.109,660,3.147,661,3.147,689,3.979,690,3.979,877,4.42,929,4.42,950,3.147,951,5.882,952,5.089,953,5.089,954,3.623,955,5.109,956,5.541,957,5.089,958,5.089,959,3.623,960,3.623,961,3.623,962,3.623,963,3.623,964,3.623,965,3.623,966,3.623]],["title/modules/SidenavModule.html",[119,1.19,431,1.961]],["body/modules/SidenavModule.html",[0,0.095,3,0.131,4,0.115,5,0.115,20,0.015,30,0.266,34,0.131,45,0.007,46,0.01,47,0.007,76,2.315,95,0.927,96,1.579,103,2.699,111,2.528,113,2.528,119,1.25,121,2.29,122,2.059,123,3.486,124,2.165,125,1.891,126,2.512,133,3.08,134,2.283,135,1.874,137,2.315,138,4.351,139,2.059,140,2.315,170,1.819,428,3.705,429,3.812,430,3.812,431,4.097,444,3.259,445,2.283,454,2.746,617,4.833,618,3.583,967,4.125,968,4.125,969,4.125,970,4.125,971,3.226,972,4.125,973,4.125]],["title/classes/Temperature.html",[0,0.09,336,2.174]],["body/classes/Temperature.html",[0,0.089,1,1.518,2,1.315,3,0.123,4,0.108,5,0.108,7,0.837,8,0.31,9,0.619,10,1.122,11,2.125,12,1.959,13,1.175,14,0.653,15,0.837,16,1.11,17,1.511,19,0.869,20,0.015,21,0.471,22,1.265,23,1.315,24,1.265,26,1.482,27,1.131,30,0.191,34,0.17,40,1.712,45,0.007,46,0.009,47,0.007,50,1.29,59,3.026,60,4.166,65,2.731,66,1.61,67,1.61,68,1.61,69,1.61,70,0.903,71,0.914,72,0.328,73,0.937,309,4.708,336,2.949,349,3.633,476,2.776,477,2.41,481,4.708,482,4.329,484,3.81,485,2.776,486,2.776,487,2.776,488,2.776,489,2.776,760,5.563,761,5.701,762,3.361,763,3.361,764,3.361,765,3.361]],["title/classes/TimeZone.html",[0,0.09,715,2.446]],["body/classes/TimeZone.html",[0,0.092,1,1.534,2,1.368,3,0.128,4,0.112,5,0.112,7,0.871,8,0.322,9,0.635,10,1.127,11,2.183,12,2.012,13,1.287,14,0.658,15,0.871,16,1.14,17,1.523,19,0.904,20,0.015,21,0.49,22,1.316,23,1.368,24,2.181,26,1.541,27,1.367,30,0.144,34,0.174,45,0.007,46,0.01,47,0.007,50,1.325,59,3.147,60,4.279,62,1.683,65,2.776,66,1.674,67,1.674,68,1.674,69,1.674,70,0.939,71,0.69,72,0.342,73,0.974,216,3.264,476,2.887,477,2.506,715,3.407,716,4.154,766,5.629,767,5.217,768,5.795,769,5.795,770,5.795]],["title/classes/Weather.html",[0,0.09,116,1.388]],["body/classes/Weather.html",[0,0.074,1,1.442,2,1.1,3,0.103,4,0.09,5,0.09,7,0.7,8,0.259,9,0.545,10,1.132,11,1.873,12,1.726,13,1.066,14,0.654,15,0.7,16,0.978,17,1.522,19,0.727,20,0.015,21,0.394,22,1.058,23,1.1,24,2.318,26,1.239,27,1.395,30,0.198,34,0.15,40,1.581,45,0.006,46,0.008,47,0.006,50,1.137,58,2.154,62,1.496,63,2.154,64,2.321,65,2.521,66,1.346,67,1.346,68,1.346,69,1.346,70,0.755,71,0.947,72,0.275,73,0.783,116,1.659,266,2.321,268,2.321,333,3.773,335,3.773,336,3.832,342,2.53,343,2.53,344,3.671,349,2.598,350,2.321,351,2.321,352,2.321,357,3.904,358,4.034,475,3.439,553,1.791,633,3.773,771,5.741,772,5.263,773,5.263,774,2.81,775,4.077,776,2.81,777,2.81,778,2.81,779,2.81]],["title/components/WeatherComponent.html",[74,1.236,115,1.707]],["body/components/WeatherComponent.html",[0,0.076,3,0.106,4,0.093,5,0.093,8,0.265,9,0.555,10,1.013,13,1.081,14,0.476,15,0.718,17,1.303,19,0.746,20,0.015,21,0.404,24,2.005,27,0.887,30,0.22,34,0.106,45,0.008,46,0.008,47,0.006,71,0.569,74,1.763,75,1.508,76,1.758,77,1.837,78,1.837,79,1.837,80,1.837,82,1.837,83,4.087,84,3.876,86,2.646,88,2.646,92,1.324,93,1.173,95,0.746,96,1.27,97,2.646,98,2.646,99,1.837,100,3.394,101,1.837,102,1.837,103,1.173,104,1.837,105,1.442,106,1.837,107,1.508,108,1.837,109,1.442,110,1.837,111,1.508,112,1.837,113,1.508,114,1.837,115,2.664,116,2.296,117,1.837,118,1.837,169,1.579,203,1.656,228,1.656,251,2.209,291,2.077,298,1.442,302,1.742,308,1.989,361,3.282,367,3.592,410,4.152,420,3.429,435,3.219,459,2.209,532,4.019,549,2.595,552,3.379,557,2.38,681,4.152,974,2.882,975,5.604,976,4.781,977,5.604,978,5.604,979,6.132,980,4.781,981,3.319,982,3.319,983,3.319,984,3.319,985,3.319,986,3.319,987,4.781,988,3.319,989,4.781,990,4.781,991,3.319,992,4.781,993,4.781,994,4.781,995,3.738,996,4.781,997,4.781,998,4.781,999,4.781,1000,4.781,1001,4.781,1002,4.781,1003,4.781,1004,4.781,1005,4.781,1006,3.319]],["title/modules/WeatherModule.html",[119,1.19,1007,2.818]],["body/modules/WeatherModule.html",[0,0.095,3,0.132,4,0.116,5,0.116,20,0.015,30,0.253,34,0.132,45,0.007,46,0.01,47,0.007,76,2.32,95,0.931,96,1.586,103,2.701,115,2.425,119,1.255,121,2.295,122,2.068,123,3.494,124,2.175,125,1.897,126,2.518,133,3.09,134,2.294,135,1.882,137,2.322,140,2.322,147,2.58,170,1.825,428,3.708,429,3.816,430,3.816,431,3.816,444,3.269,445,2.294,454,2.758,1007,5.835,1008,3.599,1009,3.599,1010,4.144,1011,4.144,1012,4.833,1013,3.24,1014,4.144,1015,3.599]],["title/modules/WeatherRoutingModule.html",[119,1.19,1012,2.615]],["body/modules/WeatherRoutingModule.html",[0,0.121,3,0.169,4,0.148,5,0.148,20,0.015,30,0.266,34,0.208,45,0.009,46,0.012,47,0.009,74,1.665,95,1.189,115,2.839,121,1.798,126,2.111,137,2.201,140,2.719,166,3.294,167,4.069,168,3.431,169,2.517,170,1.73,172,3.795,450,4.35,451,4.595,552,2.641,593,4.137,795,4.595,1012,4.35,1015,4.595,1016,5.291,1017,5.291,1018,5.291,1019,5.291,1020,5.291]],["title/injectables/WeatherService.html",[193,1.869,435,2.062]],["body/injectables/WeatherService.html",[0,0.053,1,0.485,3,0.074,4,0.065,5,0.065,8,0.186,9,0.425,10,1.083,13,0.45,14,0.311,15,0.504,17,1.422,19,0.524,20,0.015,21,0.284,22,1.479,23,0.792,27,1.034,30,0.255,32,1.551,34,0.074,40,1.76,45,0.008,46,0.006,47,0.004,62,0.992,70,0.544,71,0.956,92,2.744,93,2.564,95,0.524,125,0.792,139,1.163,170,0.762,183,3.192,193,1.742,195,1.672,203,3.368,207,3.466,223,1.29,225,1.109,226,1.822,227,1.672,228,1.163,257,2.838,261,2.838,265,1.551,299,3.678,303,3.192,317,1.742,326,1.223,339,1.365,412,2.864,435,1.922,501,1.551,552,2.953,553,2.504,554,3.011,555,2.024,556,2.024,557,1.672,561,2.024,569,1.822,626,1.29,630,1.365,711,1.551,717,1.822,719,1.822,747,2.627,748,2.627,750,2.864,800,2.024,803,2.864,829,1.672,844,3.181,879,2.024,955,3.181,956,4.454,1021,2.024,1022,3.538,1023,4.524,1024,4.524,1025,4.524,1026,4.524,1027,4.524,1028,4.524,1029,4.524,1030,4.524,1031,4.524,1032,4.524,1033,2.331,1034,3.663,1035,2.331,1036,2.331,1037,2.331,1038,2.331,1039,2.331,1040,2.331,1041,2.331,1042,2.331,1043,2.331,1044,2.331,1045,2.331,1046,2.331,1047,1.822,1048,2.331,1049,3.663,1050,2.331,1051,2.331,1052,2.331,1053,2.331,1054,2.331,1055,5.574,1056,2.331,1057,4.524,1058,2.331,1059,2.331,1060,3.663,1061,2.331,1062,2.331,1063,2.331,1064,2.331,1065,2.331,1066,2.331,1067,2.331,1068,3.663,1069,3.663,1070,3.663,1071,3.663,1072,3.663,1073,3.663,1074,3.663,1075,3.663,1076,2.331,1077,2.331,1078,2.331,1079,2.331,1080,2.331,1081,2.331,1082,2.331,1083,2.331,1084,2.331,1085,2.331,1086,2.331,1087,4.524,1088,2.331,1089,2.331,1090,2.331,1091,2.331,1092,2.331,1093,3.663,1094,2.331,1095,2.331,1096,2.331]],["title/coverage.html",[1097,4.675]],["body/coverage.html",[0,0.17,1,0.477,5,0.064,6,1.988,7,1.695,14,0.194,20,0.015,31,1.524,40,0.597,45,0.004,46,0.006,47,0.004,48,1.267,49,2.824,57,1.267,72,0.63,74,2.004,75,1.04,76,2.159,81,1.988,103,0.809,105,0.995,107,1.04,109,0.995,111,1.04,113,1.04,115,0.995,116,0.809,121,1.995,125,1.227,183,1.425,184,1.988,185,1.988,188,1.341,193,2.128,194,1.202,196,1.988,213,1.267,224,2.824,257,1.267,258,2.824,259,1.202,265,1.524,279,1.524,281,1.988,286,1.524,287,2.824,307,1.425,326,1.202,327,2.824,336,1.267,339,1.341,347,1.642,349,1.267,357,1.202,360,1.988,408,7.169,433,1.524,434,1.524,435,1.202,436,2.824,448,2.59,450,1.524,468,2.824,469,1.425,472,2.824,475,1.425,479,1.425,480,2.824,482,1.267,483,1.425,484,1.267,491,3.497,492,3.642,502,1.642,513,1.79,546,1.988,552,1.143,588,2.824,626,1.267,627,2.824,629,1.425,630,1.341,631,1.425,633,1.425,642,2.824,647,1.988,698,2.824,704,2.824,711,1.524,712,2.824,715,1.425,716,1.425,735,1.642,736,1.988,737,2.824,741,2.824,744,1.642,745,2.824,746,2.824,749,1.524,755,1.642,756,1.988,760,2.824,766,2.824,771,2.824,791,1.79,793,1.988,802,2.824,825,1.988,829,1.642,843,1.988,937,2.824,944,1.988,950,1.988,971,2.824,974,1.988,995,1.79,1013,2.824,1021,1.988,1022,1.79,1047,1.79,1097,1.988,1098,2.29,1099,2.29,1100,2.29,1101,6.371,1102,5.872,1103,7.761,1104,7.761,1105,4.472,1106,6.371,1107,5.078,1108,5.872,1109,1.988,1110,1.988,1111,4.41,1112,2.29,1113,2.29,1114,2.29,1115,5.526,1116,4.472,1117,3.612,1118,2.29,1119,2.29,1120,3.884,1121,3.884,1122,3.137,1123,1.988,1124,2.29,1125,2.29]],["title/dependencies.html",[122,2.361,1126,3.27]],["body/dependencies.html",[20,0.015,26,1.962,33,4.453,45,0.009,46,0.011,47,0.009,95,1.152,122,2.559,124,2.691,142,5.567,143,5.011,169,2.439,223,2.838,445,2.838,673,4.009,883,4.009,1127,5.127,1128,6.911,1129,5.127,1130,5.127,1131,5.127,1132,5.127,1133,5.127,1134,5.127,1135,5.127,1136,5.127,1137,5.127,1138,5.127,1139,5.127,1140,5.127,1141,5.127,1142,5.127,1143,5.127,1144,5.127,1145,6.409,1146,5.127,1147,5.127,1148,5.127,1149,5.127,1150,5.127,1151,5.127,1152,5.127,1153,5.127]],["title/miscellaneous/enumerations.html",[1154,2.346,1155,4.109]],["body/miscellaneous/enumerations.html",[8,0.366,20,0.015,45,0.008,46,0.011,47,0.008,93,2.888,116,2.481,149,3.965,152,4.273,155,3.489,162,5.174,173,3.279,257,3.297,259,3.127,326,3.127,554,3.965,628,4.273,1154,3.279,1155,3.971,1156,4.572,1157,5.957,1158,4.572,1159,5.957,1160,5.957,1161,4.572,1162,5.957,1163,5.957,1164,4.572,1165,5.957,1166,5.957,1167,5.957,1168,4.572,1169,5.957,1170,5.957,1171,5.957,1172,4.572,1173,5.957,1174,5.957,1175,5.174,1176,4.572,1177,4.572,1178,5.957,1179,4.572,1180,5.957,1181,5.957,1182,5.957,1183,5.957,1184,5.957,1185,5.957]],["title/index.html",[8,0.262,1186,3.27,1187,3.27]],["body/index.html",[4,0.131,13,0.902,20,0.011,40,1.22,45,0.008,46,0.011,47,0.008,74,2.108,84,2.455,94,5.819,135,2.125,264,3.658,371,3.355,399,3.113,502,3.355,530,4.728,626,2.589,742,4.728,752,5.734,767,3.658,910,4.063,1128,4.063,1188,6.046,1189,4.678,1190,6.7,1191,6.7,1192,7.512,1193,4.678,1194,4.678,1195,4.678,1196,4.678,1197,4.678,1198,4.678,1199,7.644,1200,4.678,1201,4.678,1202,4.678,1203,4.678,1204,4.678,1205,4.678,1206,4.678,1207,4.678,1208,4.678,1209,6.7,1210,6.7,1211,4.678,1212,4.678,1213,4.678,1214,4.678,1215,4.678,1216,4.678,1217,4.063,1218,6.046,1219,7.083,1220,4.678,1221,6.046,1222,6.046,1223,4.678,1224,7.083,1225,4.678,1226,4.678,1227,4.678,1228,6.7,1229,4.678,1230,4.678,1231,4.678,1232,3.658,1233,4.678,1234,4.678]],["title/modules.html",[121,1.829]],["body/modules.html",[20,0.012,45,0.009,46,0.012,47,0.009,120,3.762,121,1.782,131,3.491,132,3.491,143,6.132,428,2.495,429,2.618,430,2.618,431,2.618,432,3.491,582,3.762,587,3.491,697,3.491,936,3.491,1007,3.762,1012,3.491,1235,7.842,1236,7.842,1237,8.179,1238,7.842,1239,7.842]],["title/overview.html",[1232,4.209]],["body/overview.html",[2,0.922,20,0.015,45,0.005,46,0.007,47,0.005,75,2.97,76,0.998,96,1.039,103,2.751,119,0.822,120,4.948,121,0.922,122,1.354,123,1.502,124,1.424,125,0.922,126,1.082,127,2.357,128,2.357,129,2.357,130,2.357,131,3.314,132,5.283,133,2.28,134,1.502,135,1.233,168,1.424,194,2.614,195,1.946,280,0.922,423,2.357,424,2.357,425,2.357,426,2.357,427,2.357,428,3.704,429,4.043,430,4.043,431,4.032,432,3.314,433,3.314,434,3.314,435,2.614,582,5.507,583,2.357,586,2.357,587,3.314,693,2.357,694,2.357,697,3.314,791,2.122,932,2.357,933,2.357,936,3.314,1007,5.507,1008,2.357,1009,2.357,1012,3.314,1232,2.122,1240,2.714,1241,2.714,1242,2.714,1243,4.119,1244,2.714,1245,2.714]],["title/routes.html",[168,2.825]],["body/routes.html",[20,0.013,45,0.011,46,0.013,47,0.011,168,3.366]],["title/miscellaneous/variables.html",[1154,2.346,1246,4.109]],["body/miscellaneous/variables.html",[8,0.139,14,0.62,19,0.39,20,0.015,27,1.065,31,1.922,45,0.003,46,0.007,47,0.003,76,2.369,92,2.963,93,2.649,103,0.614,105,0.755,107,0.789,109,0.755,111,0.789,113,0.789,115,0.755,116,1.02,121,2.189,125,1.467,213,1.599,224,3.376,243,1.922,257,1.599,326,1.516,347,2.071,357,3.935,358,4.86,428,0.827,429,0.867,430,0.867,431,0.867,436,1.359,463,2.258,491,1.359,492,2.658,502,2.071,503,1.509,504,1.509,505,1.509,506,1.509,507,1.509,508,1.509,509,1.509,510,1.509,511,1.509,512,1.509,513,2.258,514,1.509,515,2.508,516,1.509,517,1.509,518,1.509,519,1.509,520,1.509,521,2.508,522,1.509,523,1.509,524,1.509,525,1.509,526,1.509,527,1.509,528,1.509,529,1.509,530,2.258,531,1.509,532,1.246,533,1.509,534,1.509,535,1.509,536,1.509,537,1.509,538,1.509,539,1.509,540,1.509,588,1.359,628,2.071,643,2.071,698,1.359,802,3.376,829,2.071,937,1.359,971,1.359,995,2.258,1013,1.359,1022,2.258,1047,2.258,1109,1.509,1110,2.508,1111,1.509,1120,1.509,1121,1.509,1122,1.509,1123,2.508,1154,1.246,1175,2.508,1217,2.508,1246,1.509,1247,1.738,1248,4.317,1249,2.888,1250,2.888,1251,2.888,1252,2.888,1253,2.888,1254,2.888,1255,2.888,1256,3.706,1257,3.706,1258,2.888,1259,5.954,1260,5.17,1261,7.559,1262,2.888,1263,2.888,1264,4.317,1265,4.317,1266,4.317,1267,1.738,1268,6.567,1269,3.706,1270,2.888,1271,1.738,1272,1.738,1273,1.738,1274,1.738,1275,1.738,1276,1.738,1277,2.888,1278,2.888,1279,4.317,1280,6.567,1281,7.255,1282,6.567,1283,4.791,1284,5.737,1285,4.791,1286,4.791,1287,4.791,1288,5.17,1289,1.738,1290,1.738,1291,2.888,1292,1.738,1293,1.738,1294,1.738,1295,1.738,1296,1.738,1297,1.738,1298,1.738,1299,1.738,1300,1.738,1301,1.738,1302,1.738,1303,1.738,1304,1.738,1305,1.738,1306,1.738,1307,2.888,1308,2.888,1309,2.888,1310,2.888,1311,2.888,1312,4.317,1313,2.888,1314,2.888,1315,2.888,1316,2.888,1317,2.888,1318,2.888,1319,2.888,1320,2.888,1321,2.888,1322,2.888,1323,2.888,1324,1.738]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":408,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":577,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":1244,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":397,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":575,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["100vh",{"_index":402,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":415,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["11.0.0",{"_index":1128,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1240,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":663,"title":{},"body":{"components/HeaderComponent.html":{}}}],["18",{"_index":1243,"title":{},"body":{"overview.html":{}}}],["180.0000000",{"_index":906,"title":{},"body":{"components/SearchComponent.html":{}}}],["2.0.0",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":919,"title":{},"body":{"components/SearchComponent.html":{}}}],["20",{"_index":398,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{}}}],["25px",{"_index":576,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["28a745",{"_index":930,"title":{},"body":{"components/SearchComponent.html":{}}}],["2px",{"_index":923,"title":{},"body":{"components/SearchComponent.html":{}}}],["3",{"_index":1242,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":929,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["32.003",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":915,"title":{},"body":{"components/SearchComponent.html":{}}}],["34.756",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350px",{"_index":965,"title":{},"body":{"components/SidenavComponent.html":{}}}],["4.1.0",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":574,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["400",{"_index":514,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":570,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["401",{"_index":520,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":525,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":529,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["40px",{"_index":662,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5",{"_index":669,"title":{},"body":{"components/HeaderComponent.html":{}}}],["500",{"_index":535,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5px",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["6.6.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1245,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1241,"title":{},"body":{"overview.html":{}}}],["8.64e+7",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["90.0000000",{"_index":904,"title":{},"body":{"components/SearchComponent.html":{}}}],["absolute",{"_index":579,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["abstract",{"_index":35,"title":{},"body":{"classes/AbstractModel.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["abstractmodel",{"_index":1,"title":{"classes/AbstractModel.html":{}},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["abstractmodel:5",{"_index":66,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["abstractmodel:6",{"_index":67,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["abstractmodel:7",{"_index":68,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["abstractmodel:8",{"_index":69,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["access",{"_index":527,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":675,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":670,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroute",{"_index":979,"title":{},"body":{"components/WeatherComponent.html":{}}}],["activatedroutesnapshot",{"_index":798,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":48,"title":{"classes/AdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["administrativearea(args?.administrativearea",{"_index":272,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["administrativearea(args?.country",{"_index":274,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["age",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["align",{"_index":665,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["always",{"_index":1019,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["amount",{"_index":396,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["angular",{"_index":1190,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":445,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":883,"title":{},"body":{"components/SearchComponent.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"dependencies.html":{}}}],["animate.css",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["animationmap",{"_index":347,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationmap[`${this.weathertext.tolowercase",{"_index":355,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["animationmap[this.weathertext.tolowercase",{"_index":354,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["api",{"_index":522,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":75,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"index.html":{}}}],["applicationservice",{"_index":194,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":120,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":131,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":183,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["args",{"_index":22,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IQueryParams.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["args?.conditions",{"_index":724,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.country",{"_index":725,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.dailyforecasts",{"_index":637,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.dailyforecasts?.map(item",{"_index":638,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.day",{"_index":777,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.forecast",{"_index":727,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.geoposition",{"_index":729,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.night",{"_index":779,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.region",{"_index":731,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.timezone",{"_index":733,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args[key",{"_index":38,"title":{},"body":{"classes/AbstractModel.html":{}}}],["array",{"_index":553,"title":{},"body":{"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["artifacts",{"_index":1212,"title":{},"body":{"index.html":{}}}],["assets/datasets/autocomplete.json",{"_index":504,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/conditions.json",{"_index":506,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/forecasts.json",{"_index":508,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/geoposition.json",{"_index":510,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/locations.json",{"_index":512,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/images/anim/${result}.svg",{"_index":359,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["atob(value",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":523,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":419,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["autocomplete",{"_index":257,"title":{"classes/AutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocomplete(item",{"_index":1059,"title":{},"body":{"injectables/WeatherService.html":{}}}],["autocompletemodule",{"_index":597,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":1204,"title":{},"body":{"index.html":{}}}],["available",{"_index":1239,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":389,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bad",{"_index":516,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["behaviorsubject(args?.themeoption",{"_index":235,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["between",{"_index":406,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["black",{"_index":572,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{}}}],["bootstrap",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bottom",{"_index":581,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["browse",{"_index":1237,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":752,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"index.html":{}}}],["buttonmodule",{"_index":599,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["cached",{"_index":289,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedorigin",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresponse",{"_index":835,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["cachedresult",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresult.lastread",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cacheresult",{"_index":279,"title":{"interfaces/CacheResult.html":{}},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["cacheservice",{"_index":286,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["calc(#{$navbar",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{}}}],["camelcase",{"_index":31,"title":{},"body":{"classes/AbstractModel.html":{},"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["camelcase(x[0])}=${x[1]}`).join",{"_index":754,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{}}}],["caption",{"_index":571,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":567,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":601,"title":{},"body":{"modules/FeatureModule.html":{}}}],["catcherror",{"_index":500,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["catcherror((error",{"_index":542,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["category",{"_index":705,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["center",{"_index":421,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["change",{"_index":1206,"title":{},"body":{"index.html":{}}}],["check",{"_index":1231,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":603,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":593,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["city",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"overview.html":{}}}],["clear",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":1191,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["clouds",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudy",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":423,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":427,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":426,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":425,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":424,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":583,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":584,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":585,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":586,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":693,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":695,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":696,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":694,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":932,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":934,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":935,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":933,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":967,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":968,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":969,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":970,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":1008,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declarations",{"_index":1011,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":1010,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":1009,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":767,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":1196,"title":{},"body":{"index.html":{}}}],["col",{"_index":931,"title":{},"body":{"components/SearchComponent.html":{}}}],["cold",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":393,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["colortheme",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["colortheme.dark",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":418,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["command",{"_index":910,"title":{},"body":{"components/SearchComponent.html":{},"index.html":{}}}],["common.scss",{"_index":388,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/exception",{"_index":447,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/request",{"_index":449,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":451,"title":{},"body":{"modules/ContainerModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["commonmodule",{"_index":444,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["compass",{"_index":913,"title":{},"body":{"components/SearchComponent.html":{}}}],["component",{"_index":74,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["condition",{"_index":538,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":326,"title":{"classes/Conditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["conditions(result[0",{"_index":1063,"title":{},"body":{"injectables/WeatherService.html":{}}}],["config",{"_index":958,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(result",{"_index":1081,"title":{},"body":{"injectables/WeatherService.html":{}}}],["const",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IConditions.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["constants/color",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["constants/data",{"_index":555,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["constants/panel",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(args",{"_index":16,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["constructor(config",{"_index":954,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":1033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":549,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{}}}],["container",{"_index":362,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":363,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":452,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":453,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":454,"title":{},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["container/header/header",{"_index":699,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":700,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":455,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":972,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":973,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":456,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":103,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":132,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":466,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":432,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":404,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["context",{"_index":1022,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ng",{"_index":920,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinates",{"_index":186,"title":{},"body":{"classes/AppSettings.html":{},"components/SearchComponent.html":{}}}],["countries",{"_index":1173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":259,"title":{"classes/Country.html":{}},"body":{"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":51,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["coverage",{"_index":1097,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":1023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["created",{"_index":11,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["createform",{"_index":849,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentoption",{"_index":850,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentroute",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{}}}],["d",{"_index":993,"title":{},"body":{"components/WeatherComponent.html":{}}}],["dailyforecasts",{"_index":635,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":1087,"title":{},"body":{"injectables/WeatherService.html":{}}}],["datasets",{"_index":554,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["datasets.locations",{"_index":561,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["date",{"_index":24,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["date.now",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["date:'eeee",{"_index":991,"title":{},"body":{"components/WeatherComponent.html":{}}}],["date:\\'eeee",{"_index":1006,"title":{},"body":{"components/WeatherComponent.html":{}}}],["datestring",{"_index":977,"title":{},"body":{"components/WeatherComponent.html":{}}}],["day",{"_index":357,"title":{"classes/Day.html":{}},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debouncetime",{"_index":874,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":891,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":829,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(providers.weather.apikey",{"_index":834,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["default",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"classes/Location.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":122,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":1201,"title":{},"body":{"index.html":{}}}],["development",{"_index":1198,"title":{},"body":{"index.html":{}}}],["direction",{"_index":417,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["directive",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1211,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1214,"title":{},"body":{"index.html":{}}}],["display",{"_index":399,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":1213,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":875,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dreary",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drizzle",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdownmodule",{"_index":605,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":911,"title":{},"body":{"components/SearchComponent.html":{}}}],["e.item",{"_index":912,"title":{},"body":{"components/SearchComponent.html":{}}}],["e2e",{"_index":1225,"title":{},"body":{"index.html":{}}}],["ease",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["eeee",{"_index":1001,"title":{},"body":{"components/WeatherComponent.html":{}}}],["effectivedate",{"_index":706,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":707,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":479,"title":{"classes/Elevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["elevation(args?.elevation",{"_index":646,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["encodebase64",{"_index":1047,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["encodebase64(json.stringify(this.context",{"_index":1096,"title":{},"body":{"injectables/WeatherService.html":{}}}],["encountered",{"_index":536,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1224,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":708,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":709,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endpoint",{"_index":528,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["englishname",{"_index":52,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["englishtype",{"_index":53,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["entry.lastread",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["enumerations",{"_index":1155,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":802,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":805,"title":{},"body":{"guards/LocationResolver.html":{}}}],["epochdate",{"_index":772,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["epochtime",{"_index":328,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["errors",{"_index":513,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":383,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.query",{"_index":894,"title":{},"body":{"components/SearchComponent.html":{}}}],["event.ts",{"_index":737,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":386,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":655,"title":{},"body":{"components/HeaderComponent.html":{}}}],["exceptioninterceptor",{"_index":433,"title":{"interceptors/ExceptionInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["execute",{"_index":1221,"title":{},"body":{"index.html":{}}}],["expire",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":660,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":50,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["f",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["failed",{"_index":524,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":247,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorites",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/enumerations.html":{}}}],["favorites'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":548,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":547,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":589,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":590,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":105,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":582,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":592,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":587,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":428,"title":{"modules/FeatureModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fieldsetmodule",{"_index":607,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1207,"title":{},"body":{"index.html":{}}}],["filter((x",{"_index":1051,"title":{},"body":{"injectables/WeatherService.html":{}}}],["flag",{"_index":1216,"title":{},"body":{"index.html":{}}}],["flagicon",{"_index":260,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["flex",{"_index":400,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["flurries",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focusevent",{"_index":759,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["fog",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":673,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["forecast",{"_index":626,"title":{"classes/Forecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["forecast(result",{"_index":1066,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forecast.web.app",{"_index":1195,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":1197,"title":{},"body":{"index.html":{}}}],["forecasts",{"_index":628,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forkjoin",{"_index":1046,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forkjoin(of(location",{"_index":1069,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":918,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol",{"_index":881,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol(undefined",{"_index":900,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":864,"title":{},"body":{"components/SearchComponent.html":{}}}],["forroot",{"_index":438,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":439,"title":{},"body":{"modules/ContainerModule.html":{}}}],["found",{"_index":531,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["freezing",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fsevents",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":540,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1227,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1209,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1189,"title":{},"body":{"index.html":{}}}],["geolatlng",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["geoposition",{"_index":213,"title":{"classes/GeoPosition.html":{}},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geoposition(default_location",{"_index":248,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["geoposition({latitude",{"_index":241,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["get(`${providers.weather.conditions}/${locationkey",{"_index":1061,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.forecasts}/${locationkey",{"_index":1064,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.locations}/${key",{"_index":1078,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(datasets.locations",{"_index":1050,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.autocomplete",{"_index":1056,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.geoposition",{"_index":1067,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(req",{"_index":294,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["getanimation",{"_index":329,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["getconditions",{"_index":1024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext",{"_index":1025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext(null",{"_index":560,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["getcurrentposition",{"_index":238,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getforecast",{"_index":1026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getgeoposition",{"_index":1027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticon",{"_index":330,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["getlocation",{"_index":1028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getstaticoutput",{"_index":1029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getting",{"_index":1186,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["given",{"_index":533,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gmtoffset",{"_index":768,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["go",{"_index":1230,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":391,"title":{},"body":{"components/ContainerComponent.html":{}}}],["gradient(to",{"_index":667,"title":{},"body":{"components/HeaderComponent.html":{}}}],["graph",{"_index":1238,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":791,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":792,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":26,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"dependencies.html":{}}}],["guid.newguid().tostring",{"_index":42,"title":{},"body":{"classes/AbstractModel.html":{}}}],["hail",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasprecipitation",{"_index":331,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["hazy",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":648,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["header'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":650,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":649,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":107,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":429,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":702,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":697,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headline",{"_index":629,"title":{"classes/Headline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["headline(args?.headline",{"_index":641,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":401,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1228,"title":{},"body":{"index.html":{}}}],["helpers/animation",{"_index":348,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["helpers/app",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/formatters",{"_index":32,"title":{},"body":{"classes/AbstractModel.html":{},"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["helpers/menu",{"_index":880,"title":{},"body":{"components/SearchComponent.html":{}}}],["helpers/search",{"_index":878,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":411,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hot",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":955,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":1203,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":446,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":956,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/SidenavModule.html":{}}}],["httperrorresponse",{"_index":497,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["httpevent",{"_index":498,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":495,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":499,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":295,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":285,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["https://dataservice.accuweather.com",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/currentconditions/v1",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/forecasts/v1/daily/5day",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":57,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iautocomplete",{"_index":265,"title":{"interfaces/IAutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["ice",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":473,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"components/SearchComponent.html":{}}}],["iconditions",{"_index":339,"title":{"interfaces/IConditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["iconphrase",{"_index":474,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":469,"title":{"interfaces/ICountry.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["iday",{"_index":475,"title":{"interfaces/IDay.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["identifier",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["ielevation",{"_index":483,"title":{"interfaces/IElevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":630,"title":{"interfaces/IForecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["igeoposition",{"_index":188,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iheadline",{"_index":631,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":711,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["imenuevent",{"_index":735,"title":{"interfaces/IMenuEvent.html":{}},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["imetric",{"_index":484,"title":{"interfaces/IMetric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["imperial",{"_index":481,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["implements",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IQueryParams.html":{},"guards/LocationResolver.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./weather/weather.module').then(m",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":65,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["injectable",{"_index":193,"title":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":877,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["inputevent",{"_index":758,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":953,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":609,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":385,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept",{"_index":493,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(req",{"_index":494,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":448,"title":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":492,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.ts:11",{"_index":826,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:14",{"_index":827,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:23",{"_index":496,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptors",{"_index":490,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":72,"title":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":280,"title":{},"body":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["intermittent",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid",{"_index":519,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["invalid:not(.ng",{"_index":921,"title":{},"body":{"components/SearchComponent.html":{}}}],["iqueryparams",{"_index":744,"title":{"interfaces/IQueryParams.html":{}},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{}}}],["isalias",{"_index":713,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isdaylightsaving",{"_index":769,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["isdaytime",{"_index":332,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":755,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":721,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isloading",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["isloadingchanged",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["item",{"_index":569,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/IMenuEvent.html":{},"injectables/WeatherService.html":{}}}],["item.conditions.temperature.metric.unit",{"_index":566,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.conditions.temperature.metric.value",{"_index":565,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.conditions.weathertext",{"_index":564,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.date",{"_index":1000,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.key",{"_index":1093,"title":{},"body":{"injectables/WeatherService.html":{}}}],["item.localizedname",{"_index":563,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.substring(1",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.temperature.maximum.unit",{"_index":1005,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.temperature.maximum.value",{"_index":1004,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.temperature.minimum.unit",{"_index":1003,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.temperature.minimum.value",{"_index":1002,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item[0].touppercase",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemperature",{"_index":349,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["items",{"_index":666,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["itimezone",{"_index":716,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["iweather",{"_index":633,"title":{"interfaces/IWeather.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["join",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jquery",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["json.parse(decodebase64(localstorage.getitem(encodebase64('context",{"_index":1083,"title":{},"body":{"injectables/WeatherService.html":{}}}],["json.stringify(result).split",{"_index":963,"title":{},"body":{"components/SidenavComponent.html":{}}}],["justify",{"_index":403,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["karma",{"_index":1223,"title":{},"body":{"index.html":{}}}],["key",{"_index":261,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"interfaces/IQueryParams.html":{},"classes/Location.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["keyfiltermodule",{"_index":611,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":908,"title":{},"body":{"components/SearchComponent.html":{}}}],["languages",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastread",{"_index":282,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["lat",{"_index":747,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["latitude",{"_index":643,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":580,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":54,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":1171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":395,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["linear",{"_index":390,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":333,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["literal",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":1193,"title":{},"body":{"index.html":{}}}],["lng",{"_index":748,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["loadchildren",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localizedname",{"_index":55,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["localizedtype",{"_index":56,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":334,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["localstorage.getitem(encodebase64('context",{"_index":1082,"title":{},"body":{"injectables/WeatherService.html":{}}}],["localstorage.setitem(encodebase64('context",{"_index":1095,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location",{"_index":552,"title":{"classes/Location.html":{}},"body":{"components/FavoritesComponent.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["location(location",{"_index":1080,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location(results[0]).update(results[1",{"_index":1074,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location.key",{"_index":1053,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationinput",{"_index":851,"title":{},"body":{"components/SearchComponent.html":{}}}],["locationkey",{"_index":1060,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationresolver",{"_index":450,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{}}}],["locations",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationtype",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":243,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.weathermodule",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":416,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":303,"title":{},"body":{"injectables/CacheService.html":{},"classes/Conditions.html":{},"interfaces/IConditions.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["map(item",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map.ts",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":407,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["marker",{"_index":909,"title":{},"body":{"components/SearchComponent.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":420,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{}}}],["maxage",{"_index":290,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["maximum",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ITemperature.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{}}}],["measure",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menuitem",{"_index":739,"title":{},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["mergemap",{"_index":800,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["messageservice",{"_index":442,"title":{},"body":{"modules/ContainerModule.html":{}}}],["metadata",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":291,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":482,"title":{"classes/Metric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["metric(args?.imperial",{"_index":487,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.maximum",{"_index":763,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.metric",{"_index":489,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.minimum",{"_index":765,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["min",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{},"components/WeatherComponent.html":{}}}],["minimum",{"_index":761,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["miscellaneous",{"_index":1154,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":992,"title":{},"body":{"components/WeatherComponent.html":{}}}],["mobilelink",{"_index":335,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["mode.enum",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":71,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":470,"title":{},"body":{"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{}}}],["model.ts:11",{"_index":477,"title":{},"body":{"classes/Day.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:12",{"_index":476,"title":{},"body":{"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:13",{"_index":59,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:14",{"_index":60,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:15",{"_index":61,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{}}}],["model.ts:16",{"_index":63,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Day.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:17",{"_index":64,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:18",{"_index":58,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:19",{"_index":268,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:20",{"_index":266,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:21",{"_index":342,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:22",{"_index":343,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:23",{"_index":344,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:24",{"_index":345,"title":{},"body":{"classes/Conditions.html":{}}}],["model.ts:25",{"_index":346,"title":{},"body":{"classes/Conditions.html":{}}}],["model.ts:26",{"_index":269,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:27",{"_index":267,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:28",{"_index":781,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:29",{"_index":782,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:30",{"_index":783,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:31",{"_index":341,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:32",{"_index":340,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:33",{"_index":784,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:34",{"_index":785,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:35",{"_index":786,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:36",{"_index":787,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:37",{"_index":788,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:38",{"_index":789,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:39",{"_index":780,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:5",{"_index":25,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:51",{"_index":790,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:6",{"_index":28,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:7",{"_index":29,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:8",{"_index":18,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:9",{"_index":471,"title":{},"body":{"classes/Country.html":{},"classes/Elevation.html":{},"classes/Metric.html":{}}}],["models/abstract",{"_index":70,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["models/administrativearea",{"_index":270,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/autocomplete",{"_index":879,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/cache",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["models/conditions",{"_index":717,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/country",{"_index":718,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/day",{"_index":774,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/elevation",{"_index":644,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":719,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/geoposition",{"_index":192,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/headline",{"_index":632,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["models/location",{"_index":557,"title":{},"body":{"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["models/metric",{"_index":485,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["models/temperature",{"_index":350,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/timezone",{"_index":720,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/weather",{"_index":634,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":119,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":121,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":441,"title":{},"body":{"modules/ContainerModule.html":{}}}],["moonlight",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1229,"title":{},"body":{"index.html":{}}}],["mostly",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["multi",{"_index":462,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":13,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":664,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1202,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":237,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/AbstractModel.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":251,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"components/WeatherComponent.html":{}}}],["next.handle(req",{"_index":837,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":541,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["next.handle(req.clone",{"_index":543,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["nextoffsetchange",{"_index":770,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["ng",{"_index":1199,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["ngoninit",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":358,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["number",{"_index":62,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["object",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":751,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{}}}],["object.entries(this).map(x",{"_index":753,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{}}}],["object.keys(args)?.foreach(key",{"_index":36,"title":{},"body":{"classes/AbstractModel.html":{}}}],["observable",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["of(cachedresponse",{"_index":838,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["of(this.getcontext(key",{"_index":1077,"title":{},"body":{"injectables/WeatherService.html":{}}}],["oninit",{"_index":361,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":852,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":853,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onsubmit",{"_index":854,"title":{},"body":{"components/SearchComponent.html":{}}}],["opacity",{"_index":573,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["options",{"_index":917,"title":{},"body":{"components/SearchComponent.html":{}}}],["origin",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["original",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.includes",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.split",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1).length",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].tolowercase",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].touppercase",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["originalevent",{"_index":738,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{}}}],["out",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":658,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["outputs",{"_index":652,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overcast",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overflow",{"_index":409,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1232,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1126,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":413,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["page",{"_index":1234,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":387,"title":{},"body":{"components/ContainerComponent.html":{}}}],["panelstate.show",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["parammap",{"_index":801,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params",{"_index":803,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["params.get('lng",{"_index":816,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.has('key",{"_index":811,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.has('lat",{"_index":813,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.has('lng",{"_index":814,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.ts",{"_index":746,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{}}}],["params.ts:10",{"_index":822,"title":{},"body":{"classes/QueryParams.html":{}}}],["params.ts:11",{"_index":819,"title":{},"body":{"classes/QueryParams.html":{}}}],["params.ts:15",{"_index":820,"title":{},"body":{"classes/QueryParams.html":{}}}],["params.ts:9",{"_index":821,"title":{},"body":{"classes/QueryParams.html":{}}}],["partly",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["pathmatch",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permission",{"_index":526,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":839,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["pipe(map(result",{"_index":1057,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(map(results",{"_index":1072,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(mergemap",{"_index":809,"title":{},"body":{"guards/LocationResolver.html":{}}}],["pipe(mergemap(location",{"_index":1068,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pointerevent",{"_index":740,"title":{},"body":{"interfaces/IMenuEvent.html":{}}}],["popper.js",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":578,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["predicate",{"_index":1090,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preferences",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prevented",{"_index":539,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":1194,"title":{},"body":{"index.html":{}}}],["primary",{"_index":394,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":443,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["primeng/autocomplete",{"_index":598,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":600,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":602,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":604,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":606,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":608,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":610,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":612,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":614,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":616,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":618,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":620,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":622,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":624,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":596,"title":{},"body":{"modules/FeatureModule.html":{}}}],["pristine",{"_index":922,"title":{},"body":{"components/SearchComponent.html":{}}}],["pristine):focus",{"_index":928,"title":{},"body":{"components/SearchComponent.html":{}}}],["private",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":1215,"title":{},"body":{"index.html":{}}}],["production",{"_index":1217,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1188,"title":{},"body":{"index.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":1226,"title":{},"body":{"index.html":{}}}],["provide",{"_index":460,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${this.country.id}/flat/32.png",{"_index":278,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["providers.weather.autocomplete",{"_index":503,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.conditions",{"_index":505,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.forecasts",{"_index":507,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.geoposition",{"_index":509,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.icons}/${this.icon}.svg",{"_index":478,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["providers.weather.icons}/${this.weathericon}.svg",{"_index":353,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["providers.weather.locations",{"_index":511,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":292,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["put(req",{"_index":300,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["q",{"_index":750,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"injectables/WeatherService.html":{}}}],["query",{"_index":757,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["queryparams",{"_index":749,"title":{"classes/QueryParams.html":{}},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["radiobuttonmodule",{"_index":613,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rain",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rank",{"_index":262,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reactiveformsmodule",{"_index":938,"title":{},"body":{"modules/SearchModule.html":{}}}],["readonly",{"_index":288,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["red",{"_index":925,"title":{},"body":{"components/SearchComponent.html":{}}}],["redirectto",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1233,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":870,"title":{},"body":{"components/SearchComponent.html":{}}}],["region",{"_index":714,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reload",{"_index":1205,"title":{},"body":{"index.html":{}}}],["req",{"_index":297,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.clone",{"_index":832,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.params.append('apikey",{"_index":833,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.url.includes(key",{"_index":545,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["req.url.includes(providers.weather.baseurl",{"_index":831,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["request",{"_index":515,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestcache",{"_index":307,"title":{"classes/RequestCache.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["requestinterceptor",{"_index":434,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":795,"title":{},"body":{"guards/LocationResolver.html":{},"modules/WeatherRoutingModule.html":{}}}],["resolve(route",{"_index":797,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolveaccordingly",{"_index":794,"title":{},"body":{"guards/LocationResolver.html":{}}}],["response",{"_index":283,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.map(item",{"_index":1058,"title":{},"body":{"injectables/WeatherService.html":{}}}],["result.tostring",{"_index":914,"title":{},"body":{"components/SearchComponent.html":{}}}],["result['location",{"_index":986,"title":{},"body":{"components/WeatherComponent.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[2",{"_index":1075,"title":{},"body":{"injectables/WeatherService.html":{}}}],["return",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":298,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":668,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["ripplemodule",{"_index":615,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":532,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["route.queryparammap",{"_index":804,"title":{},"body":{"guards/LocationResolver.html":{}}}],["router",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["routermodule",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":467,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":594,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":703,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":943,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(weatherroutes",{"_index":1020,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":168,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/WeatherModule.html":{}}}],["routing.module.ts",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["run",{"_index":1192,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1018,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["running",{"_index":1218,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":501,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["scaffolding",{"_index":1208,"title":{},"body":{"index.html":{}}}],["screen",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":844,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":846,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":845,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":939,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":940,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["search/search.module",{"_index":457,"title":{},"body":{"modules/ContainerModule.html":{}}}],["searchcomponent",{"_index":109,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":430,"title":{"modules/SearchModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["searchoptions",{"_index":855,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchpattern",{"_index":856,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchquery",{"_index":847,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchroutes",{"_index":942,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":936,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["selector",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":1200,"title":{},"body":{"index.html":{}}}],["server",{"_index":530,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services/application.service",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SidenavComponent.html":{}}}],["services/cache.service",{"_index":458,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["services/weather.service",{"_index":459,"title":{},"body":{"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{}}}],["set(datasets.conditions",{"_index":1084,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set(datasets.forecasts",{"_index":1085,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set(datasets.locations",{"_index":1086,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcontext",{"_index":1030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setobservables",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setoptions",{"_index":857,"title":{},"body":{"components/SearchComponent.html":{}}}],["sets.enum",{"_index":556,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["sets.enum.ts",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":946,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":945,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":185,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":187,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":191,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":189,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":190,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":111,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":710,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["shadow",{"_index":661,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["showers",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidenav",{"_index":422,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":952,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":951,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":966,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":964,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavcomponent",{"_index":113,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{}}}],["sidenavmodule",{"_index":431,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavpanel",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["sidenavstate",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sitetheme",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["sitethemechanged",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["size",{"_index":674,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["sleet",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":916,"title":{},"body":{"components/SearchComponent.html":{}}}],["snow",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":924,"title":{},"body":{"components/SearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":773,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["space",{"_index":405,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["spec\\.ts",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animation",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exception",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formatters.ts",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":465,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":360,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:17",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:28",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:33",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":436,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:42",{"_index":440,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":595,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":701,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":647,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":654,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":657,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":656,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":698,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":944,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":948,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":947,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":950,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:12",{"_index":959,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":957,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:15",{"_index":960,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":971,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":591,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":546,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:12",{"_index":550,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:17",{"_index":551,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":588,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":941,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":843,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:19",{"_index":860,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:20",{"_index":861,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:21",{"_index":863,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:22",{"_index":865,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:23",{"_index":869,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":858,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:26",{"_index":859,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:36",{"_index":866,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:38",{"_index":867,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:40",{"_index":868,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:42",{"_index":862,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:47",{"_index":873,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":937,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather",{"_index":1016,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["src/app/weather/weather.component.ts",{"_index":974,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:12",{"_index":982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:13",{"_index":980,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:19",{"_index":983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:23",{"_index":981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":1013,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/animation",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/app",{"_index":184,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/formatters.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/menu",{"_index":736,"title":{},"body":{"interfaces/IMenuEvent.html":{},"coverage.html":{}}}],["src/common/helpers/query",{"_index":745,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{}}}],["src/common/helpers/search",{"_index":756,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/exception",{"_index":491,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interceptors/request",{"_index":825,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractModel.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":49,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":258,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"coverage.html":{}}}],["src/common/models/cache",{"_index":281,"title":{},"body":{"interfaces/CacheResult.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":327,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":468,"title":{},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":472,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":480,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":627,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":642,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":704,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":712,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":741,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":760,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":766,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":771,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":793,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:11",{"_index":796,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:13",{"_index":799,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:12",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:13",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":214,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:19",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:20",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:28",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:45",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/cache.service.ts",{"_index":287,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["src/common/services/cache.service.ts:12",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:13",{"_index":293,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:16",{"_index":296,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:25",{"_index":301,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:6",{"_index":823,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/cache.service.ts:7",{"_index":824,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/weather.service.ts",{"_index":1021,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:17",{"_index":1034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:20",{"_index":1044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:25",{"_index":1035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:29",{"_index":1037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:33",{"_index":1039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:37",{"_index":1040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:44",{"_index":1041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:53",{"_index":1042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:60",{"_index":1036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:68",{"_index":1043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:73",{"_index":1038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:77",{"_index":1045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1187,"title":{"index.html":{}},"body":{}}],["state.enum",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":1167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":437,"title":{},"body":{"modules/ContainerModule.html":{}}}],["stored",{"_index":502,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stored[object.keys(stored).find(key",{"_index":544,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["storms",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{},"components/SearchComponent.html":{}}}],["subscriber",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.complete",{"_index":246,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(this.geolatlng",{"_index":245,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(value",{"_index":253,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success",{"_index":239,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":242,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":244,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":848,"title":{},"body":{"components/SearchComponent.html":{}}}],["sunny",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sunshine",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(args",{"_index":73,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["supplied",{"_index":518,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1235,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1236,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":876,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":892,"title":{},"body":{"components/SearchComponent.html":{}}}],["syntax",{"_index":517,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":617,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tap",{"_index":828,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["tap((event",{"_index":840,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["teal",{"_index":927,"title":{},"body":{"components/SearchComponent.html":{}}}],["tel",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":336,"title":{"classes/Temperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["temperature(args?.temperature",{"_index":352,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["template",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":1220,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1219,"title":{},"body":{"index.html":{}}}],["text",{"_index":676,"title":{},"body":{"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{},"components/SearchComponent.html":{}}}],["theme",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["theme.enum",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["theme.enum.ts",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["themeoption",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{}}}],["thermometer",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$isloading",{"_index":249,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.$isloadingchanged",{"_index":233,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$isloadingchanged.subscribe",{"_index":250,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$searchquery",{"_index":888,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.$searchquery.next(event.query",{"_index":895,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.$searchquery.pipe",{"_index":890,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.$sitetheme",{"_index":254,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.$sitethemechanged",{"_index":234,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$sitethemechanged.subscribe",{"_index":255,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$suggestions",{"_index":889,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.administrativearea",{"_index":271,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.administrativearea.localizedname",{"_index":277,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.application",{"_index":808,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.$isloading",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.$isloadingchanged.next(false",{"_index":842,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.$isloadingchanged.next(true",{"_index":830,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.$sitetheme",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.geolatlng",{"_index":807,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.geolatlng?.longitude",{"_index":818,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.sidenavstate",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.args?.sidenavmode",{"_index":230,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavstate",{"_index":232,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.cache.get(req",{"_index":836,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cache.put(req",{"_index":841,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cached.foreach(entry",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.get(cachedorigin",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.set(origin",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.conditions",{"_index":723,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.constructor.name",{"_index":44,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.context",{"_index":1049,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(data).slice().find((item",{"_index":1094,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(data).some(predicate",{"_index":1092,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(data).unshift(value",{"_index":1089,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.country",{"_index":273,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.country.localizedname",{"_index":276,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.createcontext",{"_index":1048,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.created",{"_index":39,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.createform",{"_index":884,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentoption",{"_index":886,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentroute",{"_index":384,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.datasets",{"_index":722,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.day",{"_index":776,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.elevation",{"_index":645,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["this.favorites",{"_index":558,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.forecast",{"_index":726,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.forecasts",{"_index":636,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.geolatlng",{"_index":240,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.geoposition",{"_index":728,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.getconditions(location.key",{"_index":1070,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(key",{"_index":1076,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(null",{"_index":1088,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getforecast(location.key",{"_index":1071,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.headline",{"_index":640,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.http",{"_index":1055,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get('../../../assets/datasets/output.json').topromise().then(result",{"_index":961,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.http.get('../../assets/datasets/output.json').pipe(map(location",{"_index":1079,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.id",{"_index":41,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.imperial",{"_index":486,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.isdaytime",{"_index":356,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["this.isloading",{"_index":252,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.localizedname",{"_index":275,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.location",{"_index":985,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location.forecast.headline.effectivedate",{"_index":990,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location.isfavorite",{"_index":987,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.imperial.unit",{"_index":999,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.imperial.value",{"_index":998,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.metric.unit",{"_index":997,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.metric.value",{"_index":996,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.weathertext",{"_index":994,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.localizedname",{"_index":989,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.locationinput",{"_index":899,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.locationinput.value",{"_index":898,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.maxage",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.maximum",{"_index":762,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.metric",{"_index":488,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.minimum",{"_index":764,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.night",{"_index":778,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.output",{"_index":962,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.primengconfig.ripple",{"_index":625,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.region",{"_index":730,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.resolveaccordingly(params",{"_index":810,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.route.data.subscribe",{"_index":984,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.router.events.subscribe",{"_index":382,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.router.navigate(['weather",{"_index":896,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions",{"_index":907,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions[0",{"_index":887,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setcontext(datasets.conditions",{"_index":1062,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext(datasets.forecasts",{"_index":1065,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext(datasets.locations",{"_index":1073,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setobservables",{"_index":236,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setoptions",{"_index":885,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.sidenavchanged.emit",{"_index":659,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavpanel",{"_index":229,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":231,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sitetheme",{"_index":256,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sources",{"_index":775,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.temperature",{"_index":351,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.timezone",{"_index":732,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.type",{"_index":43,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.weather",{"_index":559,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.weather.autocomplete(text.tolowercase",{"_index":893,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.weather.getgeoposition(+params.get('lat",{"_index":815,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getgeoposition(this.application.geolatlng?.latitude",{"_index":817,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getlocation(params.get('key",{"_index":812,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getstaticoutput",{"_index":806,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.updatecontext(this.location",{"_index":988,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this[camelcase(key",{"_index":37,"title":{},"body":{"classes/AbstractModel.html":{}}}],["thunderstorms",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timezone",{"_index":715,"title":{"classes/TimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["titlecase",{"_index":995,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastmodule",{"_index":619,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglebuttonmodule",{"_index":621,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglefavorite",{"_index":978,"title":{},"body":{"components/WeatherComponent.html":{}}}],["togglesidenav",{"_index":651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tooltipmodule",{"_index":623,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":392,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostring",{"_index":263,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["transition",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":684,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":463,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":33,"title":{},"body":{"classes/AbstractModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorized",{"_index":521,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":299,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["unexpected",{"_index":537,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":742,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"index.html":{}}}],["unittype",{"_index":743,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{}}}],["unknown",{"_index":1091,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unshift(location",{"_index":1054,"title":{},"body":{"injectables/WeatherService.html":{}}}],["update",{"_index":734,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["updatecontext",{"_index":1031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updatestorage",{"_index":1032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uri",{"_index":534,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":284,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["use",{"_index":1210,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":461,"title":{},"body":{"modules/ContainerModule.html":{}}}],["usevalue",{"_index":464,"title":{},"body":{"modules/ContainerModule.html":{}}}],["valid:not(.ng",{"_index":926,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators",{"_index":882,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(180.0000000",{"_index":905,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(90.0000000",{"_index":902,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.min",{"_index":903,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.required",{"_index":901,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.key",{"_index":897,"title":{},"body":{"components/SearchComponent.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1246,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":264,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"index.html":{}}}],["via",{"_index":1222,"title":{},"body":{"index.html":{}}}],["void",{"_index":302,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["w",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather",{"_index":116,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather(item",{"_index":639,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["weather.component.html",{"_index":976,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":975,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather",{"_index":1014,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.component",{"_index":1015,"title":{},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["weathercomponent",{"_index":115,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":337,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["weathermodule",{"_index":1007,"title":{"modules/WeatherModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherroutes",{"_index":1017,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["weatherroutingmodule",{"_index":1012,"title":{"modules/WeatherRoutingModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":435,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":338,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":568,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":414,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["wind",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windy",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":949,"title":{},"body":{"components/SettingsComponent.html":{}}}],["x",{"_index":412,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["x.isfavorite",{"_index":562,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["x.key",{"_index":1052,"title":{},"body":{"injectables/WeatherService.html":{}}}],["y",{"_index":410,"title":{},"body":{"components/ContainerComponent.html":{},"components/WeatherComponent.html":{}}}],["yes",{"_index":23,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":872,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":871,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractModel.html":{"url":"classes/AbstractModel.html","title":"class - AbstractModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/abstract-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/abstract-model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { camelCase } from '@helpers/formatters';\nimport { Guid } from 'guid-ts'\n\nexport abstract class AbstractModel {\n  public created: Date;\n  public id: Guid | string;\n  public name: string;\n  public type: string;\n  constructor(args?: any) {\n    args ? Object.keys(args)?.forEach(key => this[camelCase(key)] = this[camelCase(key)] ?? args[key]) : {};\n    this.created = new Date();\n    this.id = this.id ?? Guid.newGuid().toString();\n    this.type = this.type ?? this.constructor.name;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdministrativeArea.html":{"url":"classes/AdministrativeArea.html","title":"class - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                englishType\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                localizedType\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAdministrativeArea)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAdministrativeArea\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends AbstractModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorTheme              } from '@constants/color-theme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule          ,\n    BrowserAnimationsModule,\n    HttpClientModule       ,\n    AppRoutingModule       ,\n    ContainerModule.forRoot({\n      themeOption : ColorTheme.Dark,\n      sidenavMode : PanelMode .Push,\n      sidenavState: PanelState.Show,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: 'weather', loadChildren: () => \"import('./weather/weather.module').then(m => m.WeatherModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'weather' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                coordinates\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                themeOption\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            coordinates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            themeOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorTheme } from '@constants/color-theme.enum'\nimport { PanelMode } from '@constants/panel-mode.enum'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public themeOption?: ColorTheme;\n  public coordinates?: IGeoPosition;\n  public sidenavMode?: PanelMode;\n  public sidenavState?: PanelState;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $isLoading\n                            \n                            \n                                    Public\n                                $isLoadingChanged\n                            \n                            \n                                    Public\n                                $siteTheme\n                            \n                            \n                                    Public\n                                $siteThemeChanged\n                            \n                            \n                                    Public\n                                geoLatLng\n                            \n                            \n                                    Public\n                                getUserLocation\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Private\n                                setObservables\n                            \n                            \n                                    Public\n                                sidenavPanel\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                siteTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $isLoadingChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $siteTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $siteThemeChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoLatLng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            siteTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BehaviorSubject , Observable, Subject, Subscriber } from 'rxjs'\nimport { Injectable                                        } from '@angular/core'\nimport { ColorTheme                                        } from '@constants/color-theme.enum'\nimport { PanelMode                                         } from '@constants/panel-mode.enum'\nimport { PanelState                                        } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION                                  } from '@env/environment'\nimport { AppSettings                                       } from '@helpers/app-settings'\nimport { GeoPosition                                       } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public $isLoading       : Observable   ;\n  public $isLoadingChanged: Subject      ;\n  public $siteTheme       : Observable;\n  public $siteThemeChanged: Subject   ;\n  public geoLatLng        : GeoPosition           ;\n  public isLoading        : boolean               ;\n  public siteTheme        : ColorTheme            ;\n  public sidenavPanel     : PanelMode             ;\n  public sidenavState     : PanelState            ;\n  constructor(private args?: AppSettings) {\n    this.sidenavPanel = this.args?.sidenavMode ;\n    this.sidenavState = this.args?.sidenavState;\n    this.$isLoadingChanged = new Subject();\n    this.$siteThemeChanged = new BehaviorSubject(args?.themeOption);\n    this.setObservables();\n  }\n  public getUserLocation = (): Observable => new Observable(\n    (subscriber: Subscriber) => {\n      navigator.geolocation\n        .getCurrentPosition(\n          (success) => {\n            this.geoLatLng = new GeoPosition({latitude: success.coords.latitude, longitude: success.coords.longitude});\n            subscriber.next(this.geoLatLng);\n            subscriber.complete();\n          },\n          (failure) => {\n            this.geoLatLng = new GeoPosition(DEFAULT_LOCATION);\n            subscriber.next(this.geoLatLng);\n            subscriber.complete();\n          });\n    }\n  )\n\n  private setObservables = () => {\n    this.$isLoading = new Observable(\n      subscriber => {\n        this.$isLoadingChanged.subscribe({\n          next: value => {\n            if (value != this.isLoading) {\n              this.isLoading = value;\n              subscriber.next(value);\n            }\n          }\n        })\n      });\n\n    this.$siteTheme = new Observable(\n      subscriber => {\n        this.$siteThemeChanged.subscribe({\n          next: value => {\n            if (value != this.siteTheme) {\n              this.siteTheme = value;\n              subscriber.next(value);\n            }\n          }\n        })\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoComplete.html":{"url":"classes/AutoComplete.html","title":"class - AutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                flagIcon\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                version\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAutoComplete)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAutoComplete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { AbstractModel                               } from '@models/abstract-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName}, ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/flat/32.png`;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheResult.html":{"url":"interfaces/CacheResult.html","title":"interface - CacheResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/cache-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        lastRead\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\n\nexport interface CacheResult {\n  lastRead?: number           ;\n  response?: HttpResponse;\n  url     ?: string           ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cached\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxAge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cached\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8.64e+7\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conditions.html":{"url":"classes/Conditions.html","title":"class - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                getAnimation\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAnimation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                  } from '@env/environment'\nimport { animationMap               } from '@helpers/animation-map'\nimport { AbstractModel              } from '@models/abstract-model'\nimport { ITemperature , Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends AbstractModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n  public getAnimation = (): string => {\n    const result = animationMap[this.weatherText.toLowerCase()]\n    ?? animationMap[`${this.weatherText.toLowerCase()} ${this.isDayTime ? 'day' : 'night'}`];\n    return `../../assets/images/anim/${result}.svg`;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $isLoading\n                            \n                            \n                                    Public\n                                $siteTheme\n                            \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $siteTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable } from 'rxjs'\nimport { Component, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { ColorTheme } from '@constants/color-theme.enum'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { ApplicationService } from '@services/application.service'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public $isLoading: Observable;\n  public $siteTheme: Observable;\n  public currentRoute: string;\n  public sidenavState: PanelState;\n  constructor(private application: ApplicationService, private router: Router) {\n    this.$siteTheme = this.application.$siteTheme;\n    this.$isLoading = this.application.$isLoading;\n    this.sidenavState = this.application.sidenavState;\n    this.router.events.subscribe({\n      next: event => this.currentRoute = !(event instanceof NavigationEnd)\n        ? this.currentRoute\n        : `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n  }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(\n    to top,\n    $color-primary,\n    lighten($color: $color-primary, $amount: 10%),\n    lighten($color: $color-primary, $amount: 20%)\n  );\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: 100vh;\n    max-height: 100vh;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n      overflow-y: hidden;\n      flex: auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      .content-center {\n        overflow-y: auto;\n        overflow-x: hidden;\n        flex: auto;\n      }\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ExceptionInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MessageService                           } from 'primeng/api'\nimport { CommonModule                             } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule         } from '@angular/core'\nimport { ExceptionInterceptor                     } from '@common/interceptors/exception-interceptor'\nimport { RequestInterceptor                       } from '@common/interceptors/request-interceptor'\nimport { LocationResolver                         } from '@common/resolvers/location.resolver'\nimport { ContainerRoutingModule                   } from '@container/container-routing.module'\nimport { ContainerComponent                       } from '@container/container.component'\nimport { FeatureModule                            } from '@container/feature.module'\nimport { HeaderModule                             } from '@container/header/header.module'\nimport { SidenavModule                            } from '@container/sidenav/sidenav.module'\nimport { AppSettings                              } from '@helpers/app-settings'\nimport { SearchModule                             } from '@search/search.module'\nimport { ApplicationService                       } from '@services/application.service'\nimport { CacheService          , RequestCache     } from '@services/cache.service'\nimport { WeatherService                           } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule, SearchModule, FeatureModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: RequestCache, useClass: CacheService },\n    { provide: HTTP_INTERCEPTORS, useClass: ExceptionInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor  , multi: true },\n    MessageService,\n    ApplicationService,\n    WeatherService,\n    LocationResolver\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends AbstractModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Day.html":{"url":"classes/Day.html","title":"class - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { AbstractModel } from '@models/abstract-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends AbstractModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elevation.html":{"url":"classes/Elevation.html","title":"class - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IElevation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IElevation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends AbstractModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ExceptionInterceptor.html":{"url":"interceptors/ExceptionInterceptor.html","title":"interceptor - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/exception-interceptor.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable                                                              } from '@angular/core'\nimport { Observable                                                              } from 'rxjs'\nimport { catchError                                                              } from 'rxjs/operators'\nimport { providers                                                               } from '@env/environment'\n\nexport const stored = {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\nexport const errors = {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n@Injectable()\nexport class ExceptionInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        return next.handle(req.clone({ url: stored[Object.keys(stored).find(key => req.url.includes(key))] }));\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                favorites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/favorites/favorites.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { DataSets } from '@constants/data-sets.enum'\nimport { Location } from '@models/location-model'\nimport { WeatherService } from '@services/weather.service'\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  public favorites: Location[] = new Array();\n  constructor(private weather: WeatherService) {\n    this.favorites = this.weather\n      .getContext(null, DataSets.Locations, (x: Location) => x.isFavorite);\n  }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{item.localizedName}}\n    \n      \n      \n        {{item.conditions.weatherText}}\n        \n        {{item.conditions.temperature.metric.value}}\n        {{item.conditions.temperature.metric.unit}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{item.localizedName}}                        {{item.conditions.weatherText}}                {{item.conditions.temperature.metric.value}}        {{item.conditions.temperature.metric.unit}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Forecast.html":{"url":"classes/Forecast.html","title":"class - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Headline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends AbstractModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoPosition.html":{"url":"classes/GeoPosition.html","title":"class - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elevation\n                            \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IGeoPosition | any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IGeoPosition | any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elevation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Elevation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends AbstractModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition | any) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavChanged: EventEmitter = new EventEmitter();\n  public toggleSidenav = () => this.sidenavChanged.emit();\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: 40px;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $color-primary, $amount: 5%), lighten($color: $color-primary, $amount: 10%), lighten($color: $color-primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 5px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Headline.html":{"url":"classes/Headline.html","title":"class - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                effectiveDate\n                            \n                            \n                                    Public\n                                effectiveEpochDate\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                endEpochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                severity\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IHeadline)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IHeadline\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends AbstractModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        CountryId\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        EnglishType\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        Level\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        LocalizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CountryId\n                                    \n                                \n                                \n                                    \n                                        CountryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishType\n                                    \n                                \n                                \n                                    \n                                        EnglishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedType\n                                    \n                                \n                                \n                                    \n                                        LocalizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends AbstractModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoComplete.html":{"url":"interfaces/IAutoComplete.html","title":"interface - IAutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { AbstractModel                               } from '@models/abstract-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName}, ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/flat/32.png`;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EpochTime\n                                \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        IsDayTime\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        LocalObservationDateTime\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                                \n                                            Optional\n                                        WeatherIcon\n                                \n                                \n                                            Optional\n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                  } from '@env/environment'\nimport { animationMap               } from '@helpers/animation-map'\nimport { AbstractModel              } from '@models/abstract-model'\nimport { ITemperature , Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends AbstractModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n  public getAnimation = (): string => {\n    const result = animationMap[this.weatherText.toLowerCase()]\n    ?? animationMap[`${this.weatherText.toLowerCase()} ${this.isDayTime ? 'day' : 'night'}`];\n    return `../../assets/images/anim/${result}.svg`;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends AbstractModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        Icon\n                                \n                                \n                                            Optional\n                                        IconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconPhrase\n                                    \n                                \n                                \n                                    \n                                        IconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { AbstractModel } from '@models/abstract-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends AbstractModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends AbstractModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DailyForecasts\n                                \n                                \n                                            Optional\n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends AbstractModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Elevation\n                                \n                                \n                                            Optional\n                                        Latitude\n                                \n                                \n                                            Optional\n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Elevation\n                                    \n                                \n                                \n                                    \n                                        Elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends AbstractModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition | any) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Category\n                                \n                                \n                                            Optional\n                                        EffectiveDate\n                                \n                                \n                                            Optional\n                                        EffectiveEpochDate\n                                \n                                \n                                            Optional\n                                        EndDate\n                                \n                                \n                                            Optional\n                                        EndEpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Severity\n                                \n                                \n                                            Optional\n                                        Text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndDate\n                                    \n                                \n                                \n                                    \n                                        EndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndEpochDate\n                                    \n                                \n                                \n                                    \n                                        EndEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Severity\n                                    \n                                \n                                \n                                    \n                                        Severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends AbstractModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        AdministrativeArea\n                                \n                                \n                                            Optional\n                                        Conditions\n                                \n                                \n                                            Optional\n                                        Country\n                                \n                                \n                                            Optional\n                                        DataSets\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        Forecast\n                                \n                                \n                                            Optional\n                                        GeoPosition\n                                \n                                \n                                            Optional\n                                        IsAlias\n                                \n                                \n                                            Optional\n                                        Key\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        Rank\n                                \n                                \n                                            Optional\n                                        Region\n                                \n                                \n                                            Optional\n                                        TimeZone\n                                \n                                \n                                            Optional\n                                        Type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Conditions\n                                    \n                                \n                                \n                                    \n                                        Conditions:         IConditions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IConditions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DataSets\n                                    \n                                \n                                \n                                    \n                                        DataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Forecast\n                                    \n                                \n                                \n                                    \n                                        Forecast:         IForecast\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IForecast\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GeoPosition\n                                    \n                                \n                                \n                                    \n                                        GeoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsAlias\n                                    \n                                \n                                \n                                    \n                                        IsAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                    \n                                \n                                \n                                    \n                                        Region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TimeZone\n                                    \n                                \n                                \n                                    \n                                        TimeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel                           } from '@models/abstract-model'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { Conditions        , IConditions         } from '@models/conditions-model'\nimport { Country           , ICountry            } from '@models/country-model'\nimport { Forecast          , IForecast           } from '@models/forecast-model'\nimport { GeoPosition       , IGeoPosition        } from '@models/geoPosition-model'\nimport { ITimeZone         , TimeZone            } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Conditions        ?: IConditions        ;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  Forecast          ?: IForecast          ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.conditions         = new Conditions        (args?.Conditions        );\n    this.country            = new Country           (args?.Country           );\n    this.forecast           = new Forecast          (args?.Forecast          );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n  public update = (conditions: Conditions, forecast: Forecast): Location => {\n    this.conditions = conditions;\n    this.forecast = forecast;\n    return this;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuEvent.html":{"url":"interfaces/IMenuEvent.html","title":"interface - IMenuEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/menu-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                                \n                                        originalEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     PointerEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PointerEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MenuItem } from 'primeng/api';\n\nexport interface IMenuEvent {\n  item         : MenuItem    ;\n  originalEvent: PointerEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Unit\n                                \n                                \n                                            Optional\n                                        UnitType\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Unit\n                                    \n                                \n                                \n                                    \n                                        Unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UnitType\n                                    \n                                \n                                \n                                    \n                                        UnitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends AbstractModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQueryParams.html":{"url":"interfaces/IQueryParams.html","title":"interface - IQueryParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IQueryParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/query-params.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        lat\n                                \n                                \n                                            Optional\n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { camelCase } from '@helpers/formatters';\n\nexport interface IQueryParams {\n  lat?: number;\n  lng?: number;\n  key?: number;\n}\nexport class QueryParams implements IQueryParams {\n  public lat: number;\n  public lng: number;\n  public q  : string;\n  constructor(args?: IQueryParams) {\n    Object.assign(this, args);\n  }\n  public build = (): string =>\n    `?${Object.entries(this).map(x => `${camelCase(x[0])}=${x[1]}`).join('&')}`;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Maximum\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                                \n                                            Optional\n                                        Minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Maximum\n                                    \n                                \n                                \n                                    \n                                        Maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Minimum\n                                    \n                                \n                                \n                                    \n                                        Minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Imperial?: IMetric;\n  Maximum ?: IMetric;\n  Metric  ?: IMetric;\n  Minimum ?: IMetric;\n}\nexport class Temperature extends AbstractModel {\n  public imperial: Metric;\n  public maximum : Metric;\n  public metric  : Metric;\n  public minimum : Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.imperial = new Metric(args?.Imperial);\n    this.maximum  = new Metric(args?.Maximum );\n    this.metric   = new Metric(args?.Metric  );\n    this.minimum  = new Metric(args?.Minimum );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Code\n                                \n                                \n                                            Optional\n                                        GmtOffset\n                                \n                                \n                                            Optional\n                                        IsDaylightSaving\n                                \n                                \n                                            Optional\n                                        Name\n                                \n                                \n                                            Optional\n                                        NextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Code\n                                    \n                                \n                                \n                                    \n                                        Code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GmtOffset\n                                    \n                                \n                                \n                                    \n                                        GmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        IsDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        NextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends AbstractModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Date\n                                \n                                \n                                            Optional\n                                        Day\n                                \n                                \n                                            Optional\n                                        EpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Night\n                                \n                                \n                                            Optional\n                                        Sources\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Sources\n                                    \n                                \n                                \n                                    \n                                        Sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends AbstractModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Forecast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel                           } from '@models/abstract-model'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { Conditions        , IConditions         } from '@models/conditions-model'\nimport { Country           , ICountry            } from '@models/country-model'\nimport { Forecast          , IForecast           } from '@models/forecast-model'\nimport { GeoPosition       , IGeoPosition        } from '@models/geoPosition-model'\nimport { ITimeZone         , TimeZone            } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Conditions        ?: IConditions        ;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  Forecast          ?: IForecast          ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.conditions         = new Conditions        (args?.Conditions        );\n    this.country            = new Country           (args?.Country           );\n    this.forecast           = new Forecast          (args?.Forecast          );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n  public update = (conditions: Conditions, forecast: Forecast): Location => {\n    this.conditions = conditions;\n    this.forecast = forecast;\n    return this;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                resolveAccordingly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable                                } from 'rxjs'\nimport { mergeMap                                  } from 'rxjs/operators'\nimport { Injectable                                } from '@angular/core'\nimport { ActivatedRouteSnapshot, ParamMap, Resolve } from '@angular/router'\nimport { environment                               } from '@env/environment'\nimport { Location                                  } from '@models/location-model'\nimport { ApplicationService                        } from '@services/application.service'\nimport { WeatherService                            } from '@services/weather.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private weather: WeatherService) { }\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const params = route.queryParamMap;\n\n    return !environment.production\n      ? this.weather.getStaticOutput()\n      : (!this.application.geoLatLng)\n        ? this.application\n          .getUserLocation()\n          .pipe(mergeMap(\n            () => this.resolveAccordingly(params)))\n        : this.resolveAccordingly(params);\n  }\n\n  private resolveAccordingly = (params: ParamMap): Observable => params.has('key')\n    ? this.weather.getLocation(params.get('key'))\n    : (params.has('lat') && params.has('lng'))\n      ? this.weather.getGeoPosition(+params.get('lat'), +params.get('lng'))\n      : this.weather.getGeoPosition(this.application.geoLatLng?.latitude, this.application.geoLatLng?.longitude);\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                unitType\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IMetric)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IMetric\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends AbstractModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParams.html":{"url":"classes/QueryParams.html","title":"class - QueryParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/query-params.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IQueryParams\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lng\n                            \n                            \n                                    Public\n                                q\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IQueryParams)\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/query-params.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IQueryParams\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            build\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { camelCase } from '@helpers/formatters';\n\nexport interface IQueryParams {\n  lat?: number;\n  lng?: number;\n  key?: number;\n}\nexport class QueryParams implements IQueryParams {\n  public lat: number;\n  public lng: number;\n  public q  : string;\n  constructor(args?: IQueryParams) {\n    Object.assign(this, args);\n  }\n  public build = (): string =>\n    `?${Object.entries(this).map(x => `${camelCase(x[0])}=${x[1]}`).join('&')}`;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable        , of                                                      } from 'rxjs'\nimport { tap                                                                         } from 'rxjs/operators'\nimport { HttpEvent         , HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable                                                                  } from '@angular/core'\nimport { providers                                                                   } from '@env/environment'\nimport { decodeBase64                                                                } from '@helpers/formatters'\nimport { ApplicationService                                                          } from '@services/application.service'\nimport { RequestCache                                                                } from '@services/cache.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService, private cache: RequestCache) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.application.$isLoadingChanged.next(true);\n    req = req.url.includes(providers.weather.baseUrl) ? req.clone({\n      params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n    }) : req;\n    const cachedResponse = this.cache.get(req);\n    return (!cachedResponse ? next.handle(req) : of(cachedResponse))\n      .pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            this.cache.put(req, event);\n            this.application.$isLoadingChanged.next(false);\n          }\n        })\n      );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $searchQuery\n                            \n                            \n                                    Public\n                                $suggestions\n                            \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                currentOption\n                            \n                            \n                                    Public\n                                locationInput\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                searchOptions\n                            \n                            \n                                    Public\n                                searchPattern\n                            \n                            \n                                    Private\n                                setOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $searchQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $suggestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locationInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[a-zA-Z ]/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable, Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component, Input, OnInit } from '@angular/core'\nimport { ISearchEvent } from '@helpers/search-event'\nimport { AutoComplete } from '@models/autoComplete-model'\nimport { WeatherService } from '@services/weather.service'\nimport { MenuItem } from 'primeng/api'\nimport { IMenuEvent } from '@helpers/menu-event'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { PanelState } from '@constants/panel-state.enum'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  public $searchQuery: Subject;\n  public $suggestions: Observable;\n  public currentOption: MenuItem;\n  public locationInput: FormGroup;\n  public searchOptions: MenuItem[];\n  public searchPattern: RegExp = /[a-zA-Z ]/;\n  constructor(private weather: WeatherService, private router: Router) { }\n  ngOnInit() {\n    this.createForm();\n    this.setOptions();\n    this.currentOption = this.searchOptions[0];\n    this.$searchQuery = new Subject();\n    this.$suggestions = this.$searchQuery.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text.toLowerCase())));\n  }\n  public onSearch = (event: ISearchEvent) =>\n    event.query ? this.$searchQuery.next(event.query) : undefined;\n  public onSelect = (value: AutoComplete) =>\n    this.router.navigate(['weather'], { queryParams: { key: value.key } });\n  public onSubmit = () =>\n    this.router.navigate(['weather'], { queryParams: this.locationInput.value });\n  public createForm = () => this.locationInput =\n    new FormGroup({\n      lat: new FormControl(undefined, [Validators.required, Validators.max(90.0000000), Validators.min(-90.0000000)]),\n      lng: new FormControl(undefined, [Validators.required, Validators.max(180.0000000), Validators.min(-180.0000000)]),\n    });\n  private setOptions = () => this.searchOptions = [\n    { label: 'Location', icon: 'fa fa-map-marker', command: (e: IMenuEvent) => this.currentOption = e.item },\n    {\n      label: 'Coordinates',\n      icon: 'fa fa-compass',\n      command: (e: IMenuEvent) => {\n        this.currentOption = e.item;\n        this.createForm();\n      }\n    },\n  ];\n}\n\n\n    \n\n    \n        \n  \n    \n      Weather\n    \n    \n      \n    \n  \n  \n    \n      Location\n      \n        \n          \n            \n            {{result.toString()}}\n          \n        \n      \n    \n    \n      \n        Latitude\n        \n        \n        \n      \n      \n        Longitude\n        \n        \n        \n      \n      \n        \n          \n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                @import \"common.scss\";\n.app-search {\n  padding: 10px 0px;\n  margin-bottom: 10px;\n  max-width: 100%;\n  .search-header {\n    padding: 5px;\n    align-items: center;\n    color: $color-text;\n    display: flex;\n    font-size: 32px;\n    justify-content: space-between;\n    .header-title {\n      display: flex;\n      align-items: center;\n      padding-right: 10px;\n      .fa {\n        font-size: smaller;\n        margin-right: 10px;\n      }\n    }\n    .search-options {\n      padding-left: 10px;\n      flex: auto;\n    }\n  }\n  .search-form {\n    padding: 10px 0px;\n    .form-autocomplete {\n      display: flex;\n      flex-direction: column;\n      padding: 0px 2.5px;\n    }\n    .form-coordinates {\n      margin-bottom: 0px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n}\nlabel {\n  margin: 0px;\n  color: $color-text;\n}\n.form-control.ng-invalid:not(.ng-pristine) {\n  border: 2px solid red;\n  color: $color-text;\n}\n.form-control.ng-valid:not(.ng-pristine) {\n  border: 2px solid $color-teal;\n  color: $color-text;\n}\n.form-control.ng-invalid:not(.ng-pristine):focus {\n  transition: ease-in-out 300ms;\n  background: lighten($color: red, $amount: 40%);\n  border: 2px solid red;\n  color: red;\n}\n.form-control.ng-valid:not(.ng-pristine):focus {\n  transition: ease-in-out 300ms;\n  background: lighten($color: $color-teal, $amount: 40%);\n  border: 2px solid $color-teal;\n  color: #28a745;\n}\n.input-col {\n  flex: auto;\n  padding: 0px 2.5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather                                Location                                                {{result.toString()}}                                              Latitude                                            Longitude                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FeatureModule, SearchRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                output\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component         , Input, OnInit } from '@angular/core'\nimport { PanelState                        } from '@constants/panel-state.enum'\nimport { ApplicationService                } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState;\n  public output: string[];\n  constructor(private config: ApplicationService, private http: HttpClient) { }\n  ngOnInit() {\n    this.http.get('../../../assets/datasets/output.json').toPromise().then(result => this.output = JSON.stringify(result).split(/[{}]/));\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 350px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\nimport { HttpClientModule } from '@angular/common/http'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HttpClientModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Temperature.html":{"url":"classes/Temperature.html","title":"class - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                maximum\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                minimum\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITemperature)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/temperature-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITemperature\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maximum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minimum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Imperial?: IMetric;\n  Maximum ?: IMetric;\n  Metric  ?: IMetric;\n  Minimum ?: IMetric;\n}\nexport class Temperature extends AbstractModel {\n  public imperial: Metric;\n  public maximum : Metric;\n  public metric  : Metric;\n  public minimum : Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.imperial = new Metric(args?.Imperial);\n    this.maximum  = new Metric(args?.Maximum );\n    this.metric   = new Metric(args?.Metric  );\n    this.minimum  = new Metric(args?.Minimum );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeZone.html":{"url":"classes/TimeZone.html","title":"class - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                gmtOffset\n                            \n                            \n                                    Public\n                                isDaylightSaving\n                            \n                            \n                                    Public\n                                nextOffsetChange\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITimeZone)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITimeZone\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gmtOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDaylightSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nextOffsetChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends AbstractModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends AbstractModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateString\n                            \n                            \n                                    Public\n                                location\n                            \n                            \n                                    Public\n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { Location } from '@models/location-model'\nimport { WeatherService } from '@services/weather.service'\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  public location: Location;\n  public dateString: Date | string;\n  constructor(private weather: WeatherService, private route: ActivatedRoute) {\n    this.route.data.subscribe({\n      next: (result) => this.location = result['location']\n    });\n  }\n  public toggleFavorite = () => {\n    this.location.isFavorite = !this.location.isFavorite;\n    this.weather.updateContext(this.location);\n  }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{this.location?.localizedName}}\n          {{this.location.forecast.headline.effectiveDate | date:'EEEE, MMMM d, y'}}\n          {{this.location?.conditions.weatherText | titlecase}}\n          \n          \n            {{this.location?.conditions.temperature.metric.value}}\n            {{this.location?.conditions.temperature.metric.unit}}\n             / \n            {{this.location?.conditions.temperature.imperial.value}}\n            {{this.location?.conditions.temperature.imperial.unit}}\n          \n        \n        \n           \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        {{item.date | date: 'EEEE'}}\n        \n          \n          \n            \n              Min: {{item.temperature.minimum.value}}\n              {{item.temperature.minimum.unit}}\n            \n            \n            \n              Max: {{item.temperature.maximum.value}}\n              {{item.temperature.maximum.unit}}\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{this.location?.localizedName}}          {{this.location.forecast.headline.effectiveDate | date:\\'EEEE, MMMM d, y\\'}}          {{this.location?.conditions.weatherText | titlecase}}                                {{this.location?.conditions.temperature.metric.value}}            {{this.location?.conditions.temperature.metric.unit}}             /             {{this.location?.conditions.temperature.imperial.value}}            {{this.location?.conditions.temperature.imperial.unit}}                                                                                           {{item.date | date: \\'EEEE\\'}}                                                      Min: {{item.temperature.minimum.value}}              {{item.temperature.minimum.unit}}                                                  Max: {{item.temperature.maximum.value}}              {{item.temperature.maximum.unit}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { FeatureModule        } from '@container/feature.module'\nimport { WeatherRoutingModule } from '@weather/weather-routing.module'\nimport { WeatherComponent     } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, WeatherRoutingModule, FeatureModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherRoutingModule.html":{"url":"modules/WeatherRoutingModule.html","title":"module - WeatherRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { LocationResolver } from '@common/resolvers/location.resolver';\nimport { WeatherComponent } from '@weather/weather.component'\n\nexport const WeatherRoutes: Routes = [\n  { path: '', resolve: { location: LocationResolver }, runGuardsAndResolvers: 'always', component: WeatherComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(WeatherRoutes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                            \n                                    Private\n                                context\n                            \n                            \n                                    Private\n                                createContext\n                            \n                            \n                                    Public\n                                getConditions\n                            \n                            \n                                    Public\n                                getContext\n                            \n                            \n                                    Public\n                                getForecast\n                            \n                            \n                                    Public\n                                getGeoPosition\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Public\n                                getStaticOutput\n                            \n                            \n                                    Private\n                                setContext\n                            \n                            \n                                    Public\n                                updateContext\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGeoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStaticOutput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:77\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { forkJoin     , Observable, of } from 'rxjs'\nimport { map          , mergeMap       } from 'rxjs/operators'\nimport { HttpClient                    } from '@angular/common/http'\nimport { Injectable                    } from '@angular/core'\nimport { DataSets                      } from '@constants/data-sets.enum'\nimport { providers                     } from '@env/environment'\nimport { AppSettings                   } from '@helpers/app-settings'\nimport { decodeBase64 , encodeBase64   } from '@helpers/formatters'\nimport { AbstractModel                 } from '@models/abstract-model'\nimport { AutoComplete , IAutoComplete  } from '@models/autoComplete-model'\nimport { Conditions   , IConditions    } from '@models/conditions-model'\nimport { Forecast     , IForecast      } from '@models/forecast-model'\nimport { ILocation    , Location       } from '@models/location-model'\n\n@Injectable()\nexport class WeatherService {\n  private context: Map;\n  constructor(private http: HttpClient, private args?: AppSettings) { this.createContext(); }\n\n  public updateContext = (location: Location) => this.context\n    .get(DataSets.Locations)\n    .filter((x: Location) => x.key != location.key)\n    .unshift(location);\n\n  public autoComplete = (search: string): Observable => this.http\n    .get(providers.weather.autocomplete, { params: { q: search } })\n    .pipe(map(result => result.map(item => new AutoComplete(item))));\n\n  public getConditions = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.conditions}/${locationKey}`)\n    .pipe(map(result => this.setContext(DataSets.Conditions, new Conditions(result[0]))));\n\n  public getForecast = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.forecasts}/${locationKey}`)\n    .pipe(map(result => this.setContext(DataSets.Forecasts, new Forecast(result))));\n\n  public getGeoPosition = (lat: number, lng: number): Observable => this.http\n    .get(providers.weather.geoposition, { params: { q: lat + ',' + lng } })\n    .pipe(mergeMap(location =>\n      forkJoin(of(location), this.getConditions(location.Key), this.getForecast(location.Key))\n        .pipe(map(results => this.setContext(DataSets.Locations, new Location(results[0]).update(results[1], results[2]))\n        ))));\n\n  public getLocation = (key: string): Observable => this.getContext(key)\n    ? of(this.getContext(key))\n    : this.http\n      .get(`${providers.weather.locations}/${key}`)\n      .pipe(mergeMap(location =>\n        forkJoin(of(location), this.getConditions(location.Key), this.getForecast(location.Key))\n          .pipe(map(results =>\n            this.setContext(DataSets.Locations, new Location(results[0]).update(results[1], results[2]))))));\n\n  public getStaticOutput = () =>\n    this.http.get('../../assets/datasets/output.json').pipe(map(location => {\n      const result = new Location(location);\n      console.log(result);\n      return result;\n    }));\n\n  private createContext = () => this.context =\n    localStorage.getItem(encodeBase64('context'))\n      ? JSON.parse(decodeBase64(localStorage.getItem(encodeBase64('context'))))\n      : new Map()\n        .set(DataSets.Conditions, new Array())\n        .set(DataSets.Forecasts, new Array())\n        .set(DataSets.Locations, new Array());\n\n  private setContext = (data: DataSets, value: any): any | undefined => {\n    !this.getContext(null, data, x => x == value)\n      ? this.context.get(data).unshift(value) : undefined;\n    return value;\n  }\n  public getContext = (key?: string, data: DataSets = DataSets.Locations, predicate?: (value: any) => unknown): any | undefined =>\n    this.context.get(data).some(predicate ?? ((item: Location) => item.key == key))\n      ? this.context.get(data).slice().find((item: Location) => item.key == key) : undefined;\n\n  public updateStorage = () => localStorage.setItem(encodeBase64('context'), encodeBase64(JSON.stringify(this.context)));\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/animation-map.ts\n            \n            variable\n            animationMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            camelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            encodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            titleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/menu-event.ts\n            \n            interface\n            IMenuEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/query-params.ts\n            \n            class\n            QueryParams\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/query-params.ts\n            \n            interface\n            IQueryParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            interceptor\n            ExceptionInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            stored\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/abstract-model.ts\n            \n            class\n            AbstractModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            class\n            AdministrativeArea\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            class\n            AutoComplete\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            IAutoComplete\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/cache-model.ts\n            \n            interface\n            CacheResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            Conditions\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            Day\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            class\n            Elevation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            Forecast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            class\n            GeoPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            class\n            Headline\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            class\n            Temperature\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            class\n            TimeZone\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            animate.css : ^4.1.1\n        \n            bootstrap : ^4.6.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorTheme   (src/.../color-theme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorTheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : theme-dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : theme-light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Favorites\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Preferences\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            animationMap   (src/.../animation-map.ts)\n                        \n                        \n                            camelCase   (src/.../formatters.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            decodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            encodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errors   (src/.../exception-interceptor.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            stored   (src/.../exception-interceptor.ts)\n                        \n                        \n                            titleCase   (src/.../formatters.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/animation-map.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            animationMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  'clear night'                    : 'clear-night'                ,\n  'cloudy'                         : 'cloudy'                     ,\n  'cold'                           : 'cold'                       ,\n  'dreary'                         : 'dreary'                     ,\n  'flurries'                       : 'drizzle'                    ,\n  'fog'                            : 'fog'                        ,\n  'freezing rain'                  : 'sleet'                      ,\n  'hazy moonlight night'           : 'fog-night'                  ,\n  'hazy sunshine day'              : 'fog-day'                    ,\n  'hot'                            : 'thermometer'                ,\n  'ice'                            : 'hail'                       ,\n  'intermittent clouds day'        : 'overcast'                   ,\n  'intermittent clouds night'      : 'overcast'                   ,\n  'mostly clear day'               : 'partly-cloudy-day'          ,\n  'mostly clear night'             : 'partly-cloudy-night'        ,\n  'mostly cloudy day'              : 'overcast-day'               ,\n  'mostly cloudy night'            : 'overcast-night'             ,\n  'mostly cloudy w/ flurries day'  : 'partly-cloudy-day-drizzle'  ,\n  'mostly cloudy w/ flurries night': 'partly-cloudy-night-drizzle',\n  'mostly cloudy w/ showers day'   : 'partly-cloudy-day-rain'     ,\n  'mostly cloudy w/ showers night' : 'partly-cloudy-night-rain'   ,\n  'mostly cloudy w/ snow day'      : 'partly-cloudy-day-snow'     ,\n  'mostly cloudy w/ snow night'    : 'partly-cloudy-night-snow'   ,\n  'mostly cloudy w/ t-storms day'  : 'thunderstorms-day-rain'     ,\n  'mostly cloudy w/ t-storms night': 'thunderstorms-night-rain'   ,\n  'mostly sunny day'               : 'clear-day'                  ,\n  'partly cloudy day'              : 'partly-cloudy-day'          ,\n  'partly cloudy night'            : 'partly-cloudy-night'        ,\n  'partly cloudy w/ showers night' : 'partly-cloudy-night-rain'   ,\n  'partly cloudy w/ t-storms night': 'thunderstorms-night-rain'   ,\n  'partly sunny day'               : 'partly-cloudy-day'          ,\n  'partly sunny w/ flurries day'   : 'partly-cloudy-day-drizzle'  ,\n  'partly sunny w/ showers day'    : 'partly-cloudy-day-rain'     ,\n  'partly sunny w/ t-storms day'   : 'thunderstorms-day-rain'     ,\n  'rain and snow'                  : 'snow'                       ,\n  'rain'                           : 'rain'                       ,\n  'showers'                        : 'rain'                       ,\n  'sleet'                          : 'sleet'                      ,\n  'snow'                           : 'snow'                       ,\n  'sunny'                          : 'clear-day'                  ,\n  't-storms'                       : 'thunderstorms'              ,\n  'windy'                          : 'wind'                       ,\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/helpers/formatters.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            camelCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original[0].toLowerCase() + (original.substring(1).length \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => atob(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => btoa(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string => original.includes(' ')\n  ? original.split(' ')\n    .map(item => item[0].toUpperCase() + item.substring(1))\n    .join(' ')\n  : original[0].toUpperCase() + original.substring(1)\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule, SearchModule, FeatureModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude: 32.003,\n  longitude: 34.756\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                              ,\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl     : 'https://dataservice.accuweather.com'                                       ,\n    conditions  : 'https://dataservice.accuweather.com/currentconditions/v1'                   ,\n    forecasts   : 'https://dataservice.accuweather.com/forecasts/v1/daily/5day'                ,\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons'                           ,\n    locations   : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude: 32.003,\n  longitude: 34.756\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather     : {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete',\n    baseUrl     : 'https://dataservice.accuweather.com',\n    conditions  : 'https://dataservice.accuweather.com/currentconditions/v1',\n    forecasts   : 'https://dataservice.accuweather.com/forecasts/v1/daily/5day',\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons',\n    locations   : 'https://dataservice.accuweather.com/locations/v1',\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/interceptors/exception-interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stored\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
