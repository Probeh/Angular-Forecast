var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdministrativeArea.html",[0,0.078,1,2.201]],["body/classes/AdministrativeArea.html",[0,0.073,1,2.906,2,1.341,3,0.115,4,0.101,5,0.101,6,5.802,7,0.831,8,1.291,9,1.552,10,0.324,11,0.79,12,1.397,13,5.651,14,4.063,15,5.651,16,5.651,17,3.618,18,5.651,19,2.104,20,2.235,21,1.149,22,0.831,23,0.772,24,1.201,25,3.618,26,1.528,27,3.487,28,0.927,29,0.014,30,0.544,31,1.341,32,1.341,33,1.787,34,3.258,35,3.258,36,2.936,37,1.719,38,2.503,39,2.503,40,1.242,41,2.73,42,1.574,43,1.45,44,1.574,45,1.574,46,1.574,47,0.13,48,0.894,49,0.744,50,0.161,51,0.398,52,0.927,53,0.006,54,0.009,55,0.006]],["title/components/AppComponent.html",[56,1.131,57,1.811]],["body/components/AppComponent.html",[0,0.086,3,0.135,4,0.118,5,0.118,10,0.379,11,0.879,21,1.111,22,0.466,23,1.343,26,1.154,29,0.014,33,0.973,47,0.152,50,0.135,53,0.008,54,0.01,55,0.008,56,1.864,57,3.178,58,2.002,59,2.318,60,2.318,61,2.318,62,2.318,63,3.816,64,2.318,65,4.18,66,3.978,67,5.813,68,3.07,69,6.518,70,3.07,71,5.813,72,5.667,73,5.813,74,1.924,75,1.699,76,5.054,77,0.871,78,1.633,79,3.07,80,3.07,81,2.318,82,3.665,83,2.318,84,2.318,85,1.511,86,2.318,87,1.844,88,2.318,89,1.844,90,2.318,91,1.924,92,2.318,93,1.844,94,2.318,95,1.924,96,2.318,97,1.924,98,2.318,99,1.844,100,1.57,101,2.318,102,2.318]],["title/modules/AppModule.html",[103,1.131,104,3.098]],["body/modules/AppModule.html",[0,0.081,3,0.127,4,0.111,5,0.111,29,0.014,47,0.269,50,0.127,53,0.007,54,0.01,55,0.007,57,3.615,77,0.819,78,1.536,103,1.18,104,6.137,105,1.318,106,2.075,107,3.518,108,3.338,109,1.921,110,1.598,111,4.128,112,4.128,113,4.128,114,4.128,115,5.242,116,5.086,117,3.106,118,2.297,119,1.979,120,4.128,121,2.159,122,4.851,123,2.075,124,2.159,125,5.579,126,4.851,127,3.234,128,5.579,129,4.128,130,4.128,131,2.43,132,4.128,133,2.969,134,3.234,135,3.234,136,4.013,137,3.726,138,3.234,139,2.581,140,2.757,141,4.128,142,4.128,143,3.234,144,4.128,145,3.234,146,3.589,147,2.757,148,3.234]],["title/modules/AppRoutingModule.html",[103,1.131,115,2.844]],["body/modules/AppRoutingModule.html",[0,0.102,3,0.159,4,0.14,5,0.14,29,0.014,47,0.224,50,0.199,53,0.009,54,0.011,55,0.009,77,1.028,100,2.314,105,1.654,110,2.005,115,4.651,121,2.005,124,2.503,149,5.18,150,3.049,151,3.807,152,3.25,153,2.603,154,1.853,155,5.18,156,4.71,157,6.467,158,5.18,159,5.18,160,4.058,161,5.18,162,5.18,163,5.18,164,5.18,165,5.18,166,5.18]],["title/classes/AppSettings.html",[0,0.078,167,2.472]],["body/classes/AppSettings.html",[0,0.088,2,1.6,3,0.137,4,0.12,5,0.12,10,0.386,11,0.89,12,1.362,22,0.742,23,1.355,26,1.442,29,0.014,30,1.12,47,0.242,49,0.887,50,0.137,53,0.008,54,0.01,55,0.008,133,4.731,134,3.503,135,3.503,136,4.731,137,3.93,138,3.503,139,4.113,140,2.986,143,5.154,145,5.154,147,4.393,167,3.679,168,6.483,169,3.887,170,5.719,171,5.885,172,4.471,173,4.471,174,4.471,175,3.661,176,3.215]],["title/injectables/ApplicationService.html",[177,1.811,178,2.089]],["body/injectables/ApplicationService.html",[0,0.048,3,0.076,4,0.066,5,0.066,10,0.213,11,0.579,12,1.364,21,0.732,22,0.776,23,0.507,24,0.566,26,1.465,28,1.162,29,0.014,30,0.556,31,1.37,32,0.881,47,0.227,49,0.489,50,0.076,53,0.004,54,0.007,55,0.004,74,2.665,75,2.758,77,0.489,133,3.379,134,1.929,135,1.929,136,3.379,137,2.557,138,1.929,139,2.937,140,1.645,143,3.681,145,3.681,147,3.138,167,3.314,170,4.085,175,2.615,176,1.771,177,1.754,178,2.023,179,1.771,180,2.141,181,4.846,182,4.699,183,4.699,184,3.559,185,4.699,186,4.085,187,4.699,188,4.699,189,4.699,190,4.699,191,4.699,192,1.482,193,3.829,194,3.829,195,3.829,196,6.345,197,5.741,198,6.888,199,2.462,200,4.085,201,0.953,202,1.18,203,2.462,204,6.278,205,1.858,206,2.462,207,3.532,208,2.462,209,2.462,210,2.023,211,2.557,212,2.462,213,2.462,214,2.462,215,2.462,216,2.462,217,2.462,218,2.462,219,2.462,220,1.301,221,1.929,222,1.238,223,1.929,224,1.771,225,1.238,226,2.462,227,2.462,228,2.462,229,2.462,230,2.141,231,2.462,232,2.462,233,2.462,234,2.462,235,2.462,236,2.462,237,2.462,238,1.645,239,2.462,240,1.645,241,2.462,242,2.462,243,2.462,244,2.462,245,4.699,246,2.462,247,2.937,248,2.462,249,2.462,250,2.462,251,2.462,252,2.462,253,2.462,254,2.462,255,2.462]],["title/classes/AutoComplete.html",[0,0.078,256,2.201]],["body/classes/AutoComplete.html",[0,0.062,1,4.018,2,1.128,3,0.097,4,0.085,5,0.085,7,0.699,8,1.141,9,1.475,10,0.272,11,0.698,12,1.392,17,3.344,19,1.86,20,1.716,21,1.044,22,0.814,23,0.649,24,1.061,25,3.038,26,1.508,27,2.105,28,0.78,29,0.014,30,0.458,31,1.128,32,1.128,33,1.668,36,2.469,37,1.91,38,2.105,39,2.105,40,1.045,41,2.524,42,1.324,43,1.22,44,1.324,45,1.324,46,1.324,47,0.189,48,0.752,49,0.916,50,0.142,51,0.335,52,0.78,53,0.005,54,0.008,55,0.005,74,2.022,75,1.786,109,1.085,205,1.272,222,1.584,256,2.568,257,5.748,258,3.173,259,4.745,260,4.012,261,4.32,262,4.745,263,4.706,264,4.012,265,3.318,266,2.74,267,2.267,268,2.74,269,2.267,270,2.267,271,2.267,272,2.267,273,2.74,274,2.74,275,2.469,276,2.74,277,2.74,278,2.74]],["title/classes/BaseModel.html",[0,0.078,9,0.845]],["body/classes/BaseModel.html",[0,0.087,2,1.579,3,0.136,4,0.119,5,0.119,7,0.978,9,1.247,10,0.381,11,0.882,12,1.359,19,2.634,20,2.431,21,1.329,22,0.817,23,0.909,24,1.342,26,1.435,28,1.091,29,0.014,30,0.641,31,1.579,32,1.579,33,1.647,40,2.167,43,2.691,47,0.202,50,0.136,53,0.008,54,0.01,55,0.008,205,1.217,275,4.57,279,6.459,280,5.833,281,4.412,282,4.412,283,4.412,284,3.456,285,3.456,286,3.836,287,3.456,288,4.412,289,5.833,290,4.412,291,4.412,292,5.833,293,4.412,294,4.412,295,4.412]],["title/interfaces/CacheResult.html",[51,0.42,296,2.641]],["body/interfaces/CacheResult.html",[3,0.163,4,0.143,5,0.143,7,1.178,10,0.459,11,0.994,22,0.758,29,0.014,30,1.132,33,1.582,37,2.04,47,0.184,50,0.163,51,0.564,53,0.009,54,0.011,55,0.009,123,2.67,296,4.387,297,1.901,298,4.618,299,5.837,300,5.359,301,5.359,302,5.359]],["title/injectables/CacheService.html",[177,1.811,303,2.641]],["body/injectables/CacheService.html",[0,0.102,3,0.114,4,0.1,5,0.1,10,0.32,11,0.784,12,1.16,21,0.99,22,0.634,23,1.231,26,1.351,28,1.281,29,0.014,30,0.752,37,1.06,47,0.207,49,0.736,50,0.159,53,0.006,54,0.009,55,0.006,74,2.271,75,2.005,77,0.736,123,1.862,154,2.314,177,2.373,179,2.665,181,5.072,184,3.725,192,2.005,201,2.005,202,2.863,205,1.429,287,4.679,296,2.475,299,2.903,300,4.895,301,2.665,302,5.311,303,3.46,304,2.903,305,5.193,306,5.193,307,4.504,308,5.181,309,5.193,310,4.933,311,3.705,312,3.46,313,5.623,314,4.504,315,3.705,316,3.726,317,4.504,318,3.705,319,3.222,320,3.239,321,1.557,322,2.665,323,2.903,324,3.222,325,3.222,326,3.222,327,4.504,328,4.504,329,3.222,330,2.062,331,3.222,332,4.504,333,3.222,334,4.504,335,3.222,336,3.222,337,3.222,338,3.222]],["title/classes/Conditions.html",[0,0.078,339,2.089]],["body/classes/Conditions.html",[0,0.059,2,1.075,3,0.092,4,0.081,5,0.081,7,0.666,8,1.102,9,1.453,10,0.259,11,0.674,12,1.398,19,1.795,20,1.657,21,1.015,22,0.819,23,0.619,24,1.024,26,1.519,27,2.006,28,0.743,29,0.014,30,0.436,31,1.075,32,1.075,33,1.652,37,1.878,39,2.006,40,1.946,41,2.466,42,1.262,43,1.163,44,1.262,45,1.262,46,1.262,47,0.184,48,0.717,49,0.884,50,0.137,51,0.319,52,0.743,53,0.005,54,0.008,55,0.005,74,1.317,75,1.163,109,1.034,205,0.828,210,3.468,222,1.51,265,2.16,267,2.16,339,2.352,340,5.835,341,5.103,342,3.817,343,4.221,344,5.103,345,3.67,346,5.103,347,3.67,348,3.783,349,5.103,350,5.103,351,3.92,352,3.872,353,2.612,354,2.353,355,2.353,356,2.353,357,2.612,358,2.479,359,2.16,360,2.16,361,2.16,362,2.612]],["title/components/ContainerComponent.html",[56,1.131,85,1.362]],["body/components/ContainerComponent.html",[0,0.054,3,0.084,4,0.074,5,0.074,10,0.237,11,0.63,12,1.246,21,0.962,22,0.596,23,0.566,26,1.26,28,0.679,29,0.014,30,0.399,33,0.923,47,0.228,50,0.084,53,0.005,54,0.007,55,0.005,56,1.438,57,1.258,58,1.434,59,1.451,60,1.451,61,1.451,62,1.451,64,1.451,65,3.807,66,3.673,68,2.199,70,2.199,74,1.204,75,1.063,77,0.545,78,1.022,79,2.199,80,2.199,81,1.451,82,2.964,83,1.451,84,1.451,85,1.933,86,1.451,87,1.154,88,1.451,89,1.154,90,1.451,91,1.204,92,1.451,93,1.154,94,1.451,95,1.204,96,1.451,97,1.204,98,1.451,99,1.154,100,1.49,101,1.451,102,1.451,137,1.834,139,3.144,140,1.834,147,3.359,148,3.262,153,1.38,178,2.964,184,2.199,186,4.373,192,1.612,201,1.063,202,1.317,207,2.799,220,1.451,225,1.38,230,4.373,247,1.717,321,1.749,363,2.388,364,2.799,365,6.349,366,5.03,367,4.164,368,5.03,369,5.03,370,3.124,371,1.975,372,6.596,373,4.373,374,4.397,375,4.164,376,2.781,377,2.747,378,2.747,379,2.747,380,2.747,381,1.717,382,4.164,383,1.717,384,2.747,385,2.747,386,2.747,387,2.747,388,3.262,389,4.164,390,2.388,391,2.747,392,2.747,393,1.834,394,2.152,395,2.388,396,2.388,397,2.747,398,4.373,399,3.62,400,3.62,401,2.388,402,2.388,403,2.781,404,4.338,405,4.338,406,2.388,407,3.262,408,4.338,409,3.262,410,3.262,411,2.152,412,3.262,413,5.03,414,4.164,415,4.164,416,2.388,417,2.995,418,3.617,419,2.747,420,2.388,421,2.388,422,2.388,423,4.373,424,3.62,425,2.152,426,3.62]],["title/modules/ContainerModule.html",[103,1.131,116,2.844]],["body/modules/ContainerModule.html",[0,0.054,3,0.085,4,0.074,5,0.074,21,0.526,22,0.292,26,0.546,28,0.68,29,0.014,30,0.399,31,1.492,32,0.984,47,0.266,50,0.085,53,0.005,54,0.007,55,0.005,58,1.734,77,0.546,78,1.023,85,2.483,103,0.787,105,1.794,106,1.383,107,2.802,108,1.453,109,1.934,110,1.949,116,5.804,117,2.321,118,1.531,119,1.319,121,1.614,122,3.625,123,1.383,124,1.949,131,1.619,154,1.492,167,3.774,178,3.355,192,1.065,201,1.065,211,3.363,223,2.155,224,1.979,303,2.785,320,2.607,330,1.531,374,3.266,381,1.72,383,1.72,427,2.751,428,2.751,429,2.751,430,2.751,431,2.751,432,3.457,433,3.624,434,3.624,435,3.624,436,4.569,437,4.569,438,4.569,439,4.569,440,4.243,441,2.155,442,3.625,443,2.751,444,4.169,445,2.751,446,5.035,447,2.321,448,1.453,449,5.617,450,2.751,451,3.363,452,2.751,453,2.751,454,2.999,455,2.751,456,2.751,457,2.751,458,1.979,459,2.751,460,2.751,461,2.751,462,2.392,463,2.392,464,6.037,465,5.617,466,5.035,467,2.751]],["title/modules/ContainerRoutingModule.html",[103,1.131,436,2.844]],["body/modules/ContainerRoutingModule.html",[0,0.112,3,0.175,4,0.153,5,0.153,29,0.014,47,0.237,50,0.211,53,0.01,54,0.012,55,0.01,77,1.13,105,1.818,110,2.203,121,2.203,124,2.652,150,3.351,151,4.034,152,3.444,153,2.861,154,2.037,436,4.928,468,5.693,469,5.693,470,5.693]],["title/classes/Country.html",[0,0.078,258,2.089]],["body/classes/Country.html",[0,0.084,2,1.538,3,0.132,4,0.116,5,0.116,7,0.953,8,1.418,9,1.609,10,0.371,11,0.867,12,1.369,14,4.302,17,3.83,19,2.311,20,2.4,21,1.233,22,0.823,23,0.885,24,1.319,26,1.494,28,1.063,29,0.014,30,0.624,31,1.538,32,1.538,33,1.735,40,1.425,41,2.891,42,1.805,43,1.664,44,1.805,45,1.805,46,1.805,47,0.149,48,1.025,49,0.853,50,0.176,51,0.457,52,1.063,53,0.007,54,0.01,55,0.007,258,3.028,471,5.391,472,4.302,473,3.374,474,3.091]],["title/classes/Day.html",[0,0.078,475,2.472]],["body/classes/Day.html",[0,0.076,2,1.388,3,0.119,4,0.104,5,0.104,7,0.86,8,1.322,9,1.567,10,0.335,11,0.809,12,1.383,19,2.155,20,1.989,21,1.17,22,0.815,23,0.799,24,1.23,26,1.505,28,0.959,29,0.014,30,0.563,31,1.388,32,1.388,33,1.586,37,1.75,38,2.59,40,1.286,41,2.771,42,1.629,43,1.501,44,1.629,45,1.629,46,1.629,47,0.185,48,0.925,49,0.77,50,0.164,51,0.412,52,0.959,53,0.007,54,0.009,55,0.007,74,1.7,75,1.501,109,1.335,210,3.232,222,1.949,342,4.401,343,4.744,473,2.283,475,3.343,476,5.604,477,5.167,478,5.735,479,4.124,480,4.189,481,2.59,482,3.372]],["title/classes/Elevation.html",[0,0.078,483,2.472]],["body/classes/Elevation.html",[0,0.082,2,1.488,3,0.128,4,0.112,5,0.112,7,0.922,8,1.387,9,1.596,10,0.359,11,0.848,12,1.363,19,2.26,20,2.086,21,1.213,22,0.817,23,0.857,24,1.29,26,1.482,28,1.029,29,0.014,30,0.604,31,1.488,32,1.488,33,1.407,40,1.379,41,2.853,42,1.747,43,1.61,44,1.747,45,1.747,46,1.747,47,0.194,48,0.992,49,1.113,50,0.172,51,0.442,52,1.029,53,0.007,54,0.01,55,0.007,205,1.546,473,3.301,474,2.991,483,3.506,484,5.32,485,5.904,486,4.282,487,4.245,488,3.531,489,2.991,490,3.616,491,3.616,492,3.616,493,3.616]],["title/interceptors/ExceptionInterceptor.html",[437,2.844,451,2.641]],["body/interceptors/ExceptionInterceptor.html",[0,0.061,3,0.141,4,0.084,5,0.084,10,0.269,11,0.692,21,0.875,22,0.635,23,0.642,26,1.186,28,1.341,29,0.014,30,0.664,37,1.709,47,0.238,50,0.167,53,0.005,54,0.009,55,0.005,74,2.006,75,1.771,77,0.619,109,1.073,123,1.566,154,1.637,177,2.096,184,2.864,192,1.771,201,1.206,207,3.018,211,3.056,220,1.646,222,1.566,225,1.566,247,3.735,285,2.441,300,2.241,301,2.241,310,3.991,312,2.081,321,1.309,330,3.018,373,3.978,374,4.681,381,1.948,412,4.248,437,3.291,442,5.533,494,2.441,495,4.986,496,2.081,497,6.653,498,3.585,499,3.116,500,4.576,501,3.585,502,4.681,503,3.116,504,3.116,505,5.422,506,3.116,507,3.116,508,2.709,509,2.241,510,4.576,511,2.441,512,3.585,513,2.241,514,2.241,515,2.709,516,2.709,517,2.709,518,2.709,519,2.709,520,2.709,521,2.709,522,2.709,523,2.709,524,2.709,525,2.441,526,2.709,527,3.978,528,2.709,529,2.709,530,2.709,531,2.709,532,3.978,533,3.978,534,2.709,535,2.709,536,2.709,537,2.709,538,2.709,539,2.709,540,2.709,541,2.709,542,3.585,543,2.709,544,2.441,545,2.709,546,2.709,547,2.709,548,2.709,549,2.709,550,2.709,551,2.709,552,2.709,553,3.116,554,3.116,555,3.116,556,4.576,557,4.576,558,4.576,559,3.116,560,3.585,561,4.576,562,4.576,563,4.576,564,2.709,565,4.576,566,2.709,567,3.116,568,2.441,569,2.709,570,2.709,571,3.116,572,3.116,573,3.116,574,3.116,575,3.116,576,3.116,577,3.116,578,3.116]],["title/components/FavoritesComponent.html",[56,1.131,87,1.661]],["body/components/FavoritesComponent.html",[0,0.07,3,0.11,4,0.096,5,0.096,10,0.308,21,0.965,23,1.206,26,1.002,29,0.014,47,0.175,50,0.11,53,0.006,54,0.009,55,0.006,56,1.674,57,1.635,58,1.738,59,1.886,60,1.886,61,1.886,62,1.886,64,1.886,65,4.029,66,3.834,68,2.666,70,2.666,77,0.709,78,1.328,79,2.666,80,2.666,81,1.886,82,3.361,83,1.886,84,1.886,85,1.229,86,1.886,87,2.673,88,1.886,89,1.5,90,1.886,91,1.565,92,1.886,93,1.5,94,1.886,95,1.565,96,1.886,97,1.565,98,1.886,99,1.5,100,1.278,101,1.886,102,1.886,160,3.954,192,1.953,201,1.382,202,1.711,247,3.155,321,2.12,364,3.258,370,3.542,393,2.385,394,2.797,405,2.568,408,5.011,417,2.568,418,2.568,579,3.104,580,5.854,581,5.047,582,3.571,583,3.571,584,6.363,585,7.701,586,6.058,587,6.968,588,6.968,589,6.363,590,6.363,591,5.047,592,5.854,593,2.797,594,3.104,595,2.797,596,3.571,597,3.571,598,3.571,599,3.571,600,3.571,601,3.571,602,3.104,603,4.21,604,3.571,605,3.571,606,2.797,607,3.104]],["title/modules/FavoritesModule.html",[103,1.131,608,3.098]],["body/modules/FavoritesModule.html",[0,0.08,3,0.125,4,0.109,5,0.109,29,0.014,47,0.233,50,0.125,53,0.007,54,0.009,55,0.007,58,2.157,77,0.805,78,1.509,85,2.635,87,2.317,103,1.16,105,2.147,106,2.039,107,3.487,108,2.143,109,1.899,110,2.425,117,3.07,118,2.258,119,1.945,121,2.134,124,2.134,131,2.388,154,1.973,432,3.668,433,3.846,434,3.846,435,3.846,447,3.07,448,2.143,608,6.401,609,4.057,610,4.057,611,4.057,612,4.057,613,5.215,614,3.179,615,4.057,616,3.528]],["title/modules/FavoritesRoutingModule.html",[103,1.131,613,2.844]],["body/modules/FavoritesRoutingModule.html",[0,0.106,3,0.167,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.549,77,1.075,87,2.793,105,1.73,110,2.096,121,2.096,124,2.573,150,3.188,151,3.913,152,3.341,153,2.722,154,1.938,156,3.617,613,4.781,616,4.708,617,5.415,618,5.415,619,3.895,620,5.415]],["title/modules/FeatureModule.html",[103,1.131,432,1.896]],["body/modules/FeatureModule.html",[0,0.083,3,0.13,4,0.114,5,0.114,29,0.014,47,0.281,50,0.13,53,0.007,54,0.01,55,0.007,77,0.84,105,1.352,110,1.638,121,1.638,124,2.196,211,2.827,225,2.127,381,2.646,432,2.72,447,3.158,448,2.235,621,4.233,622,6.401,623,5.674,624,4.233,625,5.674,626,4.233,627,5.674,628,4.233,629,5.674,630,4.233,631,5.674,632,4.233,633,5.674,634,4.233,635,5.674,636,4.233,637,5.674,638,4.233,639,5.674,640,4.233,641,5.674,642,4.233,643,4.933,644,3.68,645,5.674,646,4.233,647,5.674,648,4.233,649,5.674,650,4.233,651,4.233]],["title/classes/Forecast.html",[0,0.078,652,2.089]],["body/classes/Forecast.html",[0,0.078,2,1.427,3,0.123,4,0.107,5,0.107,7,0.885,8,1.348,9,1.579,10,0.344,11,0.825,12,1.355,19,2.197,20,2.028,21,1.187,22,0.81,23,0.822,24,1.254,26,1.466,28,0.987,29,0.014,30,0.579,31,1.427,32,1.427,33,1.377,40,1.323,41,2.804,42,1.676,43,1.544,44,1.676,45,1.676,46,1.676,47,0.215,48,0.952,49,1.233,50,0.168,51,0.424,52,0.987,53,0.007,54,0.009,55,0.007,100,2.222,205,1.713,473,2.348,481,3.641,652,2.879,653,5.229,654,4.466,655,4.617,656,4.458,657,3.408,658,3.468,659,3.408,660,3.468,661,3.468,662,3.468,663,3.468,664,2.348,665,3.468,666,3.468,667,3.468,668,3.468]],["title/components/ForecastComponent.html",[56,1.131,89,1.661]],["body/components/ForecastComponent.html",[0,0.085,3,0.133,4,0.116,5,0.116,10,0.373,21,1.1,23,1.332,26,1.142,29,0.014,47,0.15,50,0.133,53,0.007,54,0.01,55,0.007,56,1.85,57,1.979,58,1.981,59,2.282,60,2.282,61,2.282,62,2.282,64,2.282,65,4.17,66,3.968,68,3.038,70,3.038,77,0.858,78,1.607,79,3.038,80,3.038,81,2.282,82,3.642,83,2.282,84,2.282,85,1.488,86,2.282,87,1.815,88,2.282,89,2.897,90,2.282,91,1.894,92,2.282,93,1.815,94,2.282,95,1.894,96,2.282,97,1.894,98,2.282,99,1.815,100,1.546,101,2.282,102,2.282,192,2.227,201,1.672,202,2.071,321,2.417,364,3.6,370,3.838,652,3.642,669,3.756,670,6.468,671,5.753,672,4.32,673,4.32,674,4.507]],["title/modules/ForecastModule.html",[103,1.131,675,3.098]],["body/modules/ForecastModule.html",[0,0.08,3,0.125,4,0.109,5,0.109,29,0.014,47,0.233,50,0.125,53,0.007,54,0.009,55,0.007,58,2.157,77,0.805,78,1.509,85,2.635,89,2.317,103,1.16,105,2.147,106,2.039,107,3.487,108,2.143,109,1.899,110,2.425,117,3.07,118,2.258,119,1.945,121,2.134,124,2.134,131,2.388,154,1.973,432,3.668,433,3.846,434,3.846,435,3.846,447,3.07,448,2.143,675,6.401,676,4.057,677,4.057,678,4.057,679,4.057,680,5.215,681,3.179,682,4.057,683,3.528]],["title/modules/ForecastRoutingModule.html",[103,1.131,680,2.844]],["body/modules/ForecastRoutingModule.html",[0,0.106,3,0.167,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.549,77,1.075,89,2.793,105,1.73,110,2.096,121,2.096,124,2.573,150,3.188,151,3.913,152,3.341,153,2.722,154,1.938,156,3.617,619,3.895,680,4.781,683,4.708,684,5.415,685,5.415,686,5.415]],["title/classes/GeoPosition.html",[0,0.078,687,2.328]],["body/classes/GeoPosition.html",[0,0.079,2,1.438,3,0.124,4,0.108,5,0.108,7,0.891,8,1.355,9,1.582,10,0.347,11,0.829,12,1.375,19,2.208,20,2.038,21,1.192,22,0.82,23,0.828,24,1.26,26,1.495,28,0.994,29,0.014,30,0.583,31,1.438,32,1.438,33,1.382,37,2.068,40,1.332,41,2.812,42,1.688,43,1.555,44,1.688,45,1.688,46,1.688,47,0.19,48,0.958,49,1.087,50,0.168,51,0.427,52,0.994,53,0.007,54,0.009,55,0.007,175,3.727,205,1.108,238,4.472,240,4.472,473,2.365,480,4.292,481,2.684,483,4.626,487,3.425,687,3.225,688,5.489,689,3.494,690,3.494,691,3.494]],["title/components/HeaderComponent.html",[56,1.131,91,1.733]],["body/components/HeaderComponent.html",[0,0.055,3,0.086,4,0.075,5,0.075,10,0.241,11,0.637,12,1.13,21,0.805,22,0.447,23,1.046,26,1.205,29,0.014,40,1.875,47,0.146,50,0.086,53,0.005,54,0.007,55,0.005,56,1.452,57,1.277,58,1.45,59,1.472,60,1.472,61,1.472,62,1.472,64,1.472,65,3.821,66,3.685,68,2.224,70,2.224,74,1.846,75,1.63,77,0.553,78,1.037,79,2.224,80,2.224,81,1.472,82,2.987,83,1.472,84,1.472,85,0.96,86,1.472,87,1.171,88,1.472,89,1.171,90,1.472,91,2.479,92,1.472,93,1.171,94,1.472,95,1.222,96,1.472,97,1.222,98,1.472,99,1.171,100,0.998,101,1.472,102,1.472,119,2.019,160,3.299,192,1.63,201,1.079,202,1.336,205,1.4,321,1.769,364,2.825,370,3.148,393,1.862,394,2.184,395,2.424,396,2.424,398,4.413,399,4.413,400,4.413,401,2.424,402,2.424,403,4.055,404,4.067,405,4.909,407,4.431,408,4.067,409,2.184,410,2.184,411,3.299,417,2.005,418,4.067,420,3.662,424,3.662,425,3.976,593,3.299,594,2.424,603,4.067,606,2.184,692,2.424,693,5.552,694,5.076,695,4.212,696,5.076,697,5.076,698,4.212,699,5.076,700,4.212,701,5.656,702,2.788,703,2.788,704,2.788,705,4.212,706,2.788,707,3.299,708,3.299,709,5.076,710,4.917,711,5.279,712,5.764,713,2.424,714,2.788,715,2.788,716,4.212,717,2.788,718,2.788,719,2.788,720,2.424,721,2.184,722,2.424,723,2.788,724,2.184,725,4.212,726,4.212,727,4.212,728,2.788,729,4.212,730,3.662,731,3.662,732,2.788,733,2.424,734,2.788,735,3.662,736,3.662,737,4.212,738,2.788]],["title/modules/HeaderModule.html",[103,1.131,433,1.988]],["body/modules/HeaderModule.html",[0,0.079,3,0.124,4,0.109,5,0.109,29,0.014,47,0.243,50,0.124,53,0.007,54,0.009,55,0.007,58,2.155,77,0.803,78,1.506,85,2.634,91,2.413,103,1.158,105,2.145,106,2.034,107,3.483,108,2.138,109,1.896,110,2.422,117,3.064,118,2.253,119,1.94,121,2.131,124,2.131,131,2.382,154,1.97,432,3.742,433,4.158,434,3.844,435,3.844,447,3.064,448,2.138,458,2.911,739,4.047,740,4.047,741,4.047,742,4.047,743,5.211,744,3.171,745,4.047,746,4.047]],["title/modules/HeaderRoutingModule.html",[103,1.131,743,2.844]],["body/modules/HeaderRoutingModule.html",[0,0.112,3,0.175,4,0.153,5,0.153,29,0.014,47,0.237,50,0.211,53,0.01,54,0.012,55,0.01,77,1.13,105,1.818,110,2.203,121,2.203,124,2.652,150,3.351,151,4.034,152,3.444,153,2.861,154,2.037,743,4.928,747,5.693,748,5.693,749,5.693]],["title/classes/Headline.html",[0,0.078,655,2.472]],["body/classes/Headline.html",[0,0.064,2,1.174,3,0.101,4,0.088,5,0.088,7,0.728,8,1.175,9,1.494,10,0.283,11,0.719,12,1.402,19,1.915,20,1.768,21,1.068,22,0.83,23,0.676,24,1.093,26,1.531,27,2.192,28,0.812,29,0.014,30,0.477,31,1.174,32,1.174,33,1.722,36,2.571,37,2.085,38,2.192,39,2.192,40,2.317,41,2.572,42,1.379,43,1.27,44,1.379,45,1.379,46,1.379,47,0.114,48,0.783,49,0.652,50,0.146,51,0.349,52,0.812,53,0.006,54,0.008,55,0.006,265,2.36,267,2.36,345,3.828,347,3.828,354,2.571,355,2.571,356,3.723,560,4.797,655,2.971,657,3.828,724,4.797,750,5.876,751,5.324,752,5.324,753,5.324,754,5.324,755,5.324]],["title/interfaces/IAdministrativeArea.html",[25,2.201,51,0.42]],["body/interfaces/IAdministrativeArea.html",[0,0.085,1,2.405,3,0.133,4,0.116,5,0.116,6,3.385,7,0.958,8,1.069,9,1.23,10,0.373,11,0.87,12,1.259,13,6.244,14,4.49,15,6.244,16,6.244,17,3.997,18,6.244,20,2.565,22,0.801,24,0.994,25,3.6,29,0.014,30,1.167,33,1.83,37,1.972,47,0.15,48,1.03,49,0.858,50,0.177,51,0.459,52,1.069,53,0.007,54,0.01,55,0.007,297,1.546]],["title/interfaces/IAutoComplete.html",[51,0.42,264,2.641]],["body/interfaces/IAutoComplete.html",[0,0.076,1,4.157,3,0.119,4,0.104,5,0.104,7,0.86,8,0.959,9,1.143,10,0.335,11,0.809,12,1.273,17,3.851,22,0.823,24,0.892,25,4.08,29,0.014,33,1.745,37,2.136,47,0.212,48,0.925,49,1.061,50,0.164,51,0.412,52,0.959,53,0.007,54,0.009,55,0.007,109,1.335,205,1.474,222,1.949,256,2.158,257,3.038,258,3.654,259,3.372,260,4.621,261,4.976,262,3.372,263,5.421,264,4.087,269,2.789,270,2.789,271,2.789,272,2.789,273,3.372,274,3.372,275,3.038,276,3.372,277,3.372,278,3.372,297,1.388]],["title/interfaces/IConditions.html",[51,0.42,351,2.641]],["body/interfaces/IConditions.html",[0,0.069,3,0.109,4,0.095,5,0.095,7,0.785,8,0.876,9,1.072,10,0.306,11,0.759,12,1.283,22,0.789,24,0.814,29,0.014,30,1.158,33,1.705,37,2.088,40,2.102,47,0.202,48,0.844,49,0.996,50,0.154,51,0.376,52,0.876,53,0.006,54,0.009,55,0.006,109,1.219,205,0.976,210,3.856,222,1.779,297,1.267,339,1.87,340,2.773,341,5.818,342,2.546,343,4.812,344,5.818,345,4.183,346,5.818,347,4.183,348,3.977,349,5.818,350,5.818,351,3.892,358,3.528,359,2.546,360,2.546,361,2.546,362,3.078]],["title/interfaces/ICountry.html",[51,0.42,472,2.472]],["body/interfaces/ICountry.html",[0,0.098,3,0.154,4,0.135,5,0.135,7,1.111,8,1.239,9,1.354,10,0.432,11,0.958,12,1.079,14,4.705,17,4.189,20,2.714,22,0.738,24,1.152,29,0.014,30,1.116,33,1.792,47,0.173,48,1.195,49,0.994,50,0.195,51,0.532,52,1.239,53,0.009,54,0.011,55,0.009,258,2.645,297,1.792,471,3.924,472,4.341]],["title/interfaces/IDay.html",[51,0.42,479,2.472]],["body/interfaces/IDay.html",[0,0.093,3,0.146,4,0.128,5,0.128,7,1.051,8,1.172,9,1.306,10,0.409,11,0.925,12,1.218,22,0.719,24,1.09,29,0.014,30,1.1,33,1.585,37,2.044,47,0.212,48,1.13,49,0.94,50,0.188,51,0.503,52,1.172,53,0.008,54,0.01,55,0.008,109,1.631,210,3.775,222,2.381,297,1.695,342,3.407,343,5.321,475,2.962,476,3.712,477,5.796,478,6.432,479,4.229,482,4.119]],["title/interfaces/IElevation.html",[51,0.42,487,2.472]],["body/interfaces/IElevation.html",[0,0.097,3,0.152,4,0.133,5,0.133,7,1.097,8,1.224,9,1.343,10,0.427,11,0.951,12,1.071,22,0.667,24,1.138,29,0.014,30,1.055,47,0.218,48,1.18,49,1.247,50,0.193,51,0.526,52,1.224,53,0.008,54,0.011,55,0.008,205,1.733,297,1.771,483,3.094,484,3.877,485,6.519,486,4.385,487,4.317,488,4.333,489,3.559,490,4.303,491,4.303,492,4.303,493,4.303]],["title/interfaces/IForecast.html",[51,0.42,656,2.641]],["body/interfaces/IForecast.html",[0,0.092,3,0.145,4,0.127,5,0.127,7,1.045,8,1.165,9,1.302,10,0.407,11,0.921,12,1.038,22,0.647,24,1.084,29,0.014,30,1.036,47,0.234,48,1.124,49,1.339,50,0.187,51,0.5,52,1.165,53,0.008,54,0.01,55,0.008,100,2.179,205,1.861,297,1.686,652,2.488,653,3.691,654,3.388,655,4.812,656,4.506,657,4.459,658,4.096,659,4.459,660,4.096,661,6.201,662,4.096,663,4.096,664,2.773,665,4.096,666,4.096,667,4.096,668,4.096]],["title/interfaces/IGeoPosition.html",[51,0.42,175,2.201]],["body/interfaces/IGeoPosition.html",[0,0.093,3,0.147,4,0.128,5,0.128,7,1.057,8,1.179,9,1.311,10,0.411,11,0.928,12,1.156,22,0.721,24,1.096,29,0.014,30,1.102,37,2.236,47,0.212,48,1.137,49,1.218,50,0.189,51,0.506,52,1.179,53,0.008,54,0.01,55,0.008,175,3.776,205,1.314,238,4.95,240,4.95,297,1.705,483,4.825,487,4.478,687,2.805,688,3.733,689,4.143,690,4.143,691,4.143]],["title/interfaces/IHeadline.html",[51,0.42,657,2.472]],["body/interfaces/IHeadline.html",[0,0.075,3,0.117,4,0.103,5,0.103,7,0.846,8,0.944,9,1.13,10,0.329,11,0.8,12,1.287,22,0.802,24,0.878,29,0.014,30,1.168,33,1.77,37,2.228,40,2.466,47,0.132,48,0.91,49,0.757,50,0.163,51,0.405,52,0.944,53,0.007,54,0.009,55,0.007,297,1.365,345,4.301,347,4.301,560,5.389,655,2.386,657,3.793,724,5.389,750,2.989,751,5.981,752,5.981,753,5.981,754,5.981,755,5.981]],["title/interfaces/ILocation.html",[51,0.42,756,2.641]],["body/interfaces/ILocation.html",[0,0.056,1,3.713,3,0.087,4,0.076,5,0.076,7,0.63,8,0.702,9,0.913,10,0.245,11,0.646,12,1.281,14,3.827,17,3.407,22,0.811,24,0.653,25,3.178,29,0.014,30,1.152,33,1.724,37,1.633,47,0.231,48,0.677,49,1.324,50,0.131,51,0.302,52,0.702,53,0.005,54,0.007,55,0.005,175,3.178,176,2.043,205,1.773,210,3.233,258,3.779,260,4.088,261,4.402,269,2.043,270,2.043,271,2.043,272,2.043,297,1.016,339,2.711,472,4.171,652,2.711,664,1.672,687,4.04,756,3.428,757,2.225,758,4.795,759,5.322,760,5.322,761,4.291,762,3.569,763,2.225,764,2.469,765,2.225,766,2.469,767,1.776,768,2.469,769,3.713,770,2.469,771,2.469,772,2.469,773,2.469,774,2.469,775,2.469,776,2.469]],["title/interfaces/IMenuEvent.html",[51,0.42,777,2.844]],["body/interfaces/IMenuEvent.html",[3,0.172,4,0.151,5,0.151,10,0.483,11,1.026,22,0.72,29,0.014,47,0.194,50,0.172,51,0.595,53,0.01,54,0.012,55,0.01,297,2.003,381,3.499,595,5.944,777,4.878,778,4.866,779,4.385,780,6.596,781,6.596,782,7.299]],["title/interfaces/IMetric.html",[51,0.42,488,2.201]],["body/interfaces/IMetric.html",[0,0.097,3,0.152,4,0.133,5,0.133,7,1.097,8,1.224,9,1.343,10,0.427,11,0.951,12,1.177,22,0.733,24,1.138,29,0.014,30,1.113,33,1.611,37,2.253,47,0.171,48,1.18,49,0.982,50,0.193,51,0.526,52,1.224,53,0.008,54,0.011,55,0.008,75,2.902,297,1.771,486,2.755,488,3.844,783,3.877,784,5.874,785,6.519]],["title/interfaces/ISearchEvent.html",[51,0.42,786,2.844]],["body/interfaces/ISearchEvent.html",[3,0.172,4,0.15,5,0.15,10,0.482,11,1.024,22,0.719,29,0.014,33,1.616,50,0.172,51,0.593,53,0.01,54,0.012,55,0.01,297,1.996,779,4.37,780,6.589,786,4.868,787,4.85,788,7.578,789,7.288,790,7.288]],["title/interfaces/ITemperature.html",[51,0.42,358,2.201]],["body/interfaces/ITemperature.html",[0,0.098,3,0.154,4,0.134,5,0.134,7,1.107,8,1.235,9,1.351,10,0.431,11,0.956,12,1.077,22,0.671,24,1.149,29,0.014,30,1.058,47,0.219,48,1.191,49,1.255,50,0.194,51,0.53,52,1.235,53,0.009,54,0.011,55,0.009,205,1.743,297,1.787,322,5.407,348,2.779,358,3.86,486,3.86,488,4.342,489,3.591,791,3.912,792,6.537,793,4.342,794,4.342,795,4.342,796,4.342]],["title/interfaces/ITimeZone.html",[51,0.42,762,2.472]],["body/interfaces/ITimeZone.html",[0,0.088,3,0.139,4,0.121,5,0.121,7,1,8,1.115,9,1.265,10,0.389,11,0.895,12,1.195,21,1.341,22,0.773,24,1.037,29,0.014,30,1.145,33,1.689,37,2.005,40,2.325,47,0.156,48,1.075,49,0.895,50,0.182,51,0.479,52,1.115,53,0.008,54,0.01,55,0.008,210,3.704,297,1.613,761,2.818,762,4.129,797,3.531,798,5.705,799,6.331,800,6.331,801,6.331]],["title/interfaces/IWeather.html",[51,0.42,659,2.472]],["body/interfaces/IWeather.html",[0,0.07,3,0.11,4,0.096,5,0.096,7,0.792,8,0.883,9,1.079,10,0.308,11,0.764,12,1.247,22,0.777,24,0.821,29,0.014,30,1.148,33,1.708,37,1.82,40,2.467,47,0.203,48,0.852,49,1.162,50,0.155,51,0.379,52,0.883,53,0.006,54,0.009,55,0.006,100,1.278,205,1.755,297,1.278,345,4.197,347,4.197,348,3.987,358,3.542,359,2.568,360,2.568,361,2.568,475,4.715,479,4.478,659,3.66,664,2.102,802,2.797,803,5.836,804,5.836,805,5.836,806,3.104,807,4.388,808,3.104,809,3.104,810,3.104,811,3.104]],["title/classes/Location.html",[0,0.078,767,2.472]],["body/classes/Location.html",[0,0.048,1,3.524,2,0.876,3,0.075,4,0.066,5,0.066,7,0.543,8,0.943,9,1.353,10,0.211,11,0.577,12,1.397,14,3.303,17,2.941,19,1.536,20,1.418,21,0.895,22,0.82,23,0.504,24,0.877,25,2.122,26,1.509,28,0.605,29,0.014,30,0.355,31,0.876,32,0.876,33,1.649,37,1.339,40,0.812,41,2.219,42,1.028,43,0.947,44,1.028,45,1.028,46,1.028,47,0.219,48,0.584,49,1.257,50,0.117,51,0.26,52,0.605,53,0.004,54,0.007,55,0.004,175,2.122,176,1.761,205,1.672,210,3.024,258,3.7,260,3.529,261,3.8,266,2.128,268,2.128,269,1.761,270,1.761,271,1.761,272,1.761,339,3.203,352,2.128,353,2.128,357,2.128,472,2.926,652,3.203,664,1.441,687,3.854,756,3.529,757,5.826,758,4.139,759,4.594,760,4.594,761,4.093,762,2.383,763,1.918,764,2.128,765,1.918,766,2.128,767,2.383,768,4.07,769,3.314,770,2.128,771,2.128,772,2.128,773,2.128,774,2.128,775,2.128,776,2.128,812,3.812,813,2.448,814,2.448,815,2.448,816,2.448,817,2.448,818,2.448,819,2.448,820,2.448]],["title/guards/LocationResolver.html",[454,2.844,821,3.098]],["body/guards/LocationResolver.html",[0,0.092,3,0.144,4,0.126,5,0.126,10,0.405,21,1.16,22,0.644,23,0.965,26,1.204,28,1.501,29,0.014,30,0.881,47,0.255,50,0.144,53,0.008,54,0.01,55,0.008,77,0.93,123,2.354,153,2.354,177,2.779,178,3.759,184,2.474,192,2.348,201,1.813,207,3.745,220,2.474,225,2.354,321,1.968,330,2.607,371,3.369,376,4.052,383,2.929,454,4.363,544,3.67,822,4.685,823,4.073,824,7.117,825,5.85,826,6.188,827,4.685,828,6.067,829,7.117,830,4.685,831,6.067,832,5.275,833,4.685]],["title/classes/Metric.html",[0,0.078,486,2.201]],["body/classes/Metric.html",[0,0.081,2,1.484,3,0.128,4,0.112,5,0.112,7,0.92,8,1.385,9,1.595,10,0.358,11,0.847,12,1.38,19,2.256,20,2.083,21,1.211,22,0.825,23,0.855,24,1.288,26,1.506,28,1.026,29,0.014,30,0.602,31,1.484,32,1.484,33,1.619,37,2.087,40,1.375,41,2.85,42,1.743,43,1.606,44,1.743,45,1.743,46,1.743,47,0.144,48,0.989,49,0.823,50,0.172,51,0.441,52,1.026,53,0.007,54,0.01,55,0.007,75,2.626,473,2.442,474,2.983,481,3.739,486,3.116,488,3.776,783,5.55,784,5.314,785,5.898]],["title/classes/RequestCache.html",[0,0.078,320,2.472]],["body/classes/RequestCache.html",[0,0.107,2,1.434,3,0.123,4,0.108,5,0.108,10,0.346,12,0.683,21,1.046,22,0.581,23,0.826,26,1.086,28,1.353,29,0.014,30,0.794,47,0.216,49,0.796,50,0.168,53,0.007,54,0.009,55,0.007,77,0.796,123,2.015,154,2.393,177,2.505,181,3.934,184,2.889,192,2.117,201,2.117,202,2.984,205,1.105,287,5.793,296,2.677,299,3.14,300,5.035,301,2.883,302,5.413,303,2.677,304,3.14,305,3.485,306,3.485,307,4.755,309,5.413,310,5.027,312,3.653,313,5.815,314,4.755,316,2.883,317,3.485,319,3.485,320,3.892,321,1.684,322,2.883,323,3.14,324,3.485,325,3.485,326,3.485,327,4.755,328,4.755,329,3.485,330,2.231,331,3.485,332,4.755,333,3.485,334,4.755,335,3.485,336,3.485,337,3.485,338,3.485,834,4.009,835,4.009]],["title/interceptors/RequestInterceptor.html",[438,2.844,451,2.641]],["body/interceptors/RequestInterceptor.html",[0,0.08,3,0.125,4,0.11,5,0.11,10,0.351,21,1.056,22,0.587,23,0.838,26,1.096,28,1.366,29,0.014,30,0.802,47,0.261,50,0.125,53,0.007,54,0.009,55,0.007,77,0.807,109,1.401,123,2.044,154,1.455,177,2.53,178,3.554,184,2.148,192,2.138,201,1.574,207,3.491,220,2.148,222,2.044,225,2.044,247,3.922,285,3.186,302,3.973,310,4.494,312,4.189,320,4.207,321,1.709,323,4.914,330,2.264,371,2.925,376,3.689,383,2.543,388,4.328,390,3.536,438,3.973,462,3.536,494,3.186,496,2.716,498,4.328,501,4.328,502,5.272,508,3.536,509,2.925,511,3.186,512,4.328,513,2.925,564,3.536,568,3.186,569,3.536,570,3.536,836,5.454,837,4.067,838,4.067,839,4.067,840,4.067,841,4.067,842,5.524,843,4.067,844,3.536,845,4.067,846,4.067,847,4.067,848,4.067,849,4.067]],["title/interceptors/ResponseInterceptor.html",[439,2.844,451,2.641]],["body/interceptors/ResponseInterceptor.html",[0,0.094,3,0.148,4,0.129,5,0.129,10,0.415,21,1.179,22,0.655,23,0.99,26,1.224,28,1.526,29,0.014,30,0.896,47,0.249,50,0.148,53,0.008,54,0.011,55,0.008,77,0.954,123,2.416,177,2.825,178,3.795,192,2.387,201,1.86,207,3.791,220,2.539,225,2.416,247,4.258,310,4.799,312,3.21,321,2.019,330,2.675,371,3.457,376,4.119,383,3.005,439,4.436,494,3.765,496,3.21,498,4.832,501,4.832,502,5.63,511,3.765,512,4.832,844,4.179,850,5.922,851,4.806,852,4.806]],["title/components/SearchComponent.html",[56,1.131,93,1.661]],["body/components/SearchComponent.html",[0,0.038,3,0.06,4,0.052,5,0.052,10,0.167,11,0.478,12,1.301,21,0.766,22,0.613,23,0.399,26,1.35,28,0.479,29,0.014,30,0.74,47,0.222,49,0.384,50,0.06,53,0.003,54,0.005,55,0.003,56,1.146,57,0.887,58,1.088,59,1.023,60,1.023,61,1.023,62,1.023,64,1.023,65,3.461,66,3.361,68,1.67,70,1.67,72,1.683,74,2.396,75,2.232,77,0.384,78,0.72,79,1.67,80,1.67,81,1.023,82,2.442,83,1.023,84,1.023,85,0.667,86,1.023,87,0.813,88,1.023,89,0.813,90,1.023,91,0.849,92,1.023,93,1.942,94,1.023,95,0.849,96,1.023,97,0.849,98,1.023,99,0.813,100,1.433,101,1.023,102,1.023,184,2.888,192,1.223,201,0.749,202,0.928,204,4.02,205,1.275,207,2.23,220,1.023,225,0.973,238,2.111,240,2.111,256,2.23,316,1.392,321,1.328,364,2.23,370,2.574,381,1.21,388,3.622,393,1.293,403,3.088,404,4.148,407,2.476,408,2.273,409,2.476,410,2.476,411,3.622,417,4.148,421,1.683,422,1.683,423,2.748,425,1.517,440,3.088,463,1.683,477,2.476,509,1.392,586,3.483,593,4.283,602,1.683,603,3.664,606,1.517,607,2.748,693,2.748,707,2.476,708,2.476,710,3.483,711,3.483,712,3.483,713,2.748,720,4.43,721,3.622,722,2.748,730,4.02,731,3.483,733,1.683,767,2.504,777,2.881,781,4.43,786,2.273,853,1.683,854,5.23,855,4.006,856,3.161,857,4.006,858,4.006,859,4.006,860,4.006,861,4.006,862,4.006,863,4.006,864,4.006,865,4.006,866,4.006,867,4.006,868,1.936,869,3.161,870,1.936,871,4.624,872,1.936,873,1.936,874,1.936,875,1.936,876,1.936,877,1.936,878,1.936,879,3.161,880,3.161,881,3.161,882,1.936,883,1.936,884,1.936,885,1.936,886,3.161,887,1.936,888,1.936,889,1.683,890,1.936,891,1.936,892,1.936,893,1.517,894,3.161,895,1.936,896,4.006,897,1.936,898,1.936,899,1.936,900,1.936,901,1.936,902,1.936,903,1.936,904,1.936,905,1.936,906,1.936,907,1.936,908,1.683,909,3.161,910,3.161,911,1.936,912,3.161,913,1.936,914,1.683,915,1.936,916,1.936,917,1.936,918,1.936,919,2.748,920,3.161,921,3.161,922,3.161,923,1.936,924,3.161,925,1.936,926,1.936,927,1.936,928,1.936,929,1.936,930,5.095,931,3.161,932,1.936,933,3.161,934,1.936,935,3.161,936,3.161,937,3.161,938,3.161,939,1.936,940,3.161,941,1.683,942,1.936]],["title/modules/SearchModule.html",[103,1.131,434,1.988]],["body/modules/SearchModule.html",[0,0.078,3,0.123,4,0.107,5,0.107,29,0.014,47,0.25,50,0.123,53,0.007,54,0.009,55,0.007,58,2.139,77,0.792,78,1.484,85,2.626,93,2.29,103,1.141,105,2.132,106,2.005,107,3.457,108,2.107,109,1.877,110,2.404,117,3.034,118,2.22,119,1.912,121,2.11,124,2.11,131,2.348,154,1.951,432,3.733,433,3.833,434,4.154,435,3.833,447,3.034,448,2.107,458,2.869,893,3.125,943,3.989,944,3.989,945,3.989,946,3.989,947,5.189,948,3.125,949,5.452,950,3.989,951,3.468]],["title/modules/SearchRoutingModule.html",[103,1.131,947,2.844]],["body/modules/SearchRoutingModule.html",[0,0.106,3,0.167,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.549,77,1.075,93,2.793,105,1.73,110,2.096,121,2.096,124,2.573,150,3.188,151,3.913,152,3.341,153,2.722,154,1.938,156,3.617,619,3.895,947,4.781,951,4.708,952,5.415,953,5.415,954,5.415]],["title/components/SettingsComponent.html",[56,1.131,95,1.733]],["body/components/SettingsComponent.html",[0,0.085,3,0.133,4,0.116,5,0.116,10,0.373,21,1.1,23,1.332,26,1.142,29,0.014,47,0.15,50,0.133,53,0.007,54,0.01,55,0.007,56,1.85,57,1.979,58,1.981,59,2.282,60,2.282,61,2.282,62,2.282,64,2.282,65,4.17,66,3.968,68,3.038,70,3.038,77,0.858,78,1.607,79,3.038,80,3.038,81,2.282,82,3.642,83,2.282,84,2.282,85,1.488,86,2.282,87,1.815,88,2.282,89,1.815,90,2.282,91,1.894,92,2.282,93,1.815,94,2.282,95,3.023,96,2.282,97,1.894,98,2.282,99,1.815,100,1.546,101,2.282,102,2.282,192,2.227,201,1.672,202,2.071,224,4.959,321,2.417,364,3.6,370,3.838,674,4.507,955,3.756,956,6.468,957,5.753,958,4.32,959,4.32]],["title/components/SidenavComponent.html",[56,1.131,97,1.733]],["body/components/SidenavComponent.html",[0,0.072,3,0.112,4,0.098,5,0.098,10,0.316,12,0.623,21,1.134,22,0.545,23,0.753,26,1.177,28,0.904,29,0.014,30,0.531,47,0.223,50,0.112,53,0.006,54,0.009,55,0.006,56,1.696,57,1.675,58,1.767,59,1.931,60,1.931,61,1.931,62,1.931,64,1.931,65,4.048,66,3.944,68,2.711,70,2.711,74,1.603,75,1.415,77,0.726,78,1.36,79,2.711,80,2.711,81,1.931,82,3.396,83,1.931,84,1.931,85,1.259,86,1.931,87,1.536,88,1.931,89,1.536,90,1.931,91,1.603,92,1.931,93,1.536,94,1.931,95,1.603,96,1.931,97,2.819,98,1.931,99,1.536,100,1.308,101,1.931,102,1.931,119,2.46,137,2.442,139,3.708,140,2.442,147,3.961,148,4.021,178,3.396,192,1.987,201,1.415,202,1.753,225,1.838,321,2.156,364,3.301,370,3.579,383,2.286,393,2.442,403,2.442,404,2.63,405,2.63,406,3.179,418,3.691,426,5.156,603,2.63,707,2.865,708,2.865,735,4.462,736,4.462,941,4.462,960,3.179,961,5.931,962,5.133,963,5.133,964,3.657,965,5.133,966,5.133,967,3.657,968,3.657,969,5.133,970,3.657,971,3.657]],["title/modules/SidenavModule.html",[103,1.131,435,1.988]],["body/modules/SidenavModule.html",[0,0.08,3,0.125,4,0.11,5,0.11,29,0.014,47,0.251,50,0.125,53,0.007,54,0.009,55,0.007,58,2.16,77,0.807,78,1.513,85,2.637,95,2.421,97,2.421,103,1.163,105,2.149,106,2.044,107,3.491,108,2.148,109,1.902,110,2.428,117,3.075,118,2.264,119,1.95,121,2.138,124,2.138,154,1.976,432,3.745,433,3.848,434,3.848,435,4.147,447,3.075,448,2.148,458,2.925,643,4.803,644,3.536,972,4.067,973,4.067,974,4.067,975,4.067,976,3.186,977,4.067,978,4.067]],["title/classes/Temperature.html",[0,0.078,348,2.201]],["body/classes/Temperature.html",[0,0.082,2,1.499,3,0.129,4,0.113,5,0.113,7,0.929,8,1.394,9,1.599,10,0.362,11,0.853,12,1.364,19,2.271,20,2.097,21,1.218,22,0.818,23,0.863,24,1.296,26,1.485,28,1.036,29,0.014,30,0.608,31,1.499,32,1.499,33,1.412,40,1.389,41,2.861,42,1.76,43,1.622,44,1.76,45,1.76,46,1.76,47,0.195,48,0.999,49,1.119,50,0.173,51,0.445,52,1.036,53,0.007,54,0.01,55,0.007,205,1.554,322,4.899,348,3.137,358,3.791,473,3.317,474,3.013,486,3.956,488,3.545,489,3.013,791,5.336,792,5.922,793,3.643,794,3.643,795,3.643,796,3.643]],["title/classes/TimeZone.html",[0,0.078,761,2.472]],["body/classes/TimeZone.html",[0,0.077,2,1.397,3,0.12,4,0.105,5,0.105,7,0.866,8,1.329,9,1.57,10,0.337,11,0.813,12,1.384,19,2.165,20,1.999,21,1.265,22,0.824,23,0.805,24,1.236,26,1.507,28,0.966,29,0.014,30,0.567,31,1.397,32,1.397,33,1.628,34,3.395,35,4.671,37,1.757,40,2.193,41,2.779,42,1.64,43,1.511,44,1.64,45,1.64,46,1.64,47,0.135,48,0.931,49,0.775,50,0.165,51,0.415,52,0.966,53,0.007,54,0.009,55,0.007,210,3.244,480,3.059,481,2.608,761,3.359,762,4.136,797,5.616,798,5.183,799,5.752,800,5.752,801,5.752]],["title/classes/Weather.html",[0,0.078,100,1.415]],["body/classes/Weather.html",[0,0.061,2,1.111,3,0.095,4,0.084,5,0.084,7,0.689,8,1.129,9,1.468,10,0.268,11,0.69,12,1.39,19,1.839,20,1.698,21,1.034,22,0.818,23,0.64,24,1.05,26,1.503,27,2.074,28,0.768,29,0.014,30,0.451,31,1.111,32,1.111,33,1.663,37,1.547,38,2.074,39,2.074,40,2.336,41,2.505,42,1.304,43,1.202,44,1.304,45,1.304,46,1.304,47,0.187,48,0.741,49,1.074,50,0.14,51,0.33,52,0.768,53,0.005,54,0.008,55,0.005,100,1.633,205,1.645,265,2.233,267,2.233,345,3.729,347,3.729,348,3.823,354,2.432,355,2.432,356,3.575,358,2.54,359,2.233,360,2.233,361,2.233,475,4.634,479,3.383,659,3.729,664,1.827,802,5.728,803,5.186,804,5.186,805,5.186,806,2.699,807,3.967,808,2.699,809,2.699,810,2.699,811,2.699]],["title/components/WeatherComponent.html",[56,1.131,99,1.661]],["body/components/WeatherComponent.html",[0,0.085,3,0.133,4,0.116,5,0.116,10,0.373,21,1.1,23,1.332,26,1.142,29,0.014,47,0.15,50,0.133,53,0.007,54,0.01,55,0.007,56,1.85,57,1.979,58,1.981,59,2.282,60,2.282,61,2.282,62,2.282,64,2.282,65,4.17,66,3.968,68,3.038,70,3.038,77,0.858,78,1.607,79,3.038,80,3.038,81,2.282,82,3.642,83,2.282,84,2.282,85,1.488,86,2.282,87,1.815,88,2.282,89,1.815,90,2.282,91,1.894,92,2.282,93,1.815,94,2.282,95,1.894,96,2.282,97,1.894,98,2.282,99,2.897,100,2.57,101,2.282,102,2.282,192,2.227,201,1.672,202,2.071,321,2.417,364,3.6,370,3.838,674,4.507,979,3.756,980,6.468,981,5.753,982,4.32,983,4.32]],["title/modules/WeatherModule.html",[103,1.131,984,3.098]],["body/modules/WeatherModule.html",[0,0.079,3,0.124,4,0.109,5,0.109,29,0.014,47,0.232,50,0.124,53,0.007,54,0.009,55,0.007,58,2.155,77,0.803,78,1.506,85,2.634,99,2.313,103,1.158,105,2.145,106,2.034,107,3.483,108,2.138,109,1.896,110,2.422,117,3.064,118,2.253,119,1.94,121,2.131,124,2.131,131,2.382,154,1.97,432,3.666,433,3.844,434,3.844,435,3.844,447,3.064,448,2.138,984,6.399,985,4.047,986,4.047,987,4.047,988,4.047,989,5.211,990,3.171,991,4.047,992,3.519]],["title/modules/WeatherRoutingModule.html",[103,1.131,989,2.844]],["body/modules/WeatherRoutingModule.html",[0,0.106,3,0.167,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.549,77,1.075,99,2.793,105,1.73,110,2.096,121,2.096,124,2.573,150,3.188,151,3.913,152,3.341,153,2.722,154,1.938,156,3.617,619,3.895,989,4.781,992,4.708,993,5.415,994,5.415,995,5.415]],["title/injectables/WeatherService.html",[177,1.811,440,2.641]],["body/injectables/WeatherService.html",[0,0.05,3,0.079,4,0.069,5,0.069,9,0.547,10,0.221,11,0.597,12,1.268,21,0.49,22,0.419,23,0.528,26,1.382,28,0.633,29,0.014,30,0.372,31,1.723,32,0.916,33,1.427,37,1.129,47,0.245,48,0.611,49,1.16,50,0.079,53,0.004,54,0.007,55,0.004,74,2.989,75,2.819,77,0.508,109,0.882,123,1.287,167,3.384,177,1.808,179,1.842,181,3.464,184,3.847,205,1.92,207,3.438,220,1.353,222,1.287,223,2.006,224,1.842,225,1.287,256,3.012,260,3.615,264,1.71,316,4.204,330,1.425,339,1.353,351,1.71,416,3.432,440,2.636,509,1.842,568,3.092,595,2.006,652,1.353,656,1.71,664,2.835,756,1.71,763,2.006,765,2.006,767,3.384,825,3.432,826,4.706,832,4.187,854,3.432,889,2.226,908,2.226,914,2.226,996,2.226,997,3.773,998,4.816,999,4.816,1000,4.816,1001,4.816,1002,4.816,1003,4.816,1004,4.816,1005,2.561,1006,3.947,1007,2.561,1008,2.561,1009,2.561,1010,2.561,1011,2.561,1012,2.561,1013,2.561,1014,2.561,1015,2.561,1016,2.561,1017,4.816,1018,2.561,1019,2.561,1020,2.561,1021,2.561,1022,2.561,1023,3.947,1024,2.561,1025,5.846,1026,2.561,1027,3.947,1028,5.846,1029,2.561,1030,2.561,1031,3.947,1032,2.561,1033,2.561,1034,2.561,1035,2.561,1036,2.561,1037,2.561,1038,2.561,1039,3.947,1040,3.947,1041,2.561,1042,2.561,1043,2.561,1044,2.561,1045,2.561,1046,2.561,1047,2.561]],["title/coverage.html",[1048,4.712]],["body/coverage.html",[0,0.144,1,1.2,5,0.058,6,2.702,7,1.735,9,0.461,22,0.229,25,1.2,29,0.014,51,0.777,53,0.004,54,0.006,55,0.004,56,1.847,57,0.988,58,2.076,63,1.875,85,0.743,87,0.906,89,0.906,91,0.945,93,0.906,95,0.945,97,0.945,99,0.906,100,0.772,105,1.926,109,1.188,167,1.348,168,1.875,169,1.875,175,1.2,177,1.974,178,1.139,180,1.875,205,0.595,221,2.702,256,1.2,257,2.702,258,1.139,264,1.44,279,1.875,284,1.689,296,1.44,298,1.875,303,1.44,304,2.702,320,1.348,339,1.139,340,2.702,348,1.2,351,1.44,358,1.2,363,1.875,412,6.493,437,1.551,438,1.551,439,1.551,440,1.44,441,2.702,451,2.878,454,1.551,471,2.702,472,1.348,475,1.348,476,2.702,479,1.348,483,1.348,484,2.702,486,1.2,487,1.348,488,1.2,495,3.376,496,3.597,513,1.551,514,1.551,525,1.689,579,1.875,614,2.702,652,1.139,653,2.702,655,1.348,656,1.44,657,1.348,659,1.348,669,1.875,681,2.702,687,1.269,688,2.702,692,1.875,744,2.702,750,2.702,756,1.44,757,2.702,761,1.348,762,1.348,767,1.348,777,1.551,778,1.875,779,2.702,783,2.702,786,1.551,787,1.875,791,2.702,797,2.702,802,2.702,821,1.689,823,1.875,836,1.875,850,1.875,853,1.875,948,2.702,955,1.875,960,1.875,976,2.702,979,1.875,990,2.702,996,1.875,997,1.689,1048,1.875,1049,2.157,1050,2.157,1051,2.157,1052,7.091,1053,2.157,1054,7.776,1055,7.776,1056,5.385,1057,5.743,1058,4.31,1059,4.281,1060,1.875,1061,1.875,1062,2.157,1063,2.157,1064,5.743,1065,3.449,1066,4.924,1067,4.31,1068,2.157,1069,2.157,1070,2.157,1071,2.157,1072,3.747,1073,2.999,1074,3.747,1075,2.999,1076,1.875,1077,2.157,1078,2.157]],["title/dependencies.html",[106,2.393,1079,3.292]],["body/dependencies.html",[29,0.014,43,1.956,53,0.009,54,0.011,55,0.009,77,1.003,106,2.54,108,2.669,126,5.537,127,4.989,153,2.54,220,2.669,286,4.394,448,2.669,721,3.959,893,3.959,1080,5.054,1081,6.941,1082,5.054,1083,5.054,1084,5.054,1085,5.054,1086,5.054,1087,5.054,1088,5.054,1089,5.054,1090,5.054,1091,5.054,1092,5.054,1093,5.054,1094,5.054,1095,5.054,1096,5.054,1097,5.054,1098,6.368,1099,5.054,1100,5.054,1101,5.054,1102,5.054,1103,5.054,1104,5.054,1105,5.054,1106,5.054]],["title/miscellaneous/enumerations.html",[1107,2.367,1108,4.14]],["body/miscellaneous/enumerations.html",[10,0.397,29,0.014,53,0.008,54,0.01,55,0.008,75,3.168,100,2.143,133,4.308,136,4.308,139,3.745,146,5.208,256,3.334,258,3.164,339,3.164,654,4.308,758,4.693,1107,3.304,1108,3.994,1109,4.594,1110,5.991,1111,4.594,1112,5.991,1113,5.991,1114,4.594,1115,5.991,1116,5.991,1117,4.594,1118,5.991,1119,5.991,1120,5.991,1121,4.594,1122,5.991,1123,5.991,1124,4.594,1125,5.991,1126,5.991,1127,5.208,1128,4.594,1129,5.991,1130,4.594,1131,5.991,1132,5.991,1133,5.991,1134,5.991,1135,5.991,1136,5.991]],["title/index.html",[10,0.284,1137,3.292,1138,3.292]],["body/index.html",[4,0.123,21,0.876,29,0.01,53,0.008,54,0.01,55,0.008,56,1.904,66,2.303,76,5.788,119,2.196,205,1.263,263,3.589,376,3.06,403,3.06,514,3.295,542,4.685,652,2.42,784,4.685,798,3.589,919,3.983,1081,3.983,1139,5.98,1140,4.582,1141,6.657,1142,6.657,1143,7.507,1144,4.582,1145,4.582,1146,4.582,1147,4.582,1148,4.582,1149,4.582,1150,7.647,1151,4.582,1152,4.582,1153,4.582,1154,4.582,1155,4.582,1156,4.582,1157,4.582,1158,4.582,1159,4.582,1160,6.657,1161,6.657,1162,4.582,1163,7.32,1164,4.582,1165,4.582,1166,4.582,1167,4.582,1168,4.582,1169,3.983,1170,5.98,1171,7.057,1172,4.582,1173,5.98,1174,5.98,1175,4.582,1176,7.057,1177,4.582,1178,4.582,1179,4.582,1180,6.657,1181,4.582,1182,4.582,1183,4.582,1184,3.589,1185,4.582,1186,4.582]],["title/modules.html",[105,1.731]],["body/modules.html",[29,0.011,53,0.009,54,0.011,55,0.009,104,3.947,105,1.609,115,3.624,116,3.624,127,6.194,432,2.415,433,2.532,434,2.532,435,2.532,436,3.624,608,3.947,613,3.624,675,3.947,680,3.624,743,3.624,947,3.624,984,3.947,989,3.624,1187,7.907,1188,7.907,1189,8.242,1190,7.907,1191,7.907]],["title/overview.html",[1184,4.245]],["body/overview.html",[2,2.186,29,0.012,53,0.01,54,0.012,55,0.01,58,2.104,105,1.952,152,3.071,179,4.395,297,2.186,566,5.313,821,4.787,1184,4.787,1192,6.111,1193,6.111,1194,6.111,1195,7.147,1196,6.111]],["title/routes.html",[152,2.724]],["body/routes.html",[29,0.013,53,0.011,54,0.013,55,0.011,152,3.237]],["title/miscellaneous/variables.html",[1107,2.367,1197,4.14]],["body/miscellaneous/variables.html",[10,0.199,22,0.821,28,0.571,29,0.014,33,1.423,53,0.004,54,0.008,55,0.004,58,2.48,74,3.426,75,3.045,85,0.795,87,0.97,89,0.97,91,1.012,93,0.97,95,1.012,97,1.012,99,0.97,100,1.303,105,2.301,109,1.762,200,3.166,211,2.432,221,4.009,238,2.432,240,2.432,256,2.027,284,2.852,339,1.923,432,1.107,433,1.16,434,1.16,435,1.16,441,1.809,495,1.809,496,3.011,513,2.619,514,2.619,515,2.007,516,2.007,517,2.007,518,2.007,519,2.007,520,2.007,521,2.007,522,2.007,523,2.007,524,2.007,525,2.852,526,2.007,527,3.166,528,2.007,529,2.007,530,2.007,531,2.007,532,2.007,533,3.166,534,2.007,535,2.007,536,2.007,537,2.007,538,2.007,539,2.007,540,2.007,541,2.007,542,2.852,543,2.007,544,1.809,545,2.007,546,2.007,547,2.007,548,2.007,549,2.007,550,2.007,551,2.007,552,2.007,614,1.809,654,2.619,681,1.809,687,2.143,744,1.809,948,1.809,976,1.809,990,1.809,997,2.852,1059,2.007,1060,3.166,1061,3.166,1072,2.007,1073,4.449,1074,2.007,1075,2.007,1076,3.166,1107,1.661,1127,3.166,1169,3.166,1197,2.007,1198,3.641,1199,3.641,1200,3.641,1201,3.641,1202,3.641,1203,3.641,1204,3.641,1205,3.641,1206,5.117,1207,4.508,1208,4.508,1209,3.641,1210,2.309,1211,2.309,1212,2.309,1213,2.309,1214,2.309,1215,2.309,1216,2.309,1217,2.309,1218,2.309,1219,2.309,1220,2.309,1221,2.309,1222,6.418,1223,3.641,1224,3.641,1225,3.641,1226,3.641,1227,3.641,1228,5.117,1229,3.641,1230,3.641,1231,3.641,1232,3.641,1233,3.641,1234,3.641,1235,3.641,1236,3.641,1237,3.641,1238,3.641,1239,3.641,1240,2.309]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":412,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":717,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":603,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":566,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"overview.html":{}}}],["1.1.1",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":401,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":601,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":406,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":419,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["11.0.0",{"_index":1081,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":425,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["16",{"_index":1192,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1195,"title":{},"body":{"overview.html":{}}}],["180.0000000",{"_index":916,"title":{},"body":{"components/SearchComponent.html":{}}}],["2.0.0",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":931,"title":{},"body":{"components/SearchComponent.html":{}}}],["20",{"_index":402,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":737,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":970,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":602,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["2px",{"_index":936,"title":{},"body":{"components/SearchComponent.html":{}}}],["3",{"_index":1194,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":969,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":927,"title":{},"body":{"components/SearchComponent.html":{}}}],["34.855499",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35px",{"_index":925,"title":{},"body":{"components/SearchComponent.html":{}}}],["4.1.0",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":600,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400",{"_index":526,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":596,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["401",{"_index":532,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":537,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":541,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":714,"title":{},"body":{"components/HeaderComponent.html":{}}}],["500",{"_index":547,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5px",{"_index":926,"title":{},"body":{"components/SearchComponent.html":{}}}],["6.6.0",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["8.64e+7",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["9",{"_index":1193,"title":{},"body":{"overview.html":{}}}],["90.0000000",{"_index":913,"title":{},"body":{"components/SearchComponent.html":{}}}],["absolute",{"_index":605,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["abstract",{"_index":287,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["access",{"_index":539,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":723,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":718,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":829,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":1,"title":{"classes/AdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["administrativearea(args?.administrativearea",{"_index":271,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["administrativearea(args?.country",{"_index":273,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["age",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["align",{"_index":710,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["amount",{"_index":400,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":1141,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":448,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":893,"title":{},"body":{"components/SearchComponent.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"dependencies.html":{}}}],["animate.css",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":534,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":57,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["application",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"index.html":{}}}],["applicationservice",{"_index":178,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["appmodule",{"_index":104,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["approutes",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":115,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}}}],["appsettings",{"_index":167,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["apptheme",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["appthemechange",{"_index":182,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["appthemestate",{"_index":183,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["args",{"_index":31,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["args?.country",{"_index":770,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.dailyforecasts",{"_index":663,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.dailyforecasts?.map(item",{"_index":665,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.day",{"_index":809,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.geoposition",{"_index":772,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.night",{"_index":811,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.region",{"_index":774,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.timezone",{"_index":776,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args[key",{"_index":290,"title":{},"body":{"classes/BaseModel.html":{}}}],["array",{"_index":664,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["artifacts",{"_index":1164,"title":{},"body":{"index.html":{}}}],["assets/datasets/autocomplete.json",{"_index":516,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/conditions.json",{"_index":518,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/forecasts.json",{"_index":520,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/geoposition.json",{"_index":522,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/locations.json",{"_index":524,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["atob(value",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":535,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":423,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["autocomplete",{"_index":256,"title":{"classes/AutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocomplete(item",{"_index":1030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["autocompletemodule",{"_index":623,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":1155,"title":{},"body":{"index.html":{}}}],["available",{"_index":1191,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":394,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["bad",{"_index":528,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["basemodel",{"_index":9,"title":{"classes/BaseModel.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["basemodel:5",{"_index":42,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:6",{"_index":44,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:7",{"_index":45,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:8",{"_index":46,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["baseurl",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":410,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["black",{"_index":598,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{}}}],["bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["border",{"_index":731,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bottom",{"_index":607,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["browse",{"_index":1189,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":719,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1163,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":625,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":1132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["cached",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedorigin",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresponse",{"_index":842,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["cachedresult",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresult.lastread",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cacheresult",{"_index":296,"title":{"interfaces/CacheResult.html":{}},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["cacheservice",{"_index":303,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["calc(#{$navbar",{"_index":716,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caption",{"_index":597,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":592,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":627,"title":{},"body":{"modules/FeatureModule.html":{}}}],["catcherror",{"_index":506,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["catcherror((error",{"_index":555,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["category",{"_index":751,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["center",{"_index":712,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["change",{"_index":1157,"title":{},"body":{"index.html":{}}}],["check",{"_index":1183,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":629,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":619,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["city",{"_index":1129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"overview.html":{}}}],["cli",{"_index":1142,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["closable",{"_index":557,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["cluster_appmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_declarations",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_containermodule",{"_index":427,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_declarations",{"_index":429,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_exports",{"_index":430,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_imports",{"_index":431,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_providers",{"_index":428,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_favoritesmodule",{"_index":609,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":612,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":611,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":610,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_forecastmodule",{"_index":676,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_declarations",{"_index":679,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":677,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":678,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_headermodule",{"_index":739,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_declarations",{"_index":742,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":741,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":740,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_searchmodule",{"_index":943,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_declarations",{"_index":946,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":945,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":944,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_sidenavmodule",{"_index":972,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":974,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":975,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":973,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":985,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_declarations",{"_index":988,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":986,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":987,"title":{},"body":{"modules/WeatherModule.html":{}}}],["code",{"_index":798,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":1147,"title":{},"body":{"index.html":{}}}],["col",{"_index":942,"title":{},"body":{"components/SearchComponent.html":{}}}],["color",{"_index":593,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["colortheme",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colortheme.light",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":422,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["command",{"_index":919,"title":{},"body":{"components/SearchComponent.html":{},"index.html":{}}}],["common.scss",{"_index":393,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/exception",{"_index":450,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/request",{"_index":452,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":453,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":455,"title":{},"body":{"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":447,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["compass",{"_index":923,"title":{},"body":{"components/SearchComponent.html":{}}}],["component",{"_index":56,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["condition",{"_index":550,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":339,"title":{"classes/Conditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["conditions(result",{"_index":1034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["config",{"_index":966,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(this",{"_index":295,"title":{},"body":{"classes/BaseModel.html":{}}}],["const",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["constants/color",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/panel",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["constructor(args",{"_index":24,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["constructor(config",{"_index":964,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":1005,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(message",{"_index":499,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["constructor(private",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":868,"title":{},"body":{"components/SearchComponent.html":{}}}],["container",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":456,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":457,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":458,"title":{},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":745,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":746,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":459,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":977,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":978,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":460,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":85,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":116,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{}}}],["containermodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":469,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":436,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{}}}],["content",{"_index":408,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["context",{"_index":997,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ng",{"_index":933,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinates",{"_index":922,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinatesform",{"_index":857,"title":{},"body":{"components/SearchComponent.html":{}}}],["countries",{"_index":1125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":258,"title":{"classes/Country.html":{}},"body":{"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":13,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["coverage",{"_index":1048,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":998,"title":{},"body":{"injectables/WeatherService.html":{}}}],["created",{"_index":19,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["createform",{"_index":858,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentdate",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentoption",{"_index":859,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentroute",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{}}}],["dailyforecasts",{"_index":661,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":1122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":573,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["dataset",{"_index":1017,"title":{},"body":{"injectables/WeatherService.html":{}}}],["datasets",{"_index":758,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":40,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["date.now",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["day",{"_index":475,"title":{"classes/Day.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["debouncetime",{"_index":885,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":901,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["decodebase64",{"_index":513,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(providers.weather.apikey",{"_index":570,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["delay",{"_index":839,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["dependencies",{"_index":106,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["detail",{"_index":558,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["dev",{"_index":1152,"title":{},"body":{"index.html":{}}}],["development",{"_index":1149,"title":{},"body":{"index.html":{}}}],["direction",{"_index":421,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1162,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1166,"title":{},"body":{"index.html":{}}}],["display",{"_index":403,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":1165,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":886,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":631,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":920,"title":{},"body":{"components/SearchComponent.html":{}}}],["e.item",{"_index":921,"title":{},"body":{"components/SearchComponent.html":{}}}],["e2e",{"_index":1177,"title":{},"body":{"index.html":{}}}],["ease",{"_index":736,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["effectivedate",{"_index":752,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":753,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["element",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":483,"title":{"classes/Elevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["elevation(args?.elevation",{"_index":691,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["encodebase64",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encountered",{"_index":548,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1176,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":754,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":755,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endpoint",{"_index":540,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["englishname",{"_index":14,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["englishtype",{"_index":15,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["entry.lastread",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["enumerations",{"_index":1108,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":803,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["epochtime",{"_index":341,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["error",{"_index":561,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["error.status",{"_index":563,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["errors",{"_index":525,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors[error.status",{"_index":559,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["event",{"_index":388,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.query",{"_index":904,"title":{},"body":{"components/SearchComponent.html":{}}}],["event.ts",{"_index":779,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":391,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{}}}],["exceptioninterceptor",{"_index":437,"title":{"interceptors/ExceptionInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{}}}],["exceptioninterceptor.failcount",{"_index":505,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["execute",{"_index":1173,"title":{},"body":{"index.html":{}}}],["expire",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["extend",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["f",{"_index":1131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":720,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["failcount",{"_index":497,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["failed",{"_index":536,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":242,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorites",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":581,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":580,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":615,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":616,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":87,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":608,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{}}}],["favoritesroutes",{"_index":618,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":613,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{}}}],["featuremodule",{"_index":432,"title":{"modules/FeatureModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["fieldsetmodule",{"_index":633,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1158,"title":{},"body":{"index.html":{}}}],["first",{"_index":584,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":1168,"title":{},"body":{"index.html":{}}}],["flagicon",{"_index":259,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["flex",{"_index":404,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":790,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":721,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["forecast",{"_index":652,"title":{"classes/Forecast.html":{}},"body":{"classes/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast(result",{"_index":1036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forecast.component.html",{"_index":671,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":670,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":1146,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":1148,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":682,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":683,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":89,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodule",{"_index":675,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{}}}],["forecastroutes",{"_index":685,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":680,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{}}}],["forecasts",{"_index":654,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":930,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol",{"_index":891,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol(undefined",{"_index":909,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":871,"title":{},"body":{"components/SearchComponent.html":{}}}],["forroot",{"_index":443,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":444,"title":{},"body":{"modules/ContainerModule.html":{}}}],["found",{"_index":543,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fsevents",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":552,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1179,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1160,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1140,"title":{},"body":{"index.html":{}}}],["geoposition",{"_index":687,"title":{"classes/GeoPosition.html":{}},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(`${providers.weather.conditions}/${locationkey",{"_index":1032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.forecasts}/${locationkey",{"_index":1035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.locations}/${key",{"_index":1043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.autocomplete",{"_index":1026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.geoposition",{"_index":1037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(req",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["getconditions",{"_index":999,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext",{"_index":1000,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrentposition",{"_index":235,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getforecast",{"_index":1001,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getgeoposition",{"_index":1002,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticon",{"_index":342,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["getlocation",{"_index":1003,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getting",{"_index":1137,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":185,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["given",{"_index":545,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gmtoffset",{"_index":799,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["go",{"_index":1182,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":396,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":1190,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":821,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":822,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":43,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"dependencies.html":{}}}],["guid.newguid",{"_index":293,"title":{},"body":{"classes/BaseModel.html":{}}}],["handle(req.clone",{"_index":567,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["hasprecipitation",{"_index":343,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["header",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["header'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":91,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":433,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":748,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":743,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{}}}],["headline",{"_index":655,"title":{"classes/Headline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["headline(args?.headline",{"_index":668,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":405,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1180,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/formatters",{"_index":285,"title":{},"body":{"classes/BaseModel.html":{},"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["helpers/menu",{"_index":890,"title":{},"body":{"components/SearchComponent.html":{}}}],["helpers/search",{"_index":888,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":415,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":1136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":825,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":1154,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":449,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":826,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httperrorresponse",{"_index":510,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["httpevent",{"_index":511,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":502,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":512,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":302,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["https://dataservice.accuweather.com",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comcurrentconditions/v1",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comforecasts/v1/daily/5day",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":25,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iautocomplete",{"_index":264,"title":{"interfaces/IAutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["icon",{"_index":477,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"components/SearchComponent.html":{}}}],["iconditions",{"_index":351,"title":{"interfaces/IConditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["iconphrase",{"_index":478,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":472,"title":{"interfaces/ICountry.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["iday",{"_index":479,"title":{"interfaces/IDay.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["identifier",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["ielevation",{"_index":487,"title":{"interfaces/IElevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":656,"title":{"interfaces/IForecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["igeoposition",{"_index":175,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iheadline",{"_index":657,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":756,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["image",{"_index":715,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imenuevent",{"_index":777,"title":{"interfaces/IMenuEvent.html":{}},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["imetric",{"_index":488,"title":{"interfaces/IMetric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["imperial",{"_index":485,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["implements",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":47,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./weather/weather.module').then(m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":41,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["injectable",{"_index":177,"title":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":179,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":941,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["input:focus",{"_index":932,"title":{},"body":{"components/SearchComponent.html":{}}}],["inputevent",{"_index":789,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":963,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":635,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept",{"_index":498,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":501,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":451,"title":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":496,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.ts:10",{"_index":852,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:11",{"_index":837,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:14",{"_index":838,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:25",{"_index":504,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:26",{"_index":500,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:29",{"_index":503,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:7",{"_index":851,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptors",{"_index":494,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":51,"title":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":297,"title":{},"body":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["invalid",{"_index":531,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["invalid:not(.ng",{"_index":934,"title":{},"body":{"components/SearchComponent.html":{}}}],["isalias",{"_index":759,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isdaylightsaving",{"_index":800,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["isdaytime",{"_index":344,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":786,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":768,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isloading",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":595,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/IMenuEvent.html":{},"injectables/WeatherService.html":{}}}],["item.key",{"_index":1023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["item.substring(1",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[0].touppercase",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemperature",{"_index":358,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["items",{"_index":711,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["itimezone",{"_index":762,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["iweather",{"_index":659,"title":{"interfaces/IWeather.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["join",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jquery",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":575,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["justify",{"_index":407,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["karma",{"_index":1175,"title":{},"body":{"index.html":{}}}],["key",{"_index":260,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["keyfiltermodule",{"_index":637,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":586,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["languages",{"_index":1126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastread",{"_index":299,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["lat",{"_index":908,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["latitude",{"_index":238,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["lat},${lng",{"_index":1038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["left",{"_index":606,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{}}}],["level",{"_index":16,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":1123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":399,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":395,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":345,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["literal",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":1144,"title":{},"body":{"index.html":{}}}],["lng",{"_index":914,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["loadchildren",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadingchange",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["loadingstate",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["local",{"_index":574,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["localizedname",{"_index":17,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["localizedtype",{"_index":18,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":346,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["location",{"_index":767,"title":{"classes/Location.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["location(result",{"_index":1040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationchange",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationkey",{"_index":1031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationresolver",{"_index":454,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":1127,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationstate",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationtype",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":240,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.weathermodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":420,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["map(item",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":411,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["marker",{"_index":918,"title":{},"body":{"components/SearchComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":424,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maxage",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["maximum",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ITemperature.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{}}}],["measure",{"_index":1116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":725,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menuitem",{"_index":781,"title":{},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["message",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["messageservice",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["metadata",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":486,"title":{"classes/Metric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["metric(args?.imperial",{"_index":491,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.maximum",{"_index":794,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.metric",{"_index":493,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.minimum",{"_index":796,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["min",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":792,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["miscellaneous",{"_index":1107,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilelink",{"_index":347,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["mode.enum",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":1119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":49,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":473,"title":{},"body":{"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["model.ts:11",{"_index":481,"title":{},"body":{"classes/Day.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{}}}],["model.ts:12",{"_index":480,"title":{},"body":{"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/TimeZone.html":{}}}],["model.ts:13",{"_index":34,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:14",{"_index":35,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:15",{"_index":36,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{}}}],["model.ts:16",{"_index":38,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Day.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:17",{"_index":39,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:18",{"_index":27,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:19",{"_index":267,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:20",{"_index":265,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:21",{"_index":354,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:22",{"_index":355,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:23",{"_index":356,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:24",{"_index":357,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:25",{"_index":352,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:26",{"_index":268,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:27",{"_index":266,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:28",{"_index":813,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:29",{"_index":814,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:30",{"_index":353,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:31",{"_index":815,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:32",{"_index":816,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:33",{"_index":817,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:34",{"_index":818,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:35",{"_index":819,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:36",{"_index":820,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:37",{"_index":812,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:5",{"_index":281,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:6",{"_index":282,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:7",{"_index":283,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:8",{"_index":280,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:9",{"_index":474,"title":{},"body":{"classes/Country.html":{},"classes/Elevation.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["models/administrativearea",{"_index":269,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/autocomplete",{"_index":889,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/base",{"_index":48,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["models/cache",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["models/conditions",{"_index":763,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/country",{"_index":764,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/day",{"_index":806,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/elevation",{"_index":689,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":765,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/geoposition",{"_index":176,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/headline",{"_index":658,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["models/location",{"_index":1015,"title":{},"body":{"injectables/WeatherService.html":{}}}],["models/metric",{"_index":489,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["models/temperature",{"_index":359,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/timezone",{"_index":766,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/weather",{"_index":660,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":103,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["modules",{"_index":105,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":446,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":1181,"title":{},"body":{"index.html":{}}}],["ms",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["multi",{"_index":466,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1153,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":382,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":234,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":247,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req",{"_index":844,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":553,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["next.handle(req.clone",{"_index":576,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["nextoffsetchange",{"_index":801,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["ng",{"_index":1150,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["ngoninit",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":804,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["none",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":832,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["number",{"_index":37,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["object",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args)?.foreach(key",{"_index":288,"title":{},"body":{"classes/BaseModel.html":{}}}],["observable",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["observable(subscriber",{"_index":245,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["of(cachedresponse",{"_index":845,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["of(null",{"_index":833,"title":{},"body":{"guards/LocationResolver.html":{}}}],["of(this.getcontext(key",{"_index":1042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":860,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":861,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onsubmit",{"_index":862,"title":{},"body":{"components/SearchComponent.html":{}}}],["opacity",{"_index":599,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["options",{"_index":929,"title":{},"body":{"components/SearchComponent.html":{}}}],["origin",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["original",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{},"miscellaneous/variables.html":{}}}],["original.split",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1).length",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].tolowercase",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["originalevent",{"_index":780,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["output",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":1134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":413,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1184,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1079,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":417,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["page",{"_index":1186,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":392,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":568,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["path",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["pathmatch",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permission",{"_index":538,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":846,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["pipe(map(result",{"_index":1028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(tap",{"_index":571,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["placeholder",{"_index":588,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["pointerevent",{"_index":782,"title":{},"body":{"interfaces/IMenuEvent.html":{}}}],["popper.js",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":604,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["predicate",{"_index":1020,"title":{},"body":{"injectables/WeatherService.html":{}}}],["prevented",{"_index":551,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":1145,"title":{},"body":{"index.html":{}}}],["previous",{"_index":591,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":398,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["primeng/autocomplete",{"_index":624,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":626,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":628,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":630,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":632,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":634,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":636,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":638,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":640,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":642,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":644,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":646,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":648,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":650,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":622,"title":{},"body":{"modules/FeatureModule.html":{}}}],["pristine",{"_index":935,"title":{},"body":{"components/SearchComponent.html":{}}}],["private",{"_index":184,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":1167,"title":{},"body":{"index.html":{}}}],["production",{"_index":1169,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1139,"title":{},"body":{"index.html":{}}}],["promise",{"_index":831,"title":{},"body":{"guards/LocationResolver.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":1178,"title":{},"body":{"index.html":{}}}],["provide",{"_index":464,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${this.country.id}/shiny/32.png",{"_index":278,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["providers.weather.autocomplete",{"_index":515,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.conditions",{"_index":517,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.forecasts",{"_index":519,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.geoposition",{"_index":521,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.icons}/${this.icon}.svg",{"_index":482,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["providers.weather.icons}/${this.weathericon}.svg",{"_index":362,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["providers.weather.locations",{"_index":523,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":12,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["put(req",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["q",{"_index":1027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["query",{"_index":788,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":639,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":733,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["rank",{"_index":261,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reactiveformsmodule",{"_index":949,"title":{},"body":{"modules/SearchModule.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"injectables/WeatherService.html":{}}}],["red",{"_index":938,"title":{},"body":{"components/SearchComponent.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1185,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":879,"title":{},"body":{"components/SearchComponent.html":{}}}],["region",{"_index":760,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reload",{"_index":1156,"title":{},"body":{"index.html":{}}}],["representative",{"_index":587,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":841,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.params.append('apikey",{"_index":569,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.url.includes(key",{"_index":578,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["req.url.includes(providers.weather.baseurl",{"_index":564,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["request",{"_index":527,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestcache",{"_index":320,"title":{"classes/RequestCache.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["requestinterceptor",{"_index":438,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["require",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["resolve",{"_index":824,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":828,"title":{},"body":{"guards/LocationResolver.html":{}}}],["response",{"_index":300,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["responseinterceptor",{"_index":439,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["result",{"_index":53,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.map(item",{"_index":1029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["result.tostring",{"_index":924,"title":{},"body":{"components/SearchComponent.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":572,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["retry",{"_index":507,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["retry(1",{"_index":554,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["return",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":713,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["ripplemodule",{"_index":641,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":544,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":470,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":620,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":686,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":749,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":954,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(weatherroutes",{"_index":995,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":152,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/WeatherModule.html":{}}}],["routing.module.ts",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["run",{"_index":1143,"title":{},"body":{"index.html":{}}}],["running",{"_index":1170,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":509,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["scaffolding",{"_index":1159,"title":{},"body":{"index.html":{}}}],["screen",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":854,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":856,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":855,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":950,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":951,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["search/search.module",{"_index":461,"title":{},"body":{"modules/ContainerModule.html":{}}}],["searchcomponent",{"_index":93,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":434,"title":{"modules/SearchModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["searchoptions",{"_index":863,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchpattern",{"_index":864,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchroutes",{"_index":953,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":947,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{}}}],["searchsubject",{"_index":865,"title":{},"body":{"components/SearchComponent.html":{}}}],["second",{"_index":589,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":1151,"title":{},"body":{"index.html":{}}}],["server",{"_index":542,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services/application.service",{"_index":383,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SidenavComponent.html":{}}}],["services/cache.service",{"_index":462,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["services/weather.service",{"_index":463,"title":{},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{}}}],["set('conditions",{"_index":1045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('forecast",{"_index":1046,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('location",{"_index":1047,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcontext",{"_index":1004,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setobservables",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setoptions",{"_index":866,"title":{},"body":{"components/SearchComponent.html":{}}}],["sets.enum.ts",{"_index":1112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":169,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":171,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":172,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":173,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":174,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":95,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":560,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["shadow",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":1135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":426,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":962,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":961,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":971,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":968,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavcomponent",{"_index":97,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":435,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["size",{"_index":722,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["slide",{"_index":585,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["smaller",{"_index":928,"title":{},"body":{"components/SearchComponent.html":{}}}],["solid",{"_index":937,"title":{},"body":{"components/SearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":805,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["space",{"_index":409,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["spec\\.ts",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exception",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast.module.ts",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formatters.ts",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":1117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":1118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":468,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":363,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:31",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":441,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:44",{"_index":445,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":621,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":747,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":744,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":955,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":959,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":958,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":960,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":965,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":967,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":976,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":617,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":579,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":583,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":582,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":614,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":684,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":669,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":673,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":672,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":681,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":952,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":853,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:17",{"_index":883,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:18",{"_index":872,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:19",{"_index":878,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:20",{"_index":874,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:21",{"_index":882,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:22",{"_index":869,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":870,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:34",{"_index":875,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:36",{"_index":876,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:39",{"_index":877,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:40",{"_index":873,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:45",{"_index":884,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":948,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather",{"_index":993,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["src/app/weather/weather.component.ts",{"_index":979,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":990,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":1121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":1124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":1128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":1130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":1133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":168,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/formatters.ts",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/menu",{"_index":778,"title":{},"body":{"interfaces/IMenuEvent.html":{},"coverage.html":{}}}],["src/common/helpers/search",{"_index":787,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/exception",{"_index":495,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interceptors/request",{"_index":836,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":850,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":6,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":257,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"coverage.html":{}}}],["src/common/models/base",{"_index":279,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/common/models/cache",{"_index":298,"title":{},"body":{"interfaces/CacheResult.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":340,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":471,"title":{},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":476,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":484,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":653,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":688,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":750,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":757,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":783,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":791,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":797,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":802,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":823,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:10",{"_index":830,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:8",{"_index":827,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":180,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:12",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:13",{"_index":213,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":214,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:19",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:20",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:21",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:22",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:30",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:35",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:55",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/cache.service.ts",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["src/common/services/cache.service.ts:12",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:13",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:16",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:25",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:6",{"_index":834,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/cache.service.ts:7",{"_index":835,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/weather.service.ts",{"_index":996,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:15",{"_index":1006,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:18",{"_index":1014,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:23",{"_index":1010,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:27",{"_index":1007,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:31",{"_index":1009,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:35",{"_index":1011,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:39",{"_index":1012,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:43",{"_index":1013,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:50",{"_index":1008,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1138,"title":{"index.html":{}},"body":{}}],["state.enum",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":1120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":442,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["stored",{"_index":514,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stored[object.keys(stored).find(key",{"_index":577,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{},"components/SearchComponent.html":{}}}],["subscriber",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(updated",{"_index":255,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success",{"_index":236,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":239,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":241,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":867,"title":{},"body":{"components/SearchComponent.html":{}}}],["summary",{"_index":562,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["super(args",{"_index":52,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["supplied",{"_index":530,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1187,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1188,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":887,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":902,"title":{},"body":{"components/SearchComponent.html":{}}}],["syntax",{"_index":529,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["table",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":643,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tap",{"_index":508,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["tap((event",{"_index":847,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["teal",{"_index":940,"title":{},"body":{"components/SearchComponent.html":{}}}],["tel",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":348,"title":{"classes/Temperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["temperature(args?.temperature",{"_index":361,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":1172,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1171,"title":{},"body":{"index.html":{}}}],["text",{"_index":724,"title":{},"body":{"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["theme.enum",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["theme.enum.ts",{"_index":1110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["third",{"_index":590,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.administrativearea",{"_index":270,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.administrativearea.localizedname",{"_index":277,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.application.loadingchange$.next(false",{"_index":849,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.loadingchange$.next(true",{"_index":840,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.loadingstate",{"_index":385,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.sidenavstate",{"_index":386,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.apptheme",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.appthemechange$.subscribe",{"_index":253,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.appthemestate",{"_index":252,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.apptheme",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavmode",{"_index":229,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavstate",{"_index":231,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.cache.get(req",{"_index":843,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cache.put(req",{"_index":848,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cached.foreach(entry",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.get(cachedorigin",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.set(origin",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.constructor.name",{"_index":294,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.context",{"_index":1044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).slice().find((item",{"_index":1024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).some(predicate",{"_index":1022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).unshift(value",{"_index":1019,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.coordinatesform",{"_index":907,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.country",{"_index":272,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.country.localizedname",{"_index":276,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.createcontext",{"_index":1016,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.created",{"_index":291,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.createform",{"_index":894,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentoption",{"_index":896,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentroute",{"_index":389,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.datasets",{"_index":769,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.day",{"_index":808,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.elevation",{"_index":690,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["this.failcount",{"_index":565,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["this.forecasts",{"_index":662,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.geoposition",{"_index":771,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.getcontext(key",{"_index":1041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(null",{"_index":1018,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getuserlocation",{"_index":233,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.headline",{"_index":667,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.http",{"_index":1025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.id",{"_index":292,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.imperial",{"_index":490,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.isloading",{"_index":384,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.loadingchange$.subscribe",{"_index":246,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.loadingstate",{"_index":244,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.localizedname",{"_index":274,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.locationchange$.next",{"_index":237,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationchange$.next(default_location",{"_index":243,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationchange$.subscribe",{"_index":250,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationstate",{"_index":249,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.maxage",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.maximum",{"_index":793,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.message.add",{"_index":556,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["this.metric",{"_index":492,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.minimum",{"_index":795,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.night",{"_index":810,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.primengconfig.ripple",{"_index":651,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.region",{"_index":773,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.router.events.subscribe",{"_index":387,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchoptions",{"_index":917,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions[1",{"_index":897,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject",{"_index":898,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject$.next(event.query",{"_index":905,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject$.pipe",{"_index":900,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setcontext('conditions",{"_index":1033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext('location",{"_index":1039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setobservables",{"_index":232,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setoptions",{"_index":895,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.sidenavchanged.emit",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavmode",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":230,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sources",{"_index":807,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.suggestions",{"_index":899,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.temperature",{"_index":360,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.timezone",{"_index":775,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.type",{"_index":275,"title":{},"body":{"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/IAutoComplete.html":{}}}],["this.updatevalue(this.apptheme",{"_index":254,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.updatevalue(this.isloading",{"_index":248,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.updatevalue(this.userlocation",{"_index":251,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.weather.autocomplete(text.tolowercase",{"_index":903,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.weather.getconditions(value",{"_index":906,"title":{},"body":{"components/SearchComponent.html":{}}}],["this[tocamelcase(key",{"_index":289,"title":{},"body":{"classes/BaseModel.html":{}}}],["timezone",{"_index":761,"title":{"classes/TimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["toastmodule",{"_index":645,"title":{},"body":{"modules/FeatureModule.html":{}}}],["tocamelcase",{"_index":284,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglebuttonmodule",{"_index":647,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tooltipmodule",{"_index":649,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":397,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostring",{"_index":262,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["totitlecase",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":735,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":732,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":286,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorized",{"_index":533,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["unexpected",{"_index":549,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":784,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"index.html":{}}}],["unittype",{"_index":785,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{}}}],["unknown",{"_index":1021,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updated",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["updatevalue",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["updatevalue(original",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["uri",{"_index":546,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":301,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["use",{"_index":1161,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":465,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":170,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["usevalue",{"_index":467,"title":{},"body":{"modules/ContainerModule.html":{}}}],["valid:not(.ng",{"_index":939,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators",{"_index":892,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(180.0000000",{"_index":915,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(90.0000000",{"_index":911,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.min",{"_index":912,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.required",{"_index":910,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1197,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":263,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"index.html":{}}}],["via",{"_index":1174,"title":{},"body":{"index.html":{}}}],["void",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":100,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather(item",{"_index":666,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["weather.component.html",{"_index":981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":980,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather",{"_index":991,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.component",{"_index":992,"title":{},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["weathercomponent",{"_index":99,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":349,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["weathermodule",{"_index":984,"title":{"modules/WeatherModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules.html":{}}}],["weatherroutes",{"_index":994,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["weatherroutingmodule",{"_index":989,"title":{"modules/WeatherRoutingModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"modules.html":{}}}],["weatherservice",{"_index":440,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weathertext",{"_index":350,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":594,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":418,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":674,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":416,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/WeatherService.html":{}}}],["y",{"_index":414,"title":{},"body":{"components/ContainerComponent.html":{}}}],["yes",{"_index":32,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":881,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":880,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdministrativeArea.html":{"url":"classes/AdministrativeArea.html","title":"class - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                englishType\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                localizedType\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAdministrativeArea)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAdministrativeArea\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorTheme              } from '@constants/color-theme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule          ,\n    BrowserAnimationsModule,\n    HttpClientModule       ,\n    AppRoutingModule       ,\n    ContainerModule.forRoot({\n      appTheme    : ColorTheme.Light,\n      sidenavMode : PanelMode .Push ,\n      sidenavState: PanelState.Hide ,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'weather', loadChildren: () => \"import('./weather/weather.module').then(m => m.WeatherModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'weather' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appTheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorTheme   } from '@constants/color-theme.enum'\nimport { PanelMode    } from '@constants/panel-mode.enum'\nimport { PanelState   } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public appTheme     ?: ColorTheme   ;\n  public sidenavMode  ?: PanelMode    ;\n  public sidenavState ?: PanelState   ;\n  public userLocation ?: IGeoPosition ;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appTheme\n                            \n                            \n                                    Public\n                                    Readonly\n                                appThemeChange$\n                            \n                            \n                                    Public\n                                appThemeState$\n                            \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                    Readonly\n                                loadingChange$\n                            \n                            \n                                    Public\n                                loadingState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                locationChange$\n                            \n                            \n                                    Public\n                                locationState$\n                            \n                            \n                                    Private\n                                setObservables\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(original: T, updated: T, subscriber: Subscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updated\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscriber\n                                    \n                                            Subscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            appThemeChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appThemeState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            loadingChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locationState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable      , Subject, Subscriber } from 'rxjs'\nimport { Injectable                            } from '@angular/core'\nimport { ColorTheme                            } from '@constants/color-theme.enum'\nimport { PanelMode                             } from '@constants/panel-mode.enum'\nimport { PanelState                            } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION                      } from '@env/environment'\nimport { AppSettings                           } from '@helpers/app-settings'\nimport { IGeoPosition                          } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly appThemeChange$: Subject = new Subject();\n  public readonly loadingChange$ : Subject = new Subject();\n  public readonly locationChange$: Subject = new Subject();\n  public appThemeState$: Observable;\n  public loadingState$ : Observable;\n  public locationState$: Observable;\n  public appTheme    : ColorTheme    ;\n  public isLoading   : boolean = true;\n  public sidenavMode : PanelMode     ;\n  public sidenavState: PanelState    ;\n  public userLocation: IGeoPosition  ;\n  constructor(private args?: AppSettings) {\n    this.appTheme     = this.args?.appTheme    ;\n    this.sidenavMode  = this.args?.sidenavMode ;\n    this.sidenavState = this.args?.sidenavState;\n    this.setObservables ();\n    this.getUserLocation();\n  }\n  private getUserLocation = () => navigator.geolocation\n    .getCurrentPosition(\n      (success) => this.locationChange$.next({ Latitude: success.coords.latitude, Longitude: success.coords.longitude }),\n      (failure) => this.locationChange$.next(DEFAULT_LOCATION));\n\n  private setObservables = () => {\n    this.loadingState$ = new Observable(subscriber => {\n      this.loadingChange$.subscribe({\n        next: value => this.updateValue(this.isLoading, value, subscriber)\n      })\n    });\n\n    this.locationState$ = new Observable(subscriber => {\n      this.locationChange$.subscribe({\n        next: value => this.updateValue(this.userLocation, value, subscriber)\n      })\n    });\n\n    this.appThemeState$ = new Observable(subscriber => {\n      this.appThemeChange$.subscribe({\n        next: value => this.updateValue(this.appTheme, value, subscriber)\n      })\n    });\n  }\n\n  private updateValue(original: T, updated: T, subscriber: Subscriber) {\n    if (original != updated) {\n      original = updated;\n      subscriber.next(updated);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoComplete.html":{"url":"classes/AutoComplete.html","title":"class - AutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                flagIcon\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                version\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAutoComplete)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAutoComplete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel                               } from '@models/base-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base-model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { toCamelCase } from '@helpers/formatters';\nimport { Guid } from 'guid-ts'\n\nexport abstract class BaseModel {\n  public created: Date;\n  public id: Guid | string;\n  public name: string;\n  public type: string;\n  constructor(args?: any) {\n    Object.keys(args)?.forEach(key => this[toCamelCase(key)] = this[toCamelCase(key)] ?? args[key]);\n    this.created = new Date();\n    this.id = this.id ?? Guid.newGuid();\n    this.type = this.type ?? this.constructor.name;\n    console.log(this);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheResult.html":{"url":"interfaces/CacheResult.html","title":"interface - CacheResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/cache-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        lastRead\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\n\nexport interface CacheResult {\n  lastRead?: number           ;\n  response?: HttpResponse;\n  url     ?: string           ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cached\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxAge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cached\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8.64e+7\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conditions.html":{"url":"classes/Conditions.html","title":"class - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading$\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router, message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MessageService             } from 'primeng/api'\nimport { Observable                 } from 'rxjs'\nimport { Component         , OnInit } from '@angular/core'\nimport { NavigationEnd     , Router } from '@angular/router'\nimport { PanelState                 } from '@constants/panel-state.enum'\nimport { ApplicationService         } from '@services/application.service'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string             ;\n  public isLoading$  : Observable;\n  public sidenavState: PanelState         ;\n  constructor(private application: ApplicationService, private router: Router, private message: MessageService) {\n    this.isLoading$   = this.application.loadingState$;\n    this.sidenavState = this.application.sidenavState ;\n    this.router.events.subscribe({\n      next: event => this.currentRoute = !(event instanceof NavigationEnd)\n        ? this.currentRoute\n        : `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n  }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ExceptionInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MessageService                              } from 'primeng/api'\nimport { CommonModule                                } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule    } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule            } from '@angular/core'\nimport { ExceptionInterceptor                        } from '@common/interceptors/exception-interceptor'\nimport { RequestInterceptor                          } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                         } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                            } from '@common/resolvers/location.resolver'\nimport { ContainerRoutingModule                      } from '@container/container-routing.module'\nimport { ContainerComponent                          } from '@container/container.component'\nimport { FeatureModule                               } from '@container/feature.module'\nimport { HeaderModule                                } from '@container/header/header.module'\nimport { SidenavModule                               } from '@container/sidenav/sidenav.module'\nimport { AppSettings                                 } from '@helpers/app-settings'\nimport { SearchModule                                } from '@search/search.module'\nimport { ApplicationService                          } from '@services/application.service'\nimport { RequestCache          , CacheService } from '@services/cache.service'\nimport { WeatherService                              } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule, SearchModule, FeatureModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: RequestCache, useClass: CacheService },\n    { provide: HTTP_INTERCEPTORS, useClass: ExceptionInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor  , multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor , multi: true },\n    MessageService,\n    ApplicationService,\n    LocationResolver,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Day.html":{"url":"classes/Day.html","title":"class - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elevation.html":{"url":"classes/Elevation.html","title":"class - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IElevation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IElevation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ExceptionInterceptor.html":{"url":"interceptors/ExceptionInterceptor.html","title":"interceptor - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                failCount\n                            \n                            \n                                    Private\n                                failCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/exception-interceptor.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/exception-interceptor.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            failCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/common/interceptors/exception-interceptor.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            failCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : ExceptionInterceptor.failCount\n                        \n                    \n                        \n                            \n                                    Defined in src/common/interceptors/exception-interceptor.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { MessageService } from 'primeng/api'\nimport { Observable } from 'rxjs'\nimport { catchError, retry, tap } from 'rxjs/operators'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { decodeBase64 } from '@helpers/formatters'\n\nexport const stored = {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\nexport const errors = {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n@Injectable()\nexport class ExceptionInterceptor implements HttpInterceptor {\n  static failCount: number = 0;\n  private failCount: number = ExceptionInterceptor.failCount;\n  constructor(private message: MessageService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      retry(1),\n      catchError((error: HttpErrorResponse) => {\n        this.message.add({ closable: true, detail: errors[error.status], severity: 'error', summary: `${error.status} Error` });\n        if (req.url.includes(providers.weather.baseUrl) && error.status == 401) {\n          this.failCount++;\n          if (this.failCount == 1) {\n            return next\n              .handle(req.clone({\n                params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n              }))\n              .pipe(tap(() => ExceptionInterceptor.failCount = 0));\n          }\n        }\n        this.message.add({ closable: true, detail: 'Retrieving static data from local JSON', severity: 'info', summary: 'Static Response' });\n        return next.handle(req.clone({ url: stored[Object.keys(stored).find(key => req.url.includes(key))] }));\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Forecast.html":{"url":"classes/Forecast.html","title":"class - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Headline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_exports\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_ForecastModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nForecastModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nForecastModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nForecastModule -->\n\nFeatureModule->ForecastModule\n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nForecastModule -->\n\nSearchModule->ForecastModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            ForecastRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoPosition.html":{"url":"classes/GeoPosition.html","title":"class - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elevation\n                            \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IGeoPosition)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IGeoPosition\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elevation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Elevation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavChanged: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav = () => this.sidenavChanged.emit();\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Headline.html":{"url":"classes/Headline.html","title":"class - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                effectiveDate\n                            \n                            \n                                    Public\n                                effectiveEpochDate\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                endEpochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                severity\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IHeadline)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IHeadline\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        CountryId\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        EnglishType\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        Level\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        LocalizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CountryId\n                                    \n                                \n                                \n                                    \n                                        CountryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishType\n                                    \n                                \n                                \n                                    \n                                        EnglishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedType\n                                    \n                                \n                                \n                                    \n                                        LocalizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoComplete.html":{"url":"interfaces/IAutoComplete.html","title":"interface - IAutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel                               } from '@models/base-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EpochTime\n                                \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        IsDayTime\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        LocalObservationDateTime\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                                \n                                            Optional\n                                        WeatherIcon\n                                \n                                \n                                            Optional\n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        Icon\n                                \n                                \n                                            Optional\n                                        IconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconPhrase\n                                    \n                                \n                                \n                                    \n                                        IconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DailyForecasts\n                                \n                                \n                                            Optional\n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Elevation\n                                \n                                \n                                            Optional\n                                        Latitude\n                                \n                                \n                                            Optional\n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Elevation\n                                    \n                                \n                                \n                                    \n                                        Elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Category\n                                \n                                \n                                            Optional\n                                        EffectiveDate\n                                \n                                \n                                            Optional\n                                        EffectiveEpochDate\n                                \n                                \n                                            Optional\n                                        EndDate\n                                \n                                \n                                            Optional\n                                        EndEpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Severity\n                                \n                                \n                                            Optional\n                                        Text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndDate\n                                    \n                                \n                                \n                                    \n                                        EndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndEpochDate\n                                    \n                                \n                                \n                                    \n                                        EndEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Severity\n                                    \n                                \n                                \n                                    \n                                        Severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        AdministrativeArea\n                                \n                                \n                                            Optional\n                                        Country\n                                \n                                \n                                            Optional\n                                        DataSets\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        GeoPosition\n                                \n                                \n                                            Optional\n                                        IsAlias\n                                \n                                \n                                            Optional\n                                        Key\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        Rank\n                                \n                                \n                                            Optional\n                                        Region\n                                \n                                \n                                            Optional\n                                        TimeZone\n                                \n                                \n                                            Optional\n                                        Type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DataSets\n                                    \n                                \n                                \n                                    \n                                        DataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GeoPosition\n                                    \n                                \n                                \n                                    \n                                        GeoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsAlias\n                                    \n                                \n                                \n                                    \n                                        IsAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                    \n                                \n                                \n                                    \n                                        Region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TimeZone\n                                    \n                                \n                                \n                                    \n                                        TimeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuEvent.html":{"url":"interfaces/IMenuEvent.html","title":"interface - IMenuEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/menu-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                                \n                                        originalEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     PointerEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PointerEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MenuItem } from 'primeng/api';\n\nexport interface IMenuEvent {\n  item         : MenuItem    ;\n  originalEvent: PointerEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Unit\n                                \n                                \n                                            Optional\n                                        UnitType\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Unit\n                                    \n                                \n                                \n                                    \n                                        Unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UnitType\n                                    \n                                \n                                \n                                    \n                                        UnitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Maximum\n                                \n                                \n                                            Optional\n                                        Minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Maximum\n                                    \n                                \n                                \n                                    \n                                        Maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Minimum\n                                    \n                                \n                                \n                                    \n                                        Minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Code\n                                \n                                \n                                            Optional\n                                        GmtOffset\n                                \n                                \n                                            Optional\n                                        IsDaylightSaving\n                                \n                                \n                                            Optional\n                                        Name\n                                \n                                \n                                            Optional\n                                        NextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Code\n                                    \n                                \n                                \n                                    \n                                        Code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GmtOffset\n                                    \n                                \n                                \n                                    \n                                        GmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        IsDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        NextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Date\n                                \n                                \n                                            Optional\n                                        Day\n                                \n                                \n                                            Optional\n                                        EpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Night\n                                \n                                \n                                            Optional\n                                        Sources\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Sources\n                                    \n                                \n                                \n                                    \n                                        Sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Forecast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable, of } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    return of(null);\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                unitType\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IMetric)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IMetric\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { delay, tap } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { decodeBase64 } from '@helpers/formatters'\nimport { ApplicationService } from '@services/application.service'\nimport { RequestCache } from '@services/cache.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService, private cache: RequestCache) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.application.loadingChange$.next(true);\n    req = req.url.includes(providers.weather.baseUrl)\n      ? req.clone({\n        params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n      }) : req;\n    const cachedResponse = this.cache.get(req);\n    return (!cachedResponse ? next.handle(req) : of(cachedResponse))\n      .pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            this.cache.put(req, event);\n            this.application.loadingChange$.next(false);\n          }\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coordinatesForm\n                            \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                currentOption\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                searchOptions\n                            \n                            \n                                    Public\n                                searchPattern\n                            \n                            \n                                    Private\n                                    Optional\n                                searchSubject$\n                            \n                            \n                                    Private\n                                setOptions\n                            \n                            \n                                    Public\n                                    Optional\n                                suggestions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            coordinatesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[a-zA-Z ]/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            searchSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            suggestions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable, Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component, OnInit } from '@angular/core'\nimport { ISearchEvent } from '@helpers/search-event'\nimport { AutoComplete } from '@models/autoComplete-model'\nimport { WeatherService } from '@services/weather.service'\nimport { MenuItem } from 'primeng/api'\nimport { IMenuEvent } from '@helpers/menu-event'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  private searchSubject$?: Subject;\n  public coordinatesForm: FormGroup;\n  public searchOptions: MenuItem[];\n  public currentOption: MenuItem;\n  public searchPattern: RegExp = /[a-zA-Z ]/;\n  public suggestions$?: Observable;\n  constructor(private weather: WeatherService) { }\n  ngOnInit() {\n    this.createForm();\n    this.setOptions();\n    this.currentOption = this.searchOptions[1];\n    this.searchSubject$ = new Subject();\n    this.suggestions$ = this.searchSubject$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text.toLowerCase())));\n  }\n  public onSearch = (event: ISearchEvent) =>\n    event.query ? this.searchSubject$.next(event.query) : {};\n  public onSelect = (value: AutoComplete) => {\n    // this.weather.getConditions(value);\n  };\n  public onSubmit = ($event) => { }\n  public createForm = () => this.coordinatesForm =\n    new FormGroup({\n      lat: new FormControl(undefined, [Validators.required, Validators.max(90.0000000), Validators.min(-90.0000000)]),\n      lng: new FormControl(undefined, [Validators.required, Validators.max(180.0000000), Validators.min(-180.0000000)]),\n    });\n  private setOptions = () => {\n    this.searchOptions = [\n      { label: 'Location', icon: 'fa fa-map-marker', command: (e: IMenuEvent) => this.currentOption = e.item },\n      {\n        label: 'Coordinates',\n        icon: 'fa fa-compass',\n        command: (e: IMenuEvent) => {\n          this.currentOption = e.item;\n          this.createForm();\n        }\n      },\n    ];\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Search\n    \n    \n      \n    \n  \n  \n    \n      Location\n      \n        \n          \n            \n            {{result.toString()}}\n          \n        \n      \n    \n    \n      \n        Latitude\n        \n        \n        \n      \n      \n        Longitude\n        \n        \n        \n      \n      \n        \n          \n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                @import \"common.scss\";\n\n.app-search {\n  border-radius: 25px;\n  padding: 35px;\n  margin-bottom: 15px;\n  @extend .shadow;\n  .search-header {\n    padding: 5px;\n    align-items: center;\n    color: $font-color;\n    display: flex;\n    font-size: 32px;\n    justify-content: space-between;\n    .header-title {\n      display: flex;\n      align-items: center;\n      padding-right: 10px;\n      .fa {\n        font-size: smaller;\n        margin-right: 10px;\n      }\n    }\n    .search-options {\n      padding-left: 10px;\n      flex: auto;\n    }\n  }\n  .search-form {\n    padding: 10px 0px;\n    .form-autocomplete {\n      display: flex;\n      flex-direction: column;\n      padding: 0px 2.5px;\n    }\n    .form-coordinates {\n      margin-bottom: 0px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n}\nlabel {\n  margin: 0px;\n  color: $font-color;\n}\ninput:focus {\n  @extend .shadow;\n}\n.form-control.ng-invalid:not(.ng-pristine) {\n  border: 2px solid red;\n  color: red;\n}\n.form-control.ng-valid:not(.ng-pristine) {\n  border: 2px solid $teal;\n  color: $teal;\n}\n.input-col {\n  flex: auto;\n  padding: 0px 2.5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search                                Location                                                {{result.toString()}}                                              Latitude                                            Longitude                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SearchModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FeatureModule, SearchRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component         , Input, OnInit } from '@angular/core'\nimport { PanelState                        } from '@constants/panel-state.enum'\nimport { ApplicationService                } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_imports\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Temperature.html":{"url":"classes/Temperature.html","title":"class - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                maximum\n                            \n                            \n                                    Public\n                                minimum\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITemperature)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITemperature\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maximum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minimum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeZone.html":{"url":"classes/TimeZone.html","title":"class - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                gmtOffset\n                            \n                            \n                                    Public\n                                isDaylightSaving\n                            \n                            \n                                    Public\n                                nextOffsetChange\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITimeZone)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITimeZone\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gmtOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDaylightSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nextOffsetChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { WeatherRoutingModule } from '@weather/weather-routing.module'\nimport { WeatherComponent     } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, WeatherRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherRoutingModule.html":{"url":"modules/WeatherRoutingModule.html","title":"module - WeatherRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                 } from '@angular/core'\nimport { RouterModule    , Routes } from '@angular/router'\nimport { WeatherComponent         } from '@weather/weather.component'\n\nexport const WeatherRoutes: Routes = [\n  { path: '', component: WeatherComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(WeatherRoutes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                createContext\n                            \n                            \n                                    Public\n                                getConditions\n                            \n                            \n                                    Private\n                                getContext\n                            \n                            \n                                    Public\n                                getForecast\n                            \n                            \n                                    Public\n                                getGeoPosition\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Private\n                                setContext\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGeoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable  , of            } from 'rxjs'\nimport { map                         } from 'rxjs/operators'\nimport { HttpClient                  } from '@angular/common/http'\nimport { Injectable                  } from '@angular/core'\nimport { providers                   } from '@env/environment'\nimport { AppSettings                 } from '@helpers/app-settings'\nimport { AutoComplete, IAutoComplete } from '@models/autoComplete-model'\nimport { BaseModel                   } from '@models/base-model'\nimport { Conditions  , IConditions   } from '@models/conditions-model'\nimport { Forecast    , IForecast     } from '@models/forecast-model'\nimport { ILocation   , Location      } from '@models/location-model'\n\n@Injectable()\nexport class WeatherService {\n  private readonly context: Map = new Map();\n  constructor(private http: HttpClient, private args?: AppSettings) { this.createContext(); }\n\n  private setContext = (dataSet: string, value: any): any | null => {\n    !this.getContext(null, dataSet, x => x == value)\n      ? this.context.get(dataSet).unshift(value) : {};\n    return value;\n  }\n  private getContext = (key?: string, dataSet: string = 'Location', predicate?: (value: any) => unknown): any | null =>\n    this.context.get(dataSet).some(predicate ?? ((item: Location) => item.key == key))\n      ? this.context.get(dataSet).slice().find((item: Location) => item.key == key) : null;\n\n  public autoComplete = (search: string): Observable => this.http\n    .get(providers.weather.autocomplete, { params: { q: search } })\n    .pipe(map(result => result.map(item => new AutoComplete(item))));\n\n  public getConditions = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.conditions}/${locationKey}`)\n    .pipe(map(result => this.setContext('Conditions', new Conditions(result))));\n\n  public getForecast = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.forecasts}/${locationKey}`)\n    .pipe(map(result => new Forecast(result)));\n\n  public getGeoPosition = (lat: number, lng: number): Observable => this.http\n    .get(providers.weather.geoposition, { params: { q: `${lat},${lng}` } })\n    .pipe(map(result => this.setContext('Location', new Location(result))));\n\n  public getLocation = (key: string): Observable =>\n    this.getContext(key)\n      ? of(this.getContext(key))\n      : this.http\n        .get(`${providers.weather.locations}/${key}`)\n        .pipe(map(result => this.setContext('Location', new Location(result))));\n\n  private createContext = () => this.context\n    .set('Conditions', new Array())\n    .set('Forecast'  , new Array())\n    .set('Location'  , new Array());\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            encodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            toCamelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            toTitleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/menu-event.ts\n            \n            interface\n            IMenuEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            interceptor\n            ExceptionInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            stored\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            class\n            AdministrativeArea\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            class\n            AutoComplete\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            IAutoComplete\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/cache-model.ts\n            \n            interface\n            CacheResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            Conditions\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            Day\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            class\n            Elevation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            Forecast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            class\n            GeoPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            class\n            Headline\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            class\n            Temperature\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            class\n            TimeZone\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            animate.css : ^4.1.1\n        \n            bootstrap : ^4.6.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorTheme   (src/.../color-theme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorTheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            decodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            encodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errors   (src/.../exception-interceptor.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            stored   (src/.../exception-interceptor.ts)\n                        \n                        \n                            toCamelCase   (src/.../formatters.ts)\n                        \n                        \n                            toTitleCase   (src/.../formatters.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule, SearchModule, FeatureModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/common/helpers/formatters.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => atob(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => btoa(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toCamelCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string => original[0].toLowerCase() +\n  (original.substring(1).length \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTitleCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original.split(' ')\n    .map(item => item[0].toUpperCase() + item.substring(1))\n    .join(' ')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                              ,\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl     : 'https://dataservice.accuweather.com'                                       ,\n    conditions  : 'https://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts   : 'https://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons'                           ,\n    locations   : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather     : {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete',\n    baseUrl     : 'https://dataservice.accuweather.com',\n    conditions  : 'https://dataservice.accuweather.comcurrentconditions/v1',\n    forecasts   : 'https://dataservice.accuweather.comforecasts/v1/daily/5day',\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons',\n    locations   : 'https://dataservice.accuweather.com/locations/v1',\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/interceptors/exception-interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stored\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
