var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractModel.html",[0,0.09,1,0.818]],["body/classes/AbstractModel.html",[0,0.103,1,1.226,2,1.525,3,0.143,4,0.125,5,0.125,6,6.451,7,0.971,8,0.359,9,0.683,10,1.107,11,2.619,12,2.414,13,1.345,14,0.652,15,0.971,16,1.226,17,1.451,18,5.885,19,1.008,20,0.015,21,0.546,22,1.924,23,1.525,24,2.147,25,4.488,26,2.668,27,1.378,28,4.488,29,4.488,30,0.211,31,2.987,32,2.987,33,3.898,34,0.143,35,3.509,36,4.488,37,5.885,38,4.488,39,4.488,40,1.171,41,5.885,42,4.488,43,5.885,44,4.488,45,0.008,46,0.01,47,0.008]],["title/classes/AdministrativeArea.html",[0,0.09,48,2.174]],["body/classes/AdministrativeArea.html",[0,0.089,1,1.519,2,1.317,3,0.124,4,0.108,5,0.108,7,0.839,8,0.31,9,0.619,10,1.137,11,2.128,12,2.242,13,1.177,14,0.664,15,0.839,16,1.111,17,1.544,19,0.871,20,0.014,21,0.472,22,1.267,23,1.317,24,1.267,26,1.484,27,1.491,30,0.139,34,0.17,45,0.007,46,0.009,47,0.007,48,2.953,49,5.808,50,1.291,51,5.705,52,4.09,53,5.705,54,5.705,55,3.636,56,5.705,57,3.636,58,3.55,59,3.032,60,3.032,61,3.032,62,1.651,63,2.581,64,2.781,65,2.733,66,1.613,67,1.613,68,1.613,69,1.613,70,0.904,71,0.665,72,0.329,73,0.939]],["title/components/AppComponent.html",[74,1.236,75,1.784]],["body/components/AppComponent.html",[0,0.104,3,0.145,4,0.127,5,0.127,8,0.363,9,0.689,13,1.145,14,0.386,15,1.429,17,1.19,20,0.014,27,0.843,30,0.163,34,0.145,45,0.008,46,0.01,47,0.008,74,2.079,75,3.182,76,2.181,77,2.515,78,2.515,79,2.515,80,2.515,81,3.946,82,2.515,83,4.348,84,4.123,85,5.933,86,3.284,87,6.607,88,3.284,89,5.933,90,5.738,91,5.933,92,1.812,93,1.605,94,5.153,95,1.021,96,1.739,97,3.284,98,3.284,99,2.515,100,3.877,101,2.515,102,2.515,103,1.605,104,2.515,105,1.974,106,2.515,107,2.064,108,2.515,109,1.974,110,2.515,111,2.064,112,2.515,113,2.064,114,2.515,115,1.974,116,1.605,117,2.515,118,2.515]],["title/modules/AppModule.html",[119,1.19,120,2.818]],["body/modules/AppModule.html",[0,0.098,3,0.136,4,0.119,5,0.119,20,0.015,30,0.279,34,0.136,45,0.008,46,0.01,47,0.008,75,3.583,95,0.959,96,1.633,119,1.293,120,5.618,121,1.45,122,2.13,123,3.546,124,3.362,125,1.934,126,1.702,127,3.706,128,3.706,129,3.706,130,3.706,131,4.874,132,4.738,133,3.151,134,2.362,135,1.938,136,4.267,137,2.368,138,4.451,139,2.13,140,2.368,141,5.692,142,4.944,143,3.337,144,5.692,145,4.267,146,4.267,147,2.657,148,4.267,149,2.84,150,3.061,151,3.061,152,4.083,153,3.544,154,3.337,155,2.499,156,2.657,157,4.267,158,4.267,159,3.706,160,4.267,161,3.706,162,3.706,163,2.84,164,3.706]],["title/modules/AppRoutingModule.html",[119,1.19,131,2.615]],["body/modules/AppRoutingModule.html",[0,0.119,3,0.166,4,0.145,5,0.145,20,0.015,30,0.232,34,0.206,45,0.009,46,0.011,47,0.009,95,1.169,116,2.286,121,1.769,126,2.076,131,4.306,137,2.165,140,2.692,165,5.205,166,3.24,167,4.028,168,3.396,169,2.476,170,1.702,171,5.205,172,5.049,173,3.733,174,6.47,175,5.205,176,5.205,177,5.205,178,5.205,179,5.205,180,5.205,181,5.205,182,5.205,183,5.205]],["title/classes/AppSettings.html",[0,0.09,184,2.446]],["body/classes/AppSettings.html",[0,0.105,2,1.563,3,0.147,4,0.128,5,0.128,8,0.368,9,0.694,10,1.111,14,0.597,15,1.438,17,1.463,20,0.015,21,0.939,30,0.253,34,0.147,45,0.008,46,0.011,47,0.008,71,0.789,149,4.424,150,3.3,151,3.3,152,4.767,153,3.724,154,3.598,155,3.893,156,2.864,159,5.773,161,5.773,163,4.424,184,3.724,185,6.495,186,3.996,187,5.773,188,5.982,189,3.893,190,4.601,191,4.601,192,4.601,193,3.3]],["title/injectables/ApplicationService.html",[194,1.869,195,2.062]],["body/injectables/ApplicationService.html",[0,0.067,3,0.093,4,0.082,5,0.082,8,0.234,9,0.507,10,1.119,13,0.565,14,0.609,15,0.634,16,0.61,17,1.478,19,0.658,20,0.015,21,0.357,22,1.427,23,0.996,30,0.247,34,0.093,40,1.75,45,0.005,46,0.008,47,0.005,71,0.502,92,1.741,93,2.436,95,0.658,149,3.471,150,2.102,151,2.102,152,3.74,153,2.717,154,2.291,155,3.055,156,1.824,163,3.471,184,3.597,193,2.102,194,2.076,195,2.291,196,2.102,197,2.545,198,5.626,199,5.215,200,5.626,201,5.215,202,5.215,203,4.529,204,2.603,205,5.215,206,5.215,207,4.364,208,4.127,209,2.93,210,5.626,211,2.93,212,2.93,213,2.93,214,2.887,215,2.93,216,2.93,217,2.291,218,2.93,219,2.93,220,2.93,221,2.93,222,2.93,223,6.178,224,1.622,225,2.291,226,1.394,227,2.291,228,2.102,229,1.463,230,2.93,231,2.93,232,2.545,233,2.93,234,2.93,235,2.93,236,2.93,237,2.93,238,2.93,239,2.93,240,2.93,241,4.364,242,2.93,243,2.93,244,1.95,245,2.93,246,4.364,247,4.364,248,2.93,249,2.93,250,2.545,251,2.93,252,2.905,253,4.364,254,4.364,255,2.545,256,2.93,257,4.364]],["title/classes/AutoComplete.html",[0,0.09,258,2.174]],["body/classes/AutoComplete.html",[0,0.076,1,1.45,2,1.12,3,0.105,4,0.092,5,0.092,7,0.713,8,0.264,9,0.552,10,1.134,11,1.897,12,1.749,13,1.077,14,0.651,15,0.713,16,0.991,17,1.527,19,0.74,20,0.015,21,0.401,22,1.077,23,1.12,24,1.077,26,1.262,27,1.4,30,0.2,34,0.152,40,1.241,45,0.006,46,0.008,47,0.006,48,4.019,50,1.152,55,3.383,57,3.09,58,2.193,61,2.577,62,1.828,63,2.193,64,2.364,65,2.543,66,1.371,67,1.371,68,1.371,69,1.371,70,0.769,71,0.816,72,0.28,73,0.798,92,1.897,93,1.681,125,1.12,226,1.568,258,2.633,259,5.764,260,3.208,261,4.848,262,3.383,263,4.384,264,4.848,265,4.779,266,4.068,267,3.412,268,2.862,269,2.364,270,2.577,271,2.364,272,2.364,273,2.364,274,2.364,275,2.862,276,2.862,277,2.862,278,2.862,279,2.862]],["title/interfaces/CacheResult.html",[72,0.333,280,2.615]],["body/interfaces/CacheResult.html",[3,0.171,4,0.15,5,0.15,7,1.163,8,0.43,9,0.766,14,0.606,20,0.014,21,0.947,27,1.325,30,0.193,34,0.171,45,0.01,46,0.012,47,0.01,62,1.933,72,0.456,139,2.682,280,4.392,281,1.826,282,4.667,283,5.823,284,5.823,285,5.341,286,5.341]],["title/injectables/CacheService.html",[194,1.869,287,2.615]],["body/injectables/CacheService.html",[0,0.121,3,0.122,4,0.107,5,0.107,8,0.307,9,0.615,10,0.955,13,1.022,14,0.515,15,1.312,17,1.376,19,1.19,20,0.015,21,0.644,30,0.218,34,0.169,35,4.742,40,1.381,45,0.007,46,0.009,47,0.007,62,1.039,71,0.658,92,2.112,93,1.871,95,0.862,139,1.915,170,2.138,194,2.519,196,2.752,204,3.541,280,2.553,283,3,284,5.365,285,2.752,286,5.314,287,3.525,288,3,289,6.162,290,5.267,291,5.267,292,2.301,293,4.599,294,5.296,295,5.267,296,5.314,297,3.836,298,3.798,299,2.301,300,4.69,301,4.599,302,3.836,303,3.183,304,3.297,305,4.599,306,3.836,307,3.332,308,3.297,309,1.596,310,2.752,311,3,312,3.332,313,3.332,314,3.332,315,4.599,316,4.599,317,3.332,318,1.825,319,3.332,320,4.599,321,3.332,322,4.599,323,3.332,324,3.332,325,3.332,326,3.332]],["title/classes/Conditions.html",[0,0.09,327,2.062]],["body/classes/Conditions.html",[0,0.067,1,1.398,2,0.997,3,0.094,4,0.082,5,0.082,7,0.635,8,0.235,9,0.507,10,1.137,11,1.743,12,1.606,13,1.007,14,0.648,15,0.635,16,0.91,17,1.531,19,0.659,20,0.015,21,0.357,22,0.959,23,0.997,24,1.89,26,1.123,27,1.383,30,0.208,34,0.139,40,0.766,45,0.008,46,0.008,47,0.005,50,1.058,58,1.953,62,1.755,65,2.406,66,1.221,67,1.221,68,1.221,69,1.221,70,0.685,71,0.749,72,0.249,73,0.711,92,1.743,93,1.544,125,0.997,170,0.959,217,3.402,226,1.396,267,2.105,269,2.105,270,3.417,304,1.827,318,1.396,327,2.294,328,5.826,329,5.022,330,4.534,331,3.744,332,4.148,333,5.022,334,3.6,335,5.022,336,3.6,337,3.716,338,5.022,339,5.022,340,3.387,341,2.549,342,2.549,343,2.295,344,2.295,345,2.295,346,2.935,347,2.935,348,2.105,349,2.549,350,2.419,351,2.105,352,2.105,353,2.105,354,2.549,355,2.549,356,2.549,357,2.549,358,1.541,359,1.953,360,2.549]],["title/components/ContainerComponent.html",[74,1.236,103,1.388]],["body/components/ContainerComponent.html",[0,0.063,3,0.087,4,0.076,5,0.076,8,0.219,9,0.482,10,1.043,13,0.966,14,0.509,15,0.593,17,1.316,19,0.616,20,0.015,21,0.334,27,0.77,30,0.235,34,0.087,45,0.005,46,0.007,47,0.005,74,1.576,75,1.245,76,1.526,77,1.517,78,1.517,79,1.517,80,1.517,82,1.517,83,3.904,84,3.762,86,2.298,88,2.298,92,1.093,93,0.968,95,0.616,96,1.049,97,2.298,98,2.298,99,1.517,100,3.093,101,1.517,102,1.517,103,1.974,104,1.517,105,1.191,106,1.517,107,1.245,108,1.517,109,1.191,110,1.517,111,1.245,112,1.517,113,1.245,114,1.517,115,1.191,116,1.467,117,1.517,118,1.517,149,1.824,150,1.966,151,1.966,153,1.706,155,2.934,156,1.706,163,3.334,164,3.605,169,1.304,195,2.933,198,4.351,200,4.351,204,1.368,208,3.516,224,1.517,229,1.368,232,4.351,250,2.381,252,1.824,255,2.381,292,1.803,299,1.191,303,1.439,309,1.727,361,2.381,362,2.934,363,6.317,364,5.01,365,4.151,366,5.01,367,5.01,368,3.273,369,2.143,370,5.699,371,4.151,372,2.977,373,2.741,374,2.741,375,2.741,376,2.741,377,2.741,378,4.151,379,1.824,380,2.741,381,2.741,382,2.741,383,2.741,384,3.246,385,4.151,386,2.381,387,2.741,388,2.741,389,1.824,390,1.966,391,2.381,392,2.741,393,2.741,394,3.593,395,4.351,396,3.246,397,3.246,398,2.381,399,2.381,400,3.334,401,4.847,402,4.306,403,4.351,404,3.917,405,4.939,406,3.917,407,3.917,408,2.143,409,3.605,410,6.004,411,2.977,412,5.588,413,4.351,414,1.966,415,3.334,416,2.741,417,2.381,418,3.605,419,3.605,420,4.853,421,3.593,422,2.143,423,3.605]],["title/modules/ContainerModule.html",[119,1.19,132,2.615]],["body/modules/ContainerModule.html",[0,0.068,3,0.094,4,0.083,5,0.083,13,0.571,14,0.251,17,0.593,19,0.665,20,0.015,21,0.36,22,1.437,23,1.005,30,0.276,34,0.094,45,0.005,46,0.008,47,0.005,76,1.928,95,0.665,96,1.133,103,2.577,119,0.896,121,1.973,122,1.477,123,2.903,124,1.553,125,1.973,126,2.092,132,5.352,133,2.433,134,1.638,135,1.344,137,1.829,138,3.437,139,1.477,140,2.182,147,1.842,170,1.437,184,3.862,195,3.412,227,2.314,228,2.122,287,2.926,292,1.285,299,1.285,308,2.737,318,1.408,379,1.969,424,2.57,425,2.57,426,2.57,427,2.57,428,2.57,429,3.47,430,3.641,431,3.641,432,3.641,433,4.327,434,4.327,435,4.327,436,3.412,437,2.314,438,4.396,439,2.959,440,4.396,441,2.959,442,5.245,443,4.396,444,2.122,445,2.575,446,1.638,447,5.245,448,2.959,449,3.153,450,2.959,451,2.926,452,2.57,453,2.959,454,2.959,455,1.969,456,2.959,457,2.959,458,2.959,459,2.57,460,1.969,461,5.806,462,5.245,463,4.396,464,3.437,465,2.959]],["title/modules/ContainerRoutingModule.html",[119,1.19,433,2.615]],["body/modules/ContainerRoutingModule.html",[0,0.131,3,0.183,4,0.16,5,0.16,20,0.014,30,0.246,34,0.219,45,0.01,46,0.012,47,0.01,95,1.287,121,1.946,126,2.285,137,2.383,140,2.854,166,3.566,167,4.27,168,3.6,169,2.725,170,1.873,433,4.565,466,5.728,467,5.728,468,5.728]],["title/classes/Country.html",[0,0.09,260,2.062]],["body/classes/Country.html",[0,0.101,1,1.57,2,1.499,3,0.141,4,0.123,5,0.123,7,0.954,8,0.353,9,0.676,10,1.115,11,2.321,12,2.394,13,1.256,14,0.657,15,0.954,16,1.212,17,1.511,19,0.991,20,0.014,21,0.537,22,1.442,23,1.499,24,1.442,26,1.689,27,1.45,30,0.158,34,0.185,45,0.008,46,0.01,47,0.008,50,1.409,52,4.311,55,3.833,65,2.881,66,1.835,67,1.835,68,1.835,69,1.835,70,1.029,71,0.756,72,0.374,73,1.068,260,3.055,469,5.414,470,4.311,471,3.623,472,3.45]],["title/classes/Day.html",[0,0.09,358,2.062]],["body/classes/Day.html",[0,0.092,1,1.532,2,1.361,3,0.128,4,0.112,5,0.112,7,0.866,8,0.32,9,0.633,10,1.126,11,2.176,12,2.005,13,1.197,14,0.651,15,0.866,16,1.136,17,1.522,19,0.9,20,0.015,21,0.487,22,1.309,23,1.361,24,1.309,26,1.533,27,1.334,30,0.196,34,0.174,45,0.007,46,0.01,47,0.007,50,1.32,62,1.679,63,2.666,65,2.77,66,1.666,67,1.666,68,1.666,69,1.666,70,0.934,71,0.687,72,0.34,73,0.97,92,1.597,93,1.415,125,1.361,217,3.255,226,1.905,331,4.448,332,4.776,358,2.863,471,2.493,473,5.621,474,5.207,475,5.783,476,4.146,477,3.912,478,2.493,479,3.478]],["title/classes/Elevation.html",[0,0.09,480,2.446]],["body/classes/Elevation.html",[0,0.098,1,1.558,2,1.453,3,0.136,4,0.119,5,0.119,7,0.925,8,0.342,9,0.662,10,1.111,11,2.274,12,2.096,13,1.237,14,0.653,15,0.925,16,1.188,17,1.5,19,0.961,20,0.015,21,0.52,22,1.398,23,1.453,24,1.398,26,1.637,27,1.19,30,0.205,34,0.182,40,1.487,45,0.008,46,0.01,47,0.008,50,1.38,65,2.846,66,1.78,67,1.78,68,1.78,69,1.78,70,0.998,71,0.978,72,0.363,73,1.036,471,3.549,472,3.344,480,3.549,481,5.348,482,4.906,483,4.259,484,4.258,485,3.55,486,3.068,487,3.068,488,3.068,489,3.068,490,3.068]],["title/interceptors/ExceptionInterceptor.html",[434,2.615,449,2.818]],["body/interceptors/ExceptionInterceptor.html",[0,0.095,3,0.133,4,0.116,5,0.116,8,0.333,13,0.803,14,0.353,17,0.834,19,1.257,20,0.015,21,0.506,30,0.253,34,0.202,45,0.007,46,0.011,47,0.007,95,0.935,125,1.414,139,2.076,170,1.83,194,2.662,208,3.704,224,2.303,226,1.979,252,4.209,285,2.984,292,2.431,296,4.851,298,2.984,299,1.807,309,1.731,318,2.662,434,3.725,491,3.613,492,4.376,493,2.984,494,4.861,495,4.861,496,5.875,497,4.16,498,5.596,499,3.613,500,4.861,501,4.16,502,2.769,503,2.984,504,3.613,505,3.613,506,3.613,507,3.613,508,3.613,509,3.613,510,3.613,511,3.613,512,3.613,513,3.613,514,3.253,515,3.613,516,4.861,517,3.613,518,3.613,519,3.613,520,3.613,521,3.613,522,4.861,523,3.613,524,3.613,525,3.613,526,3.613,527,3.613,528,3.613,529,3.613,530,3.613,531,4.376,532,3.613,533,2.984,534,3.613,535,3.613,536,3.613,537,3.613,538,3.613,539,3.613,540,3.613,541,3.613,542,4.16,543,4.16,544,4.16,545,4.16,546,4.16]],["title/components/FavoritesComponent.html",[74,1.236,105,1.707]],["body/components/FavoritesComponent.html",[0,0.081,3,0.113,4,0.099,5,0.099,8,0.284,9,0.582,10,0.809,13,1.122,14,0.425,15,0.767,17,1.166,19,0.796,20,0.015,21,0.431,30,0.239,34,0.113,40,1.307,45,0.006,46,0.009,47,0.006,71,0.608,74,1.829,75,1.611,76,1.843,77,1.963,78,1.963,79,1.963,80,1.963,82,1.963,83,4.146,84,3.932,86,2.774,88,2.774,92,1.414,93,1.253,95,0.796,96,1.357,97,2.774,98,2.774,99,1.963,100,3.497,101,1.963,102,1.963,103,1.253,104,1.963,105,2.745,106,1.963,107,1.611,108,1.963,109,1.54,110,1.963,111,1.611,112,1.963,113,1.611,114,1.963,115,1.54,116,2.054,117,1.963,118,1.963,173,4.781,229,1.77,292,2.177,299,1.54,303,1.861,309,2.085,362,3.405,368,3.701,389,2.36,390,2.543,394,2.543,402,2.543,411,2.543,414,2.543,415,2.36,436,3.317,460,2.36,547,3.079,548,5.813,549,5.012,550,2.772,551,5.012,552,3.546,553,3.154,554,2.774,555,2.36,556,3.079,557,3.079,558,2.543,559,3.546,560,3.546,561,3.546,562,3.079,563,3.546,564,5.012,565,5.012,566,5.012,567,5.012,568,5.813,569,3.079,570,2.772,571,3.546,572,3.546,573,3.546,574,3.079,575,4.17,576,2.772,577,3.546,578,3.079,579,3.546,580,3.546,581,3.546,582,3.079]],["title/modules/FavoritesModule.html",[119,1.19,583,2.818]],["body/modules/FavoritesModule.html",[0,0.096,3,0.133,4,0.117,5,0.117,20,0.015,30,0.243,34,0.133,45,0.007,46,0.01,47,0.007,76,2.33,95,0.939,96,1.6,103,2.706,105,2.439,119,1.266,121,2.303,122,2.086,123,3.509,124,2.194,125,1.907,126,2.528,133,3.107,134,2.313,135,1.898,137,2.335,140,2.335,147,2.602,170,1.835,429,3.643,430,3.822,431,3.822,432,3.822,445,3.288,446,2.313,583,5.839,584,3.63,585,3.63,586,4.179,587,4.179,588,4.845,589,3.268,590,4.179,591,3.63]],["title/modules/FavoritesRoutingModule.html",[119,1.19,588,2.615]],["body/modules/FavoritesRoutingModule.html",[0,0.125,3,0.174,4,0.153,5,0.153,20,0.015,30,0.258,34,0.213,45,0.01,46,0.012,47,0.01,74,1.721,95,1.229,105,2.898,121,1.859,126,2.182,137,2.276,140,2.775,166,3.406,167,4.153,168,3.502,169,2.602,170,1.788,172,3.923,588,4.44,591,4.751,592,5.47,593,5.47,594,4.277,595,5.47]],["title/modules/FeatureModule.html",[119,1.19,429,1.869]],["body/modules/FeatureModule.html",[0,0.1,3,0.139,4,0.121,5,0.121,20,0.015,30,0.29,34,0.139,45,0.008,46,0.01,47,0.008,95,0.977,121,1.478,126,1.735,137,1.809,140,2.398,229,2.171,429,2.742,444,3.119,445,3.376,446,2.407,464,3.4,596,4.349,597,6.466,598,5.764,599,4.349,600,5.764,601,4.349,602,5.764,603,4.349,604,5.764,605,4.349,606,5.764,607,4.349,608,5.764,609,4.349,610,5.764,611,4.349,612,5.764,613,4.349,614,5.764,615,4.349,616,5.764,617,4.349,618,5.006,619,3.777,620,5.764,621,4.349,622,5.764,623,4.349,624,5.764,625,4.349,626,4.349]],["title/classes/Forecast.html",[0,0.09,627,2.174]],["body/classes/Forecast.html",[0,0.094,1,1.541,2,1.391,3,0.13,4,0.114,5,0.114,7,0.886,8,0.328,9,0.643,10,1.104,11,2.209,12,2.036,13,1.21,14,0.647,15,0.886,16,1.153,17,1.483,19,0.92,20,0.015,21,0.498,22,1.339,23,1.391,24,1.339,26,1.567,27,1.164,30,0.225,34,0.176,40,1.636,45,0.007,46,0.01,47,0.007,50,1.34,65,2.796,66,1.704,67,1.704,68,1.704,69,1.704,70,0.955,71,1.076,72,0.347,73,0.991,116,2.217,471,2.549,478,3.447,554,2.267,627,3.065,628,5.255,629,4.499,630,4.606,631,3.936,632,3.447,633,3.556,634,3.447,635,3.556,636,3.556,637,3.556,638,3.556,639,3.556,640,3.556,641,3.556,642,3.556]],["title/classes/GeoPosition.html",[0,0.09,214,2.174]],["body/classes/GeoPosition.html",[0,0.094,1,1.543,2,1.398,3,0.131,4,0.115,5,0.115,7,0.89,8,0.329,9,0.645,10,1.119,11,2.215,12,2.042,13,1.213,14,0.655,15,0.89,16,1.157,17,1.51,19,0.924,20,0.015,21,0.501,22,1.345,23,1.398,24,1.345,26,1.574,27,1.167,30,0.199,34,0.177,40,1.073,45,0.007,46,0.01,47,0.007,50,1.345,62,1.962,65,2.801,66,1.711,67,1.711,68,1.711,69,1.711,70,0.959,71,0.952,72,0.349,73,0.996,189,3.944,214,3.074,244,4.481,471,2.561,477,3.983,478,2.561,480,4.611,484,3.458,643,5.498,644,4.829,645,3.572,646,3.572,647,3.572]],["title/components/HeaderComponent.html",[74,1.236,107,1.784]],["body/components/HeaderComponent.html",[0,0.071,3,0.098,4,0.086,5,0.086,8,0.246,9,0.526,10,0.824,13,0.873,14,0.261,15,1.161,17,1.187,20,0.015,30,0.162,34,0.098,40,0.803,45,0.005,46,0.008,47,0.005,74,1.689,75,1.398,76,1.664,77,1.704,78,1.704,79,1.704,80,1.704,82,1.704,83,4.017,84,3.863,86,2.506,88,2.506,92,1.228,93,1.088,95,0.692,96,1.178,97,2.506,98,2.506,99,1.704,100,3.276,101,1.704,102,1.704,103,1.088,104,1.704,105,1.338,106,1.704,107,2.689,108,1.704,109,1.338,110,1.704,111,1.398,112,1.704,113,1.398,114,1.704,115,1.338,116,1.088,117,1.704,118,1.704,135,2.056,173,3.247,292,1.967,299,1.338,303,1.616,309,1.883,362,3.145,368,3.467,389,2.049,390,2.208,391,2.674,394,4.523,395,4.663,396,4.198,397,4.198,398,2.674,399,2.674,400,4.197,401,4.245,402,4.73,404,4.628,405,4.628,406,2.407,407,2.407,408,3.54,414,2.208,415,3.573,417,3.932,421,3.247,422,5.33,569,2.674,575,4.245,576,2.407,648,2.674,649,5.477,650,5.369,651,4.527,652,5.369,653,4.527,654,5.369,655,4.527,656,5.919,657,3.079,658,3.079,659,3.932,660,3.079,661,3.932,662,3.932,663,3.079,664,5.141,665,5.477,666,3.079,667,2.674,668,3.079,669,4.527,670,5.369,671,3.079,672,3.079,673,2.674,674,2.407,675,2.674,676,3.079,677,2.208,678,4.527,679,4.527,680,4.527,681,3.079,682,3.932,683,2.674,684,3.932,685,3.079,686,3.079,687,2.674,688,3.079,689,3.079,690,3.54,691,3.54,692,4.527,693,3.079]],["title/modules/HeaderModule.html",[119,1.19,430,1.961]],["body/modules/HeaderModule.html",[0,0.096,3,0.133,4,0.116,5,0.116,20,0.015,30,0.253,34,0.133,45,0.007,46,0.01,47,0.007,76,2.328,95,0.937,96,1.596,103,2.704,107,2.546,119,1.263,121,2.3,122,2.081,123,3.505,124,2.189,125,1.904,126,2.525,133,3.102,134,2.308,135,1.894,137,2.332,140,2.332,147,2.596,170,1.832,429,3.712,430,4.112,431,3.82,432,3.82,445,3.283,446,2.308,455,2.775,694,3.621,695,4.17,696,3.621,697,4.17,698,4.841,699,3.26,700,4.17,701,4.17]],["title/modules/HeaderRoutingModule.html",[119,1.19,698,2.615]],["body/modules/HeaderRoutingModule.html",[0,0.131,3,0.183,4,0.16,5,0.16,20,0.014,30,0.246,34,0.219,45,0.01,46,0.012,47,0.01,95,1.287,121,1.946,126,2.285,137,2.383,140,2.854,166,3.566,167,4.27,168,3.6,169,2.725,170,1.873,698,4.565,702,5.728,703,5.728,704,5.728]],["title/classes/Headline.html",[0,0.09,630,2.446]],["body/classes/Headline.html",[0,0.078,1,1.466,2,1.162,3,0.109,4,0.095,5,0.095,7,0.74,8,0.274,9,0.567,10,1.141,11,1.948,12,1.796,13,1.099,14,0.663,15,0.74,16,1.017,17,1.548,19,0.768,20,0.015,21,0.416,22,1.118,23,1.162,24,2.301,26,1.309,27,1.442,30,0.123,34,0.156,45,0.006,46,0.009,47,0.006,50,1.183,58,2.276,61,2.674,62,1.983,63,2.276,64,2.452,65,2.586,66,1.423,67,1.423,68,1.423,69,1.423,70,0.797,71,0.586,72,0.29,73,0.828,267,2.452,269,2.452,334,3.87,336,3.87,343,2.674,344,2.674,345,3.819,630,3.041,632,3.87,677,4.458,705,5.881,706,5.399,707,5.399,708,5.399,709,5.399,710,5.399,711,5.399]],["title/interfaces/IAdministrativeArea.html",[57,2.174,72,0.333]],["body/interfaces/IAdministrativeArea.html",[0,0.102,1,1.216,3,0.141,4,0.124,5,0.124,7,0.959,8,0.355,9,0.678,10,1.031,12,2.55,14,0.64,16,0.923,20,0.014,21,0.975,27,1.525,30,0.159,34,0.186,45,0.008,46,0.01,47,0.008,48,2.454,49,3.466,50,1.073,51,6.261,52,4.488,53,6.261,54,6.261,55,3.99,56,6.261,57,3.613,62,1.878,70,1.034,71,0.76,72,0.376,73,1.073,281,1.506]],["title/interfaces/IAutoComplete.html",[72,0.333,266,2.615]],["body/interfaces/IAutoComplete.html",[0,0.092,1,1.138,3,0.128,4,0.112,5,0.112,7,0.868,8,0.321,9,0.634,10,1.043,14,0.658,16,0.836,20,0.015,27,1.459,30,0.223,34,0.174,40,1.425,45,0.007,46,0.01,47,0.007,48,4.146,50,0.972,55,3.859,57,4.074,62,2.028,70,0.936,71,0.937,72,0.341,73,0.972,125,1.364,226,1.909,258,2.222,259,3.138,260,3.66,261,3.486,262,3.859,263,5,264,3.486,265,5.451,266,4.133,271,2.879,272,2.879,273,2.879,274,2.879,275,3.486,276,3.486,277,3.486,278,3.486,279,3.486,281,1.364]],["title/interfaces/IConditions.html",[72,0.333,340,2.301]],["body/interfaces/IConditions.html",[0,0.08,1,1.03,3,0.111,4,0.097,5,0.097,7,0.752,8,0.278,9,0.574,10,1.051,14,0.624,16,0.724,20,0.015,21,0.962,24,2.048,27,1.426,30,0.225,34,0.158,40,0.907,45,0.009,46,0.009,47,0.006,50,0.842,62,1.957,70,0.811,71,0.848,72,0.295,73,0.842,125,1.182,170,1.137,217,3.795,226,1.654,281,1.182,304,2.165,318,1.654,327,1.826,328,2.719,329,5.748,330,3.021,331,2.494,332,4.746,333,5.748,334,4.12,335,5.748,336,4.12,337,3.916,338,5.748,339,5.748,340,3.369,348,2.494,349,3.021,350,3.467,351,2.494,352,2.494,353,2.494,354,3.021,355,3.021,356,3.021,357,3.021,358,1.826,359,2.315,360,3.021]],["title/interfaces/ICountry.html",[72,0.333,470,2.446]],["body/interfaces/ICountry.html",[0,0.117,1,1.329,3,0.162,4,0.142,5,0.142,7,1.101,8,0.407,9,0.741,10,0.888,12,2.686,14,0.591,16,1.06,20,0.015,21,0.934,27,1.494,30,0.183,34,0.203,45,0.009,46,0.011,47,0.009,50,1.232,52,4.684,55,4.165,70,1.187,71,0.873,72,0.432,73,1.232,260,2.671,281,1.729,469,3.979,470,4.338]],["title/interfaces/IDay.html",[72,0.333,476,2.446]],["body/interfaces/IDay.html",[0,0.111,1,1.286,3,0.154,4,0.135,5,0.135,7,1.045,8,0.387,9,0.717,10,0.998,14,0.577,16,1.007,20,0.015,21,0.922,27,1.33,30,0.222,34,0.197,45,0.009,46,0.011,47,0.009,50,1.17,62,1.941,70,1.127,71,0.829,72,0.41,73,1.17,125,1.642,217,3.763,226,2.299,281,1.642,331,3.466,332,5.313,358,2.537,473,3.779,474,5.792,475,6.434,476,4.236,479,4.197]],["title/interfaces/IElevation.html",[72,0.333,484,2.446]],["body/interfaces/IElevation.html",[0,0.115,1,1.32,3,0.16,4,0.14,5,0.14,7,1.089,8,0.403,9,0.735,10,0.882,14,0.538,16,1.048,20,0.015,21,0.885,30,0.227,34,0.202,40,1.652,45,0.009,46,0.011,47,0.009,50,1.218,70,1.174,71,1.086,72,0.427,73,1.218,281,1.71,480,3.133,481,3.935,482,5.379,483,4.351,484,4.316,485,4.302,486,3.609,487,3.609,488,3.609,489,3.609,490,3.609]],["title/interfaces/IForecast.html",[72,0.333,631,2.301]],["body/interfaces/IForecast.html",[0,0.11,1,1.277,3,0.152,4,0.133,5,0.133,7,1.035,8,0.383,9,0.712,10,0.854,14,0.52,16,0.996,20,0.015,21,0.869,30,0.243,34,0.195,40,1.766,45,0.008,46,0.011,47,0.008,50,1.158,70,1.115,71,1.161,72,0.406,73,1.158,116,2.167,281,1.625,554,2.647,627,2.647,628,3.739,629,3.43,630,4.783,631,3.965,632,4.446,633,4.153,634,4.446,635,4.153,636,6.202,637,4.153,638,4.153,639,4.153,640,4.153,641,4.153,642,4.153]],["title/interfaces/IGeoPosition.html",[72,0.333,189,2.301]],["body/interfaces/IGeoPosition.html",[0,0.111,1,1.288,3,0.154,4,0.135,5,0.135,7,1.048,8,0.388,9,0.718,10,0.949,14,0.578,16,1.009,20,0.015,21,0.923,30,0.222,34,0.197,40,1.264,45,0.009,46,0.011,47,0.009,50,1.173,62,2.112,70,1.13,71,1.06,72,0.411,73,1.173,189,3.99,214,2.682,244,4.935,281,1.646,480,4.797,484,4.468,643,3.789,644,5.318,645,4.208,646,4.208,647,4.208]],["title/interfaces/IHeadline.html",[72,0.333,632,2.446]],["body/interfaces/IHeadline.html",[0,0.09,1,1.124,3,0.126,4,0.11,5,0.11,7,0.853,8,0.316,9,0.627,10,1.054,14,0.642,16,0.822,20,0.015,21,0.977,24,2.438,27,1.478,30,0.142,34,0.172,45,0.007,46,0.01,47,0.007,50,0.955,62,2.109,70,0.92,71,0.676,72,0.335,73,0.955,281,1.34,334,4.314,336,4.314,630,2.456,632,3.831,677,4.97,705,3.084,706,6.019,707,6.019,708,6.019,709,6.019,710,6.019,711,6.019]],["title/interfaces/ILocation.html",[72,0.333,712,2.615]],["body/interfaces/ILocation.html",[0,0.062,1,0.855,3,0.086,4,0.075,5,0.075,7,0.584,8,0.216,9,0.476,10,1.04,14,0.647,16,0.562,20,0.015,21,0.965,27,1.424,30,0.234,34,0.131,40,1.754,45,0.005,46,0.007,47,0.005,48,3.613,50,0.654,52,3.713,55,3.301,57,3.069,62,1.501,70,0.63,71,1.119,72,0.229,73,0.654,189,3.248,193,1.937,214,3.723,217,3.131,260,3.688,262,3.301,263,4.278,271,1.937,272,1.937,273,1.937,274,1.937,281,0.918,318,1.285,327,3.748,340,3.248,470,4.064,553,2.048,554,1.495,555,3.97,627,3.953,631,3.248,712,3.304,713,2.111,714,5.18,715,5.18,716,4.188,717,3.452,718,2.111,719,2.345,720,2.111,721,2.345,722,2.345,723,3.564,724,3.564,725,2.345,726,2.345,727,3.564,728,2.345,729,2.345,730,2.345,731,2.345,732,2.345,733,2.345,734,2.345,735,2.345]],["title/interfaces/IMenuEvent.html",[72,0.333,736,2.818]],["body/interfaces/IMenuEvent.html",[3,0.18,4,0.157,5,0.157,8,0.451,9,0.789,14,0.577,20,0.014,30,0.202,34,0.18,45,0.01,46,0.012,47,0.01,72,0.479,281,1.916,444,4.045,570,5.92,736,4.874,737,4.898,738,4.41,739,6.576,740,6.576,741,7.294]],["title/interfaces/IMetric.html",[72,0.333,485,2.174]],["body/interfaces/IMetric.html",[0,0.115,1,1.32,3,0.16,4,0.14,5,0.14,7,1.089,8,0.403,9,0.735,10,0.965,14,0.588,16,1.048,20,0.015,21,0.932,27,1.35,30,0.181,34,0.202,45,0.009,46,0.011,47,0.009,50,1.218,62,2.128,70,1.174,71,0.863,72,0.427,73,1.218,93,2.65,281,1.71,483,2.786,485,3.838,742,3.935,743,5.864,744,6.513]],["title/interfaces/IQueryParams.html",[72,0.333,745,2.818]],["body/interfaces/IQueryParams.html",[0,0.114,3,0.158,4,0.138,5,0.138,8,0.396,9,0.728,10,1.007,14,0.584,16,1.031,20,0.015,21,0.928,22,1.618,27,1.163,30,0.178,31,3.295,32,3.295,34,0.2,45,0.009,46,0.011,47,0.009,62,2.171,72,0.42,262,4.004,281,1.682,309,2.06,745,5.188,746,3.871,747,3.871,748,5.352,749,5.352,750,3.295,751,3.871,752,4.3,753,3.871,754,4.3,755,4.3]],["title/interfaces/ISearchEvent.html",[72,0.333,756,2.818]],["body/interfaces/ISearchEvent.html",[3,0.179,4,0.157,5,0.157,8,0.45,9,0.787,14,0.576,20,0.014,27,1.352,34,0.179,45,0.01,46,0.012,47,0.01,72,0.477,281,1.91,738,4.396,739,6.569,756,4.865,757,4.883,758,7.563,759,7.284,760,7.284]],["title/interfaces/ITemperature.html",[72,0.333,350,2.174]],["body/interfaces/ITemperature.html",[0,0.103,1,1.23,3,0.144,4,0.126,5,0.126,7,0.976,8,0.361,9,0.685,10,0.972,14,0.593,16,0.939,20,0.015,21,0.935,30,0.212,34,0.188,40,1.822,45,0.008,46,0.01,47,0.008,50,1.092,70,1.052,71,1.012,72,0.383,73,1.092,281,1.532,310,5.199,337,2.496,350,3.644,482,5.199,483,4.342,485,4.426,486,3.235,487,3.235,488,3.235,489,3.235,490,3.235,761,3.526,762,6.296,763,3.917,764,3.917,765,3.917,766,3.917]],["title/interfaces/ITimeZone.html",[72,0.333,717,2.446]],["body/interfaces/ITimeZone.html",[0,0.106,1,1.248,3,0.147,4,0.129,5,0.129,7,0.998,8,0.369,9,0.696,10,0.981,13,1.359,14,0.62,16,0.961,20,0.015,21,0.958,24,2.303,27,1.414,30,0.166,34,0.191,45,0.008,46,0.011,47,0.008,50,1.117,62,1.907,70,1.076,71,0.791,72,0.391,73,1.117,217,3.698,281,1.567,716,2.872,717,4.143,767,3.607,768,5.709,769,6.341,770,6.341,771,6.341]],["title/interfaces/IWeather.html",[72,0.333,634,2.446]],["body/interfaces/IWeather.html",[0,0.085,1,1.073,3,0.118,4,0.103,5,0.103,7,0.798,8,0.295,9,0.598,10,1.022,14,0.623,16,0.768,20,0.015,21,0.961,24,2.437,27,1.429,30,0.213,34,0.164,40,1.677,45,0.007,46,0.009,47,0.007,50,0.893,62,1.741,70,0.86,71,1.018,72,0.313,73,0.893,116,1.303,281,1.253,334,4.212,336,4.212,337,3.982,350,3.559,351,2.646,352,2.646,353,2.646,358,3.964,359,4.503,476,4.479,554,2.042,634,3.698,772,2.884,773,5.876,774,5.876,775,3.204,776,4.476,777,3.204,778,3.204,779,3.204,780,3.204]],["title/classes/Location.html",[0,0.09,553,1.961]],["body/classes/Location.html",[0,0.055,1,1.301,2,0.811,3,0.076,4,0.067,5,0.067,7,0.516,8,0.191,9,0.433,10,1.135,11,1.488,12,1.371,13,0.886,14,0.649,15,0.516,16,0.777,17,1.518,19,0.536,20,0.015,21,0.29,22,0.78,23,0.811,24,0.78,26,0.913,27,1.366,30,0.224,34,0.119,40,1.685,45,0.004,46,0.007,47,0.004,48,3.456,50,0.903,52,3.234,55,2.875,57,2.065,62,1.244,65,2.161,66,0.993,67,0.993,68,0.993,69,0.993,70,0.556,71,1.071,72,0.202,73,0.578,92,0.952,93,0.843,189,2.185,193,1.711,214,3.576,217,2.958,260,3.633,262,2.875,263,3.725,268,2.072,270,1.866,271,1.711,272,1.711,273,1.711,274,1.711,318,1.135,327,3.633,340,2.185,341,2.072,342,2.072,470,2.86,553,2.293,554,1.321,555,3.457,627,3.831,631,2.185,712,3.457,713,5.802,714,4.511,715,4.511,716,4.023,717,2.323,718,1.866,719,2.072,720,1.866,721,2.072,722,3.989,723,3.24,724,3.24,725,2.072,726,2.072,727,3.24,728,2.072,729,2.072,730,2.072,731,2.072,732,2.072,733,2.072,734,2.072,735,3.989,781,3.731,782,2.386,783,2.386,784,2.386,785,2.386,786,2.386,787,2.386,788,2.386,789,2.386,790,2.386,791,2.386]],["title/guards/LocationResolver.html",[451,2.615,792,3.072]],["body/guards/LocationResolver.html",[0,0.097,3,0.135,4,0.118,5,0.118,8,0.338,9,0.491,13,1.091,14,0.48,15,0.915,17,1.134,19,1.271,20,0.015,21,0.688,30,0.272,34,0.135,45,0.007,46,0.01,47,0.007,71,0.725,95,0.95,116,2.253,169,2.011,170,1.382,194,2.691,195,3.573,203,3.672,204,3.182,208,3.988,224,2.34,226,2.011,229,2.11,292,2.458,299,1.837,309,1.759,318,2.011,369,3.306,372,4.057,379,2.814,411,3.032,436,3.573,451,3.765,460,2.814,502,2.814,533,3.032,553,2.11,558,3.032,793,4.228,794,3.672,795,5.657,796,5.913,797,4.228,798,5.657,799,6.808,800,4.228,801,3.672,802,5.657,803,3.306,804,4.423,805,4.228,806,4.228,807,4.228,808,4.228,809,4.228,810,4.228,811,4.228,812,4.228,813,4.228,814,4.228,815,4.228,816,4.228,817,4.228,818,4.228,819,4.228,820,4.228,821,4.228]],["title/classes/Metric.html",[0,0.09,483,2.174]],["body/classes/Metric.html",[0,0.098,1,1.557,2,1.45,3,0.136,4,0.119,5,0.119,7,0.923,8,0.341,9,0.661,10,1.124,11,2.271,12,2.093,13,1.236,14,0.659,15,0.923,16,1.186,17,1.523,19,0.959,20,0.014,21,0.519,22,1.395,23,1.45,24,1.395,26,1.633,27,1.359,30,0.153,34,0.181,45,0.008,46,0.01,47,0.008,50,1.378,62,1.983,65,2.843,66,1.775,67,1.775,68,1.775,69,1.775,70,0.995,71,0.732,72,0.362,73,1.033,93,2.415,471,2.657,472,3.337,478,3.544,483,3.151,485,3.782,742,5.566,743,5.343,744,5.935]],["title/classes/QueryParams.html",[0,0.09,750,2.615]],["body/classes/QueryParams.html",[0,0.104,2,1.548,3,0.145,4,0.127,5,0.127,8,0.364,9,0.69,10,1.109,13,0.879,14,0.595,15,0.985,16,1.238,17,1.458,19,1.023,20,0.015,21,0.554,22,1.943,23,1.548,27,1.227,30,0.163,31,3.032,32,3.032,34,0.189,45,0.008,46,0.011,47,0.008,62,2.056,72,0.386,92,1.817,93,1.609,262,2.521,309,2.472,745,5.349,746,5.831,747,3.562,748,5.028,749,5.028,750,3.955,751,5.172,752,3.956,753,5.172,754,3.956,755,3.956,822,5.943,823,4.555,824,4.555,825,4.555]],["title/classes/RequestCache.html",[0,0.09,308,2.446]],["body/classes/RequestCache.html",[0,0.128,2,1.404,3,0.132,4,0.115,5,0.115,8,0.331,10,0.575,13,1.075,14,0.473,15,0.894,17,1.117,19,1.251,20,0.015,21,0.678,30,0.226,34,0.178,35,5.798,40,1.078,45,0.007,46,0.01,47,0.007,71,0.708,95,0.928,139,2.062,170,2.205,194,2.65,204,2.78,280,2.75,283,3.231,284,5.506,285,2.963,286,5.408,287,2.75,288,3.231,289,4.838,290,3.589,291,3.589,292,2.42,293,4.838,295,5.474,296,5.408,298,3.995,299,2.42,300,4.838,301,4.838,303,3.308,304,2.572,305,3.589,307,3.589,308,3.924,309,1.719,310,2.963,311,3.231,312,3.589,313,3.589,314,3.589,315,4.838,316,4.838,317,3.589,318,1.966,319,3.589,320,4.838,321,3.589,322,4.838,323,3.589,324,3.589,325,3.589,326,3.589,826,4.132,827,4.132]],["title/interceptors/RequestInterceptor.html",[435,2.615,449,2.818]],["body/interceptors/RequestInterceptor.html",[0,0.096,3,0.133,4,0.117,5,0.117,8,0.334,13,1.083,14,0.476,15,0.904,17,1.125,19,1.261,20,0.015,21,0.683,30,0.271,32,2.782,34,0.133,45,0.007,46,0.01,47,0.007,95,0.939,125,1.42,139,2.086,170,1.366,194,2.67,195,3.557,204,2.086,208,3.713,224,2.313,226,1.988,229,2.086,252,4.219,286,4.026,292,2.439,296,4.86,298,4.546,299,1.816,308,4.219,309,1.739,311,4.956,318,1.988,369,3.268,372,4.026,379,2.782,384,4.389,386,3.63,435,3.736,459,3.63,491,3.63,493,2.997,494,4.875,495,4.875,496,5.885,499,3.63,500,4.875,502,2.782,804,3.268,828,5.505,829,4.179,830,4.179,831,4.179,832,2.997,833,4.179,834,4.179,835,4.179,836,4.179,837,4.179,838,5.614,839,4.179,840,4.179,841,4.179,842,4.179,843,4.179,844,4.179,845,4.179]],["title/components/SearchComponent.html",[74,1.236,109,1.707]],["body/components/SearchComponent.html",[0,0.044,3,0.061,4,0.054,5,0.054,8,0.154,9,0.365,10,1.068,13,0.769,14,0.486,15,0.417,17,1.355,19,0.433,20,0.015,21,0.235,30,0.238,34,0.061,40,1.199,45,0.003,46,0.006,47,0.003,71,0.33,74,1.254,75,0.875,76,1.156,77,1.067,78,1.067,79,1.067,80,1.067,82,1.067,83,3.521,84,3.419,86,1.741,88,1.741,90,1.674,92,2.168,93,2.026,95,0.433,96,0.738,97,1.741,98,1.741,99,1.067,100,2.545,101,1.067,102,1.067,103,0.681,104,1.067,105,0.837,106,1.067,107,0.875,108,1.067,109,1.998,110,1.067,111,0.875,112,1.067,113,0.875,114,1.067,115,0.837,116,1.79,117,1.067,118,1.067,135,1.429,153,1.2,155,1.129,156,1.2,169,0.917,187,2.732,204,2.295,208,2.334,210,3.994,224,1.067,229,0.962,244,2.093,258,2.206,262,1.067,292,1.366,299,0.837,300,1.382,303,1.012,304,1.2,309,1.309,362,2.334,368,2.693,370,4.98,384,3.116,389,1.283,390,2.256,394,4.849,396,2.459,397,2.459,400,3.06,401,4.112,404,2.459,405,2.459,406,2.459,407,2.459,408,3.595,414,4.112,415,1.283,418,1.674,419,1.674,420,2.732,421,1.382,422,3.116,436,2.414,444,1.382,460,1.283,474,2.459,502,1.283,550,1.507,553,1.989,574,2.732,575,3.898,576,1.507,578,2.732,582,1.674,644,2.256,649,2.732,664,3.461,665,3.461,667,2.732,673,4.4,674,2.459,675,2.732,677,3.298,683,1.674,684,3.994,687,4.721,690,2.459,691,2.459,736,2.858,740,4.4,748,1.382,749,1.382,750,2.093,756,2.256,846,1.674,847,4.721,848,3.985,849,3.145,850,3.985,851,3.985,852,3.985,853,3.985,854,3.985,855,3.985,856,3.985,857,3.985,858,3.985,859,3.985,860,3.985,861,3.145,862,1.927,863,1.927,864,1.927,865,1.927,866,1.927,867,4.598,868,1.927,869,1.927,870,1.927,871,1.927,872,1.927,873,3.145,874,3.145,875,3.145,876,1.927,877,1.927,878,3.145,879,1.927,880,2.732,881,1.927,882,1.674,883,1.927,884,1.927,885,1.927,886,1.507,887,3.145,888,1.927,889,3.985,890,1.927,891,1.927,892,1.927,893,1.927,894,1.927,895,1.927,896,1.927,897,1.927,898,1.927,899,3.145,900,1.927,901,1.927,902,1.927,903,3.145,904,3.145,905,1.927,906,3.145,907,1.927,908,1.927,909,1.927,910,1.927,911,3.985,912,1.927,913,2.732,914,3.145,915,3.145,916,1.927,917,3.145,918,1.927,919,1.927,920,1.927,921,5.733,922,3.145,923,4.598,924,3.145,925,3.145,926,4.598,927,4.598,928,4.598,929,3.145,930,3.985,931,3.145,932,2.732,933,1.927,934,1.927]],["title/modules/SearchModule.html",[119,1.19,431,1.961]],["body/modules/SearchModule.html",[0,0.093,3,0.13,4,0.114,5,0.114,20,0.015,30,0.259,34,0.13,45,0.007,46,0.01,47,0.007,76,2.301,95,0.916,96,1.56,103,2.692,109,2.398,119,1.235,121,2.279,122,2.035,123,3.464,124,2.14,125,1.876,126,2.497,133,3.055,134,2.256,135,1.852,137,2.297,140,2.297,147,2.538,170,1.805,429,3.697,430,3.803,431,4.105,432,3.803,445,3.233,446,2.256,455,2.713,886,3.187,935,3.541,936,3.541,937,4.077,938,4.077,939,4.81,940,3.187,941,5.52,942,4.077,943,3.541]],["title/modules/SearchRoutingModule.html",[119,1.19,939,2.615]],["body/modules/SearchRoutingModule.html",[0,0.125,3,0.174,4,0.153,5,0.153,20,0.015,30,0.258,34,0.213,45,0.01,46,0.012,47,0.01,74,1.721,95,1.229,109,2.898,121,1.859,126,2.182,137,2.276,140,2.775,166,3.406,167,4.153,168,3.502,169,2.602,170,1.788,172,3.923,594,4.277,939,4.44,943,4.751,944,5.47,945,5.47,946,5.47]],["title/components/SettingsComponent.html",[74,1.236,111,1.784]],["body/components/SettingsComponent.html",[0,0.103,3,0.143,4,0.125,5,0.125,8,0.358,13,1.134,15,1.419,17,1.178,20,0.014,30,0.161,34,0.143,45,0.008,46,0.01,47,0.008,74,2.064,75,2.034,76,2.16,77,2.478,78,2.478,79,2.478,80,2.478,82,2.478,83,4.337,84,4.112,86,3.252,88,3.252,95,1.006,96,1.714,97,3.252,98,3.252,99,2.478,100,3.855,101,2.478,102,2.478,103,1.582,104,2.478,105,1.945,106,2.478,107,2.034,108,2.478,109,1.945,110,2.478,111,3.163,112,2.478,113,2.034,114,2.478,115,1.945,116,1.582,117,2.478,118,2.478,228,4.995,292,2.553,299,1.945,303,2.35,309,2.445,362,3.842,368,4.079,947,3.888,948,6.559,949,5.876,950,4.477,951,4.477,952,5.876]],["title/components/SidenavComponent.html",[74,1.236,113,1.784]],["body/components/SidenavComponent.html",[0,0.083,3,0.116,4,0.101,5,0.101,8,0.29,9,0.592,10,0.889,13,1.136,14,0.5,15,0.785,17,1.28,19,0.816,20,0.015,21,0.442,27,0.946,30,0.241,34,0.116,45,0.006,46,0.009,47,0.006,74,1.853,75,1.649,76,1.873,77,2.009,78,2.009,79,2.009,80,2.009,82,2.009,83,4.167,84,4.063,86,2.821,88,2.821,95,0.816,96,1.39,97,2.821,98,2.821,99,2.009,100,3.534,101,2.009,102,2.009,103,1.283,104,2.009,105,1.577,106,2.009,107,1.649,108,2.009,109,1.577,110,2.009,111,1.649,112,2.009,113,2.9,114,2.009,115,1.577,116,1.283,117,2.009,118,2.009,135,2.315,139,1.812,153,2.26,155,3.449,156,2.26,163,3.919,195,3.351,204,1.812,229,1.812,292,2.214,299,1.577,303,1.905,309,2.12,362,3.449,368,3.74,379,2.416,389,2.416,400,2.416,401,2.604,402,2.604,403,3.153,415,3.392,423,5.114,575,2.604,659,5.114,661,3.153,662,3.153,690,3.985,691,3.985,880,4.426,932,4.426,953,3.153,954,5.889,955,5.096,956,5.096,957,3.63,958,5.114,959,5.545,960,5.096,961,5.096,962,3.63,963,3.63,964,3.63,965,3.63,966,3.63,967,3.63,968,3.63,969,3.63]],["title/modules/SidenavModule.html",[119,1.19,432,1.961]],["body/modules/SidenavModule.html",[0,0.095,3,0.132,4,0.115,5,0.115,20,0.015,30,0.266,34,0.132,45,0.007,46,0.01,47,0.007,76,2.317,95,0.928,96,1.582,103,2.699,111,2.53,113,2.53,119,1.252,121,2.292,122,2.062,123,3.488,124,2.169,125,1.893,126,2.514,133,3.083,134,2.287,135,1.877,137,2.318,138,4.356,139,2.062,140,2.318,170,1.821,429,3.706,430,3.813,431,3.813,432,4.098,445,3.263,446,2.287,455,2.75,618,4.838,619,3.589,970,4.132,971,4.132,972,4.132,973,4.132,974,3.231,975,4.132,976,4.132]],["title/classes/Temperature.html",[0,0.09,337,2.174]],["body/classes/Temperature.html",[0,0.089,1,1.519,2,1.317,3,0.124,4,0.108,5,0.108,7,0.839,8,0.31,9,0.619,10,1.123,11,2.128,12,1.961,13,1.177,14,0.654,15,0.839,16,1.111,17,1.511,19,0.871,20,0.015,21,0.472,22,1.267,23,1.317,24,1.267,26,1.484,27,1.132,30,0.191,34,0.17,40,1.713,45,0.007,46,0.009,47,0.007,50,1.291,59,3.032,60,4.171,65,2.733,66,1.613,67,1.613,68,1.613,69,1.613,70,0.904,71,0.915,72,0.329,73,0.939,310,4.711,337,2.953,350,3.636,477,2.781,478,2.414,482,4.711,483,4.33,485,3.812,486,2.781,487,2.781,488,2.781,489,2.781,490,2.781,761,5.566,762,5.705,763,3.367,764,3.367,765,3.367,766,3.367]],["title/classes/TimeZone.html",[0,0.09,716,2.446]],["body/classes/TimeZone.html",[0,0.092,1,1.535,2,1.37,3,0.128,4,0.112,5,0.112,7,0.872,8,0.322,9,0.636,10,1.127,11,2.185,12,2.014,13,1.288,14,0.658,15,0.872,16,1.141,17,1.524,19,0.906,20,0.015,21,0.491,22,1.318,23,1.37,24,2.183,26,1.543,27,1.367,30,0.145,34,0.175,45,0.007,46,0.01,47,0.007,50,1.326,59,3.152,60,4.284,62,1.685,65,2.778,66,1.677,67,1.677,68,1.677,69,1.677,70,0.94,71,0.691,72,0.342,73,0.976,217,3.267,477,2.891,478,2.51,716,3.411,717,4.157,767,5.632,768,5.221,769,5.799,770,5.799,771,5.799]],["title/classes/Weather.html",[0,0.09,116,1.388]],["body/classes/Weather.html",[0,0.074,1,1.442,2,1.098,3,0.103,4,0.09,5,0.09,7,0.699,8,0.258,9,0.544,10,1.132,11,1.871,12,1.724,13,1.065,14,0.654,15,0.699,16,0.977,17,1.521,19,0.726,20,0.015,21,0.393,22,1.056,23,1.098,24,2.318,26,1.237,27,1.395,30,0.198,34,0.149,40,1.58,45,0.006,46,0.008,47,0.006,50,1.135,58,2.151,62,1.494,63,2.151,64,2.318,65,2.52,66,1.344,67,1.344,68,1.344,69,1.344,70,0.754,71,0.946,72,0.274,73,0.782,116,1.657,267,2.318,269,2.318,334,3.771,336,3.771,337,3.831,343,2.527,344,2.527,345,3.667,350,2.596,351,2.318,352,2.318,353,2.318,358,3.903,359,4.031,476,3.437,554,1.789,634,3.771,772,5.739,773,5.26,774,5.26,775,2.807,776,4.073,777,2.807,778,2.807,779,2.807,780,2.807]],["title/components/WeatherComponent.html",[74,1.236,115,1.707]],["body/components/WeatherComponent.html",[0,0.076,3,0.106,4,0.093,5,0.093,8,0.266,9,0.555,10,1.013,13,1.081,14,0.476,15,0.718,17,1.303,19,0.746,20,0.015,21,0.404,24,2.005,27,0.887,30,0.22,34,0.106,45,0.008,46,0.008,47,0.006,71,0.569,74,1.764,75,1.508,76,1.758,77,1.837,78,1.837,79,1.837,80,1.837,82,1.837,83,4.087,84,3.876,86,2.647,88,2.647,92,1.324,93,1.173,95,0.746,96,1.271,97,2.647,98,2.647,99,1.837,100,3.395,101,1.837,102,1.837,103,1.173,104,1.837,105,1.442,106,1.837,107,1.508,108,1.837,109,1.442,110,1.837,111,1.508,112,1.837,113,1.508,114,1.837,115,2.664,116,2.297,117,1.837,118,1.837,169,1.579,204,1.657,229,1.657,252,2.209,292,2.077,299,1.442,303,1.742,309,1.99,362,3.283,368,3.592,413,4.153,421,3.43,436,3.219,460,2.209,533,4.02,550,2.596,553,3.379,558,2.381,682,4.153,977,2.883,978,5.605,979,4.782,980,5.605,981,5.605,982,6.133,983,4.782,984,3.32,985,3.32,986,3.32,987,3.32,988,3.32,989,3.32,990,4.782,991,3.32,992,4.782,993,4.782,994,3.32,995,4.782,996,4.782,997,4.782,998,3.739,999,4.782,1000,4.782,1001,4.782,1002,4.782,1003,4.782,1004,4.782,1005,4.782,1006,4.782,1007,4.782,1008,4.782,1009,3.32]],["title/modules/WeatherModule.html",[119,1.19,1010,2.818]],["body/modules/WeatherModule.html",[0,0.095,3,0.132,4,0.116,5,0.116,20,0.015,30,0.253,34,0.132,45,0.007,46,0.01,47,0.007,76,2.322,95,0.932,96,1.589,103,2.702,115,2.428,119,1.257,121,2.296,122,2.072,123,3.496,124,2.179,125,1.899,126,2.52,133,3.093,134,2.297,135,1.885,137,2.325,140,2.325,147,2.584,170,1.827,429,3.709,430,3.817,431,3.817,432,3.817,445,3.273,446,2.297,455,2.763,1010,5.836,1011,3.605,1012,4.151,1013,4.151,1014,3.605,1015,4.835,1016,3.245,1017,4.151,1018,3.605]],["title/modules/WeatherRoutingModule.html",[119,1.19,1015,2.615]],["body/modules/WeatherRoutingModule.html",[0,0.121,3,0.168,4,0.147,5,0.147,20,0.015,30,0.266,34,0.208,45,0.009,46,0.012,47,0.009,74,1.661,95,1.186,115,2.836,121,1.794,126,2.106,137,2.197,140,2.716,166,3.287,167,4.064,168,3.426,169,2.512,170,1.726,172,3.787,451,4.345,452,4.586,553,2.636,594,4.129,796,4.586,1015,4.345,1018,4.586,1019,5.28,1020,5.28,1021,5.28,1022,5.28,1023,5.28]],["title/injectables/WeatherService.html",[194,1.869,436,2.062]],["body/injectables/WeatherService.html",[0,0.054,1,0.487,3,0.074,4,0.065,5,0.065,8,0.187,9,0.426,10,1.083,13,0.451,14,0.311,15,0.506,17,1.423,19,0.525,20,0.015,21,0.284,22,1.482,23,0.794,27,1.036,30,0.255,32,1.555,34,0.074,40,1.761,45,0.008,46,0.006,47,0.004,62,0.994,70,0.545,71,0.957,92,2.746,93,2.565,95,0.525,125,0.794,139,1.166,170,0.764,184,3.197,194,1.746,196,1.676,204,3.37,208,3.47,224,1.294,226,1.112,227,1.827,228,1.676,229,1.166,258,2.843,262,2.843,266,1.555,300,3.683,304,3.197,318,1.746,327,1.227,340,1.369,411,2.633,436,1.927,502,1.555,553,2.957,554,2.509,555,3.017,556,2.03,557,2.03,558,1.676,562,2.03,570,1.827,627,1.294,631,1.369,712,1.555,718,1.827,720,1.827,748,2.633,749,2.633,751,2.87,801,2.03,804,2.87,832,1.676,847,3.188,882,2.03,958,3.188,959,4.46,1024,2.03,1025,3.544,1026,4.533,1027,4.533,1028,4.533,1029,4.533,1030,4.533,1031,4.533,1032,4.533,1033,4.533,1034,4.533,1035,4.533,1036,2.337,1037,3.67,1038,2.337,1039,2.337,1040,2.337,1041,2.337,1042,2.337,1043,2.337,1044,2.337,1045,2.337,1046,2.337,1047,2.337,1048,2.337,1049,2.337,1050,1.827,1051,2.337,1052,3.67,1053,2.337,1054,2.337,1055,2.337,1056,2.337,1057,2.337,1058,5.581,1059,2.337,1060,4.533,1061,2.337,1062,2.337,1063,3.67,1064,2.337,1065,2.337,1066,2.337,1067,2.337,1068,2.337,1069,2.337,1070,2.337,1071,3.67,1072,3.67,1073,3.67,1074,3.67,1075,3.67,1076,3.67,1077,3.67,1078,3.67,1079,2.337,1080,2.337,1081,2.337,1082,2.337,1083,2.337,1084,2.337,1085,2.337,1086,2.337,1087,2.337,1088,2.337,1089,2.337,1090,4.533,1091,2.337,1092,2.337,1093,2.337,1094,2.337,1095,2.337,1096,3.67,1097,2.337,1098,2.337,1099,2.337]],["title/coverage.html",[1100,4.675]],["body/coverage.html",[0,0.17,1,0.478,5,0.064,6,1.994,7,1.695,14,0.195,20,0.015,31,1.528,40,0.599,45,0.004,46,0.006,47,0.004,48,1.271,49,2.83,57,1.271,72,0.63,74,2.006,75,1.043,76,2.161,81,1.994,103,0.811,105,0.997,107,1.043,109,0.997,111,1.043,113,1.043,115,0.997,116,0.811,121,1.998,125,1.23,184,1.429,185,1.994,186,1.994,189,1.345,194,2.131,195,1.205,197,1.994,214,1.271,225,2.83,258,1.271,259,2.83,260,1.205,266,1.528,280,1.528,282,1.994,287,1.528,288,2.83,308,1.429,327,1.205,328,2.83,337,1.271,340,1.345,348,1.647,350,1.271,358,1.205,361,1.994,409,7.17,434,1.528,435,1.528,436,1.205,437,2.83,449,2.596,451,1.528,469,2.83,470,1.429,473,2.83,476,1.429,480,1.429,481,2.83,483,1.271,484,1.429,485,1.271,492,3.503,493,3.647,503,1.647,514,1.795,547,1.994,553,1.146,589,2.83,627,1.271,628,2.83,630,1.429,631,1.345,632,1.429,634,1.429,643,2.83,648,1.994,699,2.83,705,2.83,712,1.528,713,2.83,716,1.429,717,1.429,736,1.647,737,1.994,738,2.83,742,2.83,745,1.647,746,2.83,747,2.83,750,1.528,756,1.647,757,1.994,761,2.83,767,2.83,772,2.83,792,1.795,794,1.994,803,2.83,828,1.994,832,1.647,846,1.994,940,2.83,947,1.994,953,1.994,974,2.83,977,1.994,998,1.795,1016,2.83,1024,1.994,1025,1.795,1050,1.795,1100,1.994,1101,2.296,1102,2.296,1103,2.296,1104,6.377,1105,5.879,1106,7.764,1107,7.764,1108,4.481,1109,6.377,1110,5.085,1111,5.879,1112,1.994,1113,1.994,1114,4.417,1115,2.296,1116,2.296,1117,2.296,1118,5.534,1119,4.481,1120,3.62,1121,2.296,1122,2.296,1123,3.891,1124,3.891,1125,3.144,1126,1.994,1127,2.296,1128,2.296]],["title/dependencies.html",[122,2.361,1129,3.27]],["body/dependencies.html",[20,0.015,26,1.964,33,4.457,45,0.009,46,0.011,47,0.009,95,1.153,122,2.561,124,2.694,142,5.57,143,5.014,169,2.441,224,2.84,446,2.84,674,4.013,886,4.013,1130,5.132,1131,6.912,1132,5.132,1133,5.132,1134,5.132,1135,5.132,1136,5.132,1137,5.132,1138,5.132,1139,5.132,1140,5.132,1141,5.132,1142,5.132,1143,5.132,1144,5.132,1145,5.132,1146,5.132,1147,5.132,1148,6.413,1149,5.132,1150,5.132,1151,5.132,1152,5.132,1153,5.132,1154,5.132,1155,5.132,1156,5.132]],["title/miscellaneous/enumerations.html",[1157,2.346,1158,4.109]],["body/miscellaneous/enumerations.html",[8,0.366,20,0.015,45,0.008,46,0.011,47,0.008,93,2.888,116,2.482,149,3.968,152,4.276,155,3.492,162,5.178,173,3.283,258,3.3,260,3.129,327,3.129,555,3.968,629,4.276,1157,3.283,1158,3.976,1159,4.578,1160,5.962,1161,4.578,1162,5.962,1163,5.962,1164,4.578,1165,5.962,1166,5.962,1167,4.578,1168,5.962,1169,5.962,1170,5.962,1171,4.578,1172,5.962,1173,5.962,1174,5.962,1175,4.578,1176,5.962,1177,5.962,1178,5.178,1179,4.578,1180,4.578,1181,5.962,1182,4.578,1183,5.962,1184,5.962,1185,5.962,1186,5.962,1187,5.962,1188,5.962]],["title/index.html",[8,0.262,1189,3.27,1190,3.27]],["body/index.html",[4,0.131,13,0.904,20,0.011,40,1.222,45,0.008,46,0.011,47,0.008,74,2.109,84,2.458,94,5.822,135,2.128,265,3.662,372,3.359,400,3.117,503,3.359,531,4.732,627,2.592,743,4.732,753,5.737,768,3.662,913,4.068,1131,4.068,1191,6.051,1192,4.684,1193,6.704,1194,6.704,1195,7.514,1196,4.684,1197,4.684,1198,4.684,1199,4.684,1200,4.684,1201,4.684,1202,7.646,1203,4.684,1204,4.684,1205,4.684,1206,4.684,1207,4.684,1208,4.684,1209,4.684,1210,4.684,1211,4.684,1212,6.704,1213,6.704,1214,4.684,1215,4.684,1216,4.684,1217,4.684,1218,4.684,1219,4.684,1220,4.068,1221,6.051,1222,7.086,1223,4.684,1224,6.051,1225,6.051,1226,4.684,1227,7.086,1228,4.684,1229,4.684,1230,4.684,1231,6.704,1232,4.684,1233,4.684,1234,4.684,1235,3.662,1236,4.684,1237,4.684]],["title/modules.html",[121,1.829]],["body/modules.html",[20,0.012,45,0.009,46,0.012,47,0.009,120,3.765,121,1.784,131,3.494,132,3.494,143,6.133,429,2.497,430,2.62,431,2.62,432,2.62,433,3.494,583,3.765,588,3.494,698,3.494,939,3.494,1010,3.765,1015,3.494,1238,7.843,1239,7.843,1240,8.18,1241,7.843,1242,7.843]],["title/overview.html",[1235,4.209]],["body/overview.html",[2,0.924,20,0.015,45,0.005,46,0.007,47,0.005,75,2.973,76,1,96,1.041,103,2.752,119,0.824,120,4.952,121,0.924,122,1.358,123,1.506,124,1.428,125,0.924,126,1.085,127,2.363,128,2.363,129,2.363,130,2.363,131,3.319,132,5.284,133,2.285,134,1.506,135,1.236,168,1.428,195,2.618,196,1.951,281,0.924,424,2.363,425,2.363,426,2.363,427,2.363,428,2.363,429,3.705,430,4.044,431,4.044,432,4.033,433,3.319,434,3.319,435,3.319,436,2.618,583,5.509,584,2.363,585,2.363,588,3.319,694,2.363,696,2.363,698,3.319,792,2.127,935,2.363,936,2.363,939,3.319,1010,5.509,1011,2.363,1014,2.363,1015,3.319,1235,2.127,1243,2.721,1244,2.721,1245,2.721,1246,4.127,1247,2.721,1248,2.721]],["title/routes.html",[168,2.825]],["body/routes.html",[20,0.013,45,0.011,46,0.013,47,0.011,168,3.366]],["title/miscellaneous/variables.html",[1157,2.346,1249,4.109]],["body/miscellaneous/variables.html",[8,0.139,14,0.62,19,0.39,20,0.015,27,1.064,31,1.921,45,0.003,46,0.007,47,0.003,76,2.368,92,2.962,93,2.649,103,0.614,105,0.754,107,0.789,109,0.754,111,0.789,113,0.789,115,0.754,116,1.02,121,2.189,125,1.466,214,1.598,225,3.374,244,1.921,258,1.598,327,1.515,348,2.07,358,3.935,359,4.86,429,0.826,430,0.867,431,0.867,432,0.867,437,1.358,464,2.257,492,1.358,493,2.657,503,2.07,504,1.508,505,1.508,506,1.508,507,1.508,508,1.508,509,1.508,510,1.508,511,1.508,512,1.508,513,1.508,514,2.257,515,1.508,516,2.507,517,1.508,518,1.508,519,1.508,520,1.508,521,1.508,522,2.507,523,1.508,524,1.508,525,1.508,526,1.508,527,1.508,528,1.508,529,1.508,530,1.508,531,2.257,532,1.508,533,1.245,534,1.508,535,1.508,536,1.508,537,1.508,538,1.508,539,1.508,540,1.508,541,1.508,589,1.358,629,2.07,644,2.07,699,1.358,803,3.374,832,2.07,940,1.358,974,1.358,998,2.257,1016,1.358,1025,2.257,1050,2.257,1112,1.508,1113,2.507,1114,1.508,1123,1.508,1124,1.508,1125,1.508,1126,2.507,1157,1.245,1178,2.507,1220,2.507,1249,1.508,1250,1.736,1251,4.315,1252,2.886,1253,2.886,1254,2.886,1255,2.886,1256,2.886,1257,2.886,1258,2.886,1259,3.704,1260,3.704,1261,2.886,1262,5.953,1263,5.168,1264,7.559,1265,2.886,1266,2.886,1267,4.315,1268,4.315,1269,4.315,1270,1.736,1271,6.566,1272,3.704,1273,2.886,1274,1.736,1275,1.736,1276,1.736,1277,1.736,1278,1.736,1279,1.736,1280,2.886,1281,2.886,1282,4.315,1283,6.566,1284,7.254,1285,6.566,1286,4.79,1287,5.735,1288,4.79,1289,4.79,1290,4.79,1291,5.168,1292,1.736,1293,1.736,1294,2.886,1295,1.736,1296,1.736,1297,1.736,1298,1.736,1299,1.736,1300,1.736,1301,1.736,1302,1.736,1303,1.736,1304,1.736,1305,1.736,1306,1.736,1307,1.736,1308,1.736,1309,1.736,1310,2.886,1311,2.886,1312,2.886,1313,2.886,1314,2.886,1315,4.315,1316,2.886,1317,2.886,1318,2.886,1319,2.886,1320,2.886,1321,2.886,1322,2.886,1323,2.886,1324,2.886,1325,2.886,1326,2.886,1327,1.736]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":409,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":575,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":1247,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":398,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":582,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["100vh",{"_index":403,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":416,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["11.0.0",{"_index":1131,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1243,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":670,"title":{},"body":{"components/HeaderComponent.html":{}}}],["18",{"_index":1246,"title":{},"body":{"overview.html":{}}}],["180.0000000",{"_index":909,"title":{},"body":{"components/SearchComponent.html":{}}}],["2.0.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":922,"title":{},"body":{"components/SearchComponent.html":{}}}],["20",{"_index":399,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{}}}],["25px",{"_index":579,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["28a745",{"_index":933,"title":{},"body":{"components/SearchComponent.html":{}}}],["2px",{"_index":926,"title":{},"body":{"components/SearchComponent.html":{}}}],["3",{"_index":1245,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":932,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["32.003",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":918,"title":{},"body":{"components/SearchComponent.html":{}}}],["34.756",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350px",{"_index":968,"title":{},"body":{"components/SidenavComponent.html":{}}}],["4.1.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":578,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["400",{"_index":515,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":571,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["401",{"_index":521,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":526,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":530,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["40px",{"_index":663,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5",{"_index":668,"title":{},"body":{"components/HeaderComponent.html":{}}}],["500",{"_index":536,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5px",{"_index":683,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["6.6.0",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":680,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1248,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1244,"title":{},"body":{"overview.html":{}}}],["8.64e+7",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["90.0000000",{"_index":907,"title":{},"body":{"components/SearchComponent.html":{}}}],["absolute",{"_index":581,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["abstract",{"_index":35,"title":{},"body":{"classes/AbstractModel.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["abstractmodel",{"_index":1,"title":{"classes/AbstractModel.html":{}},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["abstractmodel:5",{"_index":66,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["abstractmodel:6",{"_index":67,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["abstractmodel:7",{"_index":68,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["abstractmodel:8",{"_index":69,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["access",{"_index":528,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":676,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroute",{"_index":982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["activatedroutesnapshot",{"_index":799,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":48,"title":{"classes/AdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["administrativearea(args?.administrativearea",{"_index":273,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["administrativearea(args?.country",{"_index":275,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["age",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["align",{"_index":664,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["always",{"_index":1022,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["amount",{"_index":397,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["angular",{"_index":1193,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":446,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":886,"title":{},"body":{"components/SearchComponent.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"dependencies.html":{}}}],["animate.css",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["animationmap",{"_index":348,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animationmap[`${this.weathertext.tolowercase",{"_index":356,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["animationmap[this.weathertext.tolowercase",{"_index":355,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["api",{"_index":523,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":75,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"index.html":{}}}],["applicationservice",{"_index":195,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":120,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":131,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":184,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["args",{"_index":22,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IQueryParams.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["args?.conditions",{"_index":725,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.country",{"_index":726,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.dailyforecasts",{"_index":638,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.dailyforecasts?.map(item",{"_index":639,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.day",{"_index":778,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.forecast",{"_index":728,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.geoposition",{"_index":730,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.night",{"_index":780,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.region",{"_index":732,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.timezone",{"_index":734,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args[key",{"_index":38,"title":{},"body":{"classes/AbstractModel.html":{}}}],["array",{"_index":554,"title":{},"body":{"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["artifacts",{"_index":1215,"title":{},"body":{"index.html":{}}}],["assets/datasets/autocomplete.json",{"_index":505,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/conditions.json",{"_index":507,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/forecasts.json",{"_index":509,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/geoposition.json",{"_index":511,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/locations.json",{"_index":513,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/images/anim/${result}.svg",{"_index":360,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["atob(value",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":524,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":420,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["autocomplete",{"_index":258,"title":{"classes/AutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocomplete(item",{"_index":1062,"title":{},"body":{"injectables/WeatherService.html":{}}}],["autocompletemodule",{"_index":598,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":1207,"title":{},"body":{"index.html":{}}}],["available",{"_index":1242,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":390,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bad",{"_index":517,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["behaviorsubject(args?.themeoption",{"_index":236,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["between",{"_index":407,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["black",{"_index":573,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{}}}],["bootstrap",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":684,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bottom",{"_index":574,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["browse",{"_index":1240,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":753,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"index.html":{}}}],["buttonmodule",{"_index":600,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["cached",{"_index":290,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedorigin",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresponse",{"_index":838,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["cachedresult",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresult.lastread",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cacheresult",{"_index":280,"title":{"interfaces/CacheResult.html":{}},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["cacheservice",{"_index":287,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["calc(#{$navbar",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{}}}],["camelcase",{"_index":31,"title":{},"body":{"classes/AbstractModel.html":{},"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["camelcase(x[0])}=${x[1]}`).join",{"_index":755,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{}}}],["caption",{"_index":572,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":568,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":602,"title":{},"body":{"modules/FeatureModule.html":{}}}],["catcherror",{"_index":501,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["catcherror((error",{"_index":543,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["category",{"_index":706,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["center",{"_index":422,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["change",{"_index":1209,"title":{},"body":{"index.html":{}}}],["check",{"_index":1234,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":604,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":594,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["city",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"overview.html":{}}}],["clear",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":1194,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["clouds",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudy",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":424,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":425,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":427,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":426,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":428,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":584,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":587,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":586,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":585,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":694,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":695,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":697,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":696,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":935,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":937,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":938,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":936,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":970,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":971,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":972,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":973,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":1011,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declarations",{"_index":1013,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":1012,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":1014,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":768,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":1199,"title":{},"body":{"index.html":{}}}],["col",{"_index":934,"title":{},"body":{"components/SearchComponent.html":{}}}],["cold",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":394,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["colortheme",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["colortheme.dark",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":419,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["command",{"_index":913,"title":{},"body":{"components/SearchComponent.html":{},"index.html":{}}}],["common.scss",{"_index":389,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/exception",{"_index":448,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/request",{"_index":450,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":452,"title":{},"body":{"modules/ContainerModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["commonmodule",{"_index":445,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["compass",{"_index":916,"title":{},"body":{"components/SearchComponent.html":{}}}],["component",{"_index":74,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["condition",{"_index":539,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":327,"title":{"classes/Conditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["conditions(result[0",{"_index":1066,"title":{},"body":{"injectables/WeatherService.html":{}}}],["config",{"_index":961,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(result",{"_index":1084,"title":{},"body":{"injectables/WeatherService.html":{}}}],["const",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IConditions.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["constants/color",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["constants/data",{"_index":556,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["constants/panel",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{}}}],["constructor(args",{"_index":16,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["constructor(config",{"_index":957,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":1036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":229,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":550,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{}}}],["container",{"_index":363,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":453,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":454,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":455,"title":{},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["container/header/header",{"_index":700,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":701,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":456,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":975,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":976,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":457,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":103,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":132,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":467,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":433,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":405,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["context",{"_index":1025,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ng",{"_index":923,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinates",{"_index":187,"title":{},"body":{"classes/AppSettings.html":{},"components/SearchComponent.html":{}}}],["countries",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":260,"title":{"classes/Country.html":{}},"body":{"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":51,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["coverage",{"_index":1100,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":1026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["created",{"_index":11,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["createform",{"_index":852,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentoption",{"_index":853,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentroute",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{}}}],["d",{"_index":996,"title":{},"body":{"components/WeatherComponent.html":{}}}],["dailyforecasts",{"_index":636,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":1172,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":1090,"title":{},"body":{"injectables/WeatherService.html":{}}}],["datasets",{"_index":555,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["datasets.locations",{"_index":562,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["date",{"_index":24,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["date.now",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["date:'eeee",{"_index":994,"title":{},"body":{"components/WeatherComponent.html":{}}}],["date:\\'eeee",{"_index":1009,"title":{},"body":{"components/WeatherComponent.html":{}}}],["datestring",{"_index":980,"title":{},"body":{"components/WeatherComponent.html":{}}}],["day",{"_index":358,"title":{"classes/Day.html":{}},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debouncetime",{"_index":877,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":894,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":832,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(providers.weather.apikey",{"_index":837,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["default",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"classes/Location.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":122,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":1204,"title":{},"body":{"index.html":{}}}],["development",{"_index":1201,"title":{},"body":{"index.html":{}}}],["direction",{"_index":418,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["directive",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1214,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1217,"title":{},"body":{"index.html":{}}}],["display",{"_index":400,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":1216,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":878,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dreary",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drizzle",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdownmodule",{"_index":606,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":914,"title":{},"body":{"components/SearchComponent.html":{}}}],["e.item",{"_index":915,"title":{},"body":{"components/SearchComponent.html":{}}}],["e2e",{"_index":1228,"title":{},"body":{"index.html":{}}}],["ease",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["eeee",{"_index":1004,"title":{},"body":{"components/WeatherComponent.html":{}}}],["effectivedate",{"_index":707,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":708,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["element",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":480,"title":{"classes/Elevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["elevation(args?.elevation",{"_index":647,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["encodebase64",{"_index":1050,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["encodebase64(json.stringify(this.context",{"_index":1099,"title":{},"body":{"injectables/WeatherService.html":{}}}],["encountered",{"_index":537,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1227,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":709,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":710,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endpoint",{"_index":529,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["englishname",{"_index":52,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["englishtype",{"_index":53,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["entry.lastread",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["enumerations",{"_index":1158,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":803,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":806,"title":{},"body":{"guards/LocationResolver.html":{}}}],["epochdate",{"_index":773,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["epochtime",{"_index":329,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["errors",{"_index":514,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":384,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.query",{"_index":897,"title":{},"body":{"components/SearchComponent.html":{}}}],["event.ts",{"_index":738,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":387,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":656,"title":{},"body":{"components/HeaderComponent.html":{}}}],["exceptioninterceptor",{"_index":434,"title":{"interceptors/ExceptionInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["execute",{"_index":1224,"title":{},"body":{"index.html":{}}}],["expire",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":661,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":50,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["f",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":673,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["failed",{"_index":525,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":248,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorites",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/enumerations.html":{}}}],["favorites'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":549,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":548,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":590,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":591,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":105,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":583,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":593,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":588,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":429,"title":{"modules/FeatureModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fieldsetmodule",{"_index":608,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1210,"title":{},"body":{"index.html":{}}}],["filter((x",{"_index":1054,"title":{},"body":{"injectables/WeatherService.html":{}}}],["flag",{"_index":1219,"title":{},"body":{"index.html":{}}}],["flagicon",{"_index":261,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["flex",{"_index":401,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["flurries",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focusevent",{"_index":760,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["fog",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font",{"_index":674,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["forecast",{"_index":627,"title":{"classes/Forecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["forecast(result",{"_index":1069,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forecast.web.app",{"_index":1198,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":1200,"title":{},"body":{"index.html":{}}}],["forecasts",{"_index":629,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forkjoin",{"_index":1049,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forkjoin(of(location",{"_index":1072,"title":{},"body":{"injectables/WeatherService.html":{}}}],["form",{"_index":921,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol",{"_index":884,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol(undefined",{"_index":903,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":867,"title":{},"body":{"components/SearchComponent.html":{}}}],["forroot",{"_index":439,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":440,"title":{},"body":{"modules/ContainerModule.html":{}}}],["found",{"_index":532,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["freezing",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fsevents",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":541,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1230,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1212,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1192,"title":{},"body":{"index.html":{}}}],["geolatlng",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["geoposition",{"_index":214,"title":{"classes/GeoPosition.html":{}},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geoposition(default_location",{"_index":249,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["geoposition({latitude",{"_index":242,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["get(`${providers.weather.conditions}/${locationkey",{"_index":1064,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.forecasts}/${locationkey",{"_index":1067,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.locations}/${key",{"_index":1081,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(datasets.locations",{"_index":1053,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.autocomplete",{"_index":1059,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.geoposition",{"_index":1070,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(req",{"_index":295,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["getanimation",{"_index":330,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["getconditions",{"_index":1027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext",{"_index":1028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext(null",{"_index":561,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["getcurrentposition",{"_index":239,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getforecast",{"_index":1029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getgeoposition",{"_index":1030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticon",{"_index":331,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["getlocation",{"_index":1031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getstaticoutput",{"_index":1032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getting",{"_index":1189,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["given",{"_index":534,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gmtoffset",{"_index":769,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["go",{"_index":1233,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":392,"title":{},"body":{"components/ContainerComponent.html":{}}}],["gradient(to",{"_index":666,"title":{},"body":{"components/HeaderComponent.html":{}}}],["graph",{"_index":1241,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":792,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":793,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":26,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"dependencies.html":{}}}],["guid.newguid().tostring",{"_index":42,"title":{},"body":{"classes/AbstractModel.html":{}}}],["hail",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasprecipitation",{"_index":332,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["hazy",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":649,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["header'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":650,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":107,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":430,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":703,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":698,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headline",{"_index":630,"title":{"classes/Headline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["headline(args?.headline",{"_index":642,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":402,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1231,"title":{},"body":{"index.html":{}}}],["helpers/animation",{"_index":349,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["helpers/app",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/formatters",{"_index":32,"title":{},"body":{"classes/AbstractModel.html":{},"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["helpers/menu",{"_index":883,"title":{},"body":{"components/SearchComponent.html":{}}}],["helpers/search",{"_index":881,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":412,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hot",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":958,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":1206,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":447,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":959,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/SidenavModule.html":{}}}],["httperrorresponse",{"_index":498,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["httpevent",{"_index":499,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httphandler",{"_index":496,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpinterceptor",{"_index":500,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["httprequest",{"_index":296,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["httpresponse",{"_index":286,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["https://dataservice.accuweather.com",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/currentconditions/v1",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/forecasts/v1/daily/5day",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":57,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iautocomplete",{"_index":266,"title":{"interfaces/IAutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["ice",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":474,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"components/SearchComponent.html":{}}}],["iconditions",{"_index":340,"title":{"interfaces/IConditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["iconphrase",{"_index":475,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":470,"title":{"interfaces/ICountry.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["iday",{"_index":476,"title":{"interfaces/IDay.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["identifier",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["ielevation",{"_index":484,"title":{"interfaces/IElevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":631,"title":{"interfaces/IForecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["igeoposition",{"_index":189,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iheadline",{"_index":632,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":712,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["imenuevent",{"_index":736,"title":{"interfaces/IMenuEvent.html":{}},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["imetric",{"_index":485,"title":{"interfaces/IMetric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["imperial",{"_index":482,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["implements",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IQueryParams.html":{},"guards/LocationResolver.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./weather/weather.module",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":65,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["injectable",{"_index":194,"title":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":880,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["inputevent",{"_index":759,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":956,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":610,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":386,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept",{"_index":494,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept(req",{"_index":495,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interceptor",{"_index":449,"title":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":493,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.ts:11",{"_index":829,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:14",{"_index":830,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:23",{"_index":497,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptors",{"_index":491,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["interface",{"_index":72,"title":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":281,"title":{},"body":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["intermittent",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid",{"_index":520,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["invalid:not(.ng",{"_index":924,"title":{},"body":{"components/SearchComponent.html":{}}}],["iqueryparams",{"_index":745,"title":{"interfaces/IQueryParams.html":{}},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{}}}],["isalias",{"_index":714,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isdaylightsaving",{"_index":770,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["isdaytime",{"_index":333,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":756,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":722,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isloading",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["isloadingchanged",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["item",{"_index":570,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/IMenuEvent.html":{},"injectables/WeatherService.html":{}}}],["item.conditions.temperature.metric.unit",{"_index":567,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.conditions.temperature.metric.value",{"_index":566,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.conditions.weathertext",{"_index":565,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.date",{"_index":1003,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.key",{"_index":1096,"title":{},"body":{"injectables/WeatherService.html":{}}}],["item.localizedname",{"_index":564,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.substring(1",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.temperature.maximum.unit",{"_index":1008,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.temperature.maximum.value",{"_index":1007,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.temperature.minimum.unit",{"_index":1006,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item.temperature.minimum.value",{"_index":1005,"title":{},"body":{"components/WeatherComponent.html":{}}}],["item[0].touppercase",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemperature",{"_index":350,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["items",{"_index":665,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["itimezone",{"_index":717,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["iweather",{"_index":634,"title":{"interfaces/IWeather.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["join",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jquery",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["json.parse(decodebase64(localstorage.getitem(encodebase64('context",{"_index":1086,"title":{},"body":{"injectables/WeatherService.html":{}}}],["json.stringify(result).split",{"_index":966,"title":{},"body":{"components/SidenavComponent.html":{}}}],["justify",{"_index":404,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["karma",{"_index":1226,"title":{},"body":{"index.html":{}}}],["key",{"_index":262,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"interfaces/IQueryParams.html":{},"classes/Location.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["keyfiltermodule",{"_index":612,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":911,"title":{},"body":{"components/SearchComponent.html":{}}}],["languages",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastread",{"_index":283,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["lat",{"_index":748,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["latitude",{"_index":644,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":576,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["legend",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":54,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":396,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["linear",{"_index":391,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":334,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["literal",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":1196,"title":{},"body":{"index.html":{}}}],["lng",{"_index":749,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["loadchildren",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localizedname",{"_index":55,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["localizedtype",{"_index":56,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":335,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["localstorage.getitem(encodebase64('context",{"_index":1085,"title":{},"body":{"injectables/WeatherService.html":{}}}],["localstorage.setitem(encodebase64('context",{"_index":1098,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location",{"_index":553,"title":{"classes/Location.html":{}},"body":{"components/FavoritesComponent.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["location(location",{"_index":1083,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location(results[0]).update(results[1",{"_index":1077,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location.key",{"_index":1056,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationinput",{"_index":854,"title":{},"body":{"components/SearchComponent.html":{}}}],["locationkey",{"_index":1063,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationresolver",{"_index":451,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{}}}],["locations",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationtype",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":244,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.weathermodule",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":417,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"classes/Conditions.html":{},"interfaces/IConditions.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["map(item",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["margin",{"_index":408,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["marker",{"_index":912,"title":{},"body":{"components/SearchComponent.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":421,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{}}}],["maxage",{"_index":291,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["maximum",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ITemperature.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{}}}],["measure",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":678,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menuitem",{"_index":740,"title":{},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["mergemap",{"_index":801,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["messageservice",{"_index":443,"title":{},"body":{"modules/ContainerModule.html":{}}}],["metadata",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":292,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":483,"title":{"classes/Metric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["metric(args?.imperial",{"_index":488,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.maximum",{"_index":764,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.metric",{"_index":490,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.minimum",{"_index":766,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["min",{"_index":682,"title":{},"body":{"components/HeaderComponent.html":{},"components/WeatherComponent.html":{}}}],["minimum",{"_index":762,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["miscellaneous",{"_index":1157,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":995,"title":{},"body":{"components/WeatherComponent.html":{}}}],["mobilelink",{"_index":336,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["mode.enum",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":1169,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":71,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":471,"title":{},"body":{"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{}}}],["model.ts:11",{"_index":478,"title":{},"body":{"classes/Day.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:12",{"_index":477,"title":{},"body":{"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:13",{"_index":59,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:14",{"_index":60,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{}}}],["model.ts:15",{"_index":61,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{}}}],["model.ts:16",{"_index":63,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Day.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:17",{"_index":64,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:18",{"_index":58,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:19",{"_index":269,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:20",{"_index":267,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:21",{"_index":343,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:22",{"_index":344,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:23",{"_index":345,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:24",{"_index":346,"title":{},"body":{"classes/Conditions.html":{}}}],["model.ts:25",{"_index":347,"title":{},"body":{"classes/Conditions.html":{}}}],["model.ts:26",{"_index":270,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:27",{"_index":268,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:28",{"_index":782,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:29",{"_index":783,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:30",{"_index":784,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:31",{"_index":342,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:32",{"_index":341,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:33",{"_index":785,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:34",{"_index":786,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:35",{"_index":787,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:36",{"_index":788,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:37",{"_index":789,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:38",{"_index":790,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:39",{"_index":781,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:5",{"_index":25,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:51",{"_index":791,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:6",{"_index":28,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:7",{"_index":29,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:8",{"_index":18,"title":{},"body":{"classes/AbstractModel.html":{}}}],["model.ts:9",{"_index":472,"title":{},"body":{"classes/Country.html":{},"classes/Elevation.html":{},"classes/Metric.html":{}}}],["models/abstract",{"_index":70,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["models/administrativearea",{"_index":271,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/autocomplete",{"_index":882,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/cache",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["models/conditions",{"_index":718,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/country",{"_index":719,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/day",{"_index":775,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/elevation",{"_index":645,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":720,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/geoposition",{"_index":193,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/headline",{"_index":633,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["models/location",{"_index":558,"title":{},"body":{"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["models/metric",{"_index":486,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["models/temperature",{"_index":351,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/timezone",{"_index":721,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/weather",{"_index":635,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":119,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":121,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":442,"title":{},"body":{"modules/ContainerModule.html":{}}}],["moonlight",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1232,"title":{},"body":{"index.html":{}}}],["mostly",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["multi",{"_index":463,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":13,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":669,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1205,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":238,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":40,"title":{},"body":{"classes/AbstractModel.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":252,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"components/WeatherComponent.html":{}}}],["next.handle(req",{"_index":840,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":542,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["next.handle(req.clone",{"_index":544,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["nextoffsetchange",{"_index":771,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["ng",{"_index":1202,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["ngoninit",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":359,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":681,"title":{},"body":{"components/HeaderComponent.html":{}}}],["number",{"_index":62,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["object",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":752,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{}}}],["object.entries(this).map(x",{"_index":754,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{}}}],["object.keys(args)?.foreach(key",{"_index":36,"title":{},"body":{"classes/AbstractModel.html":{}}}],["observable",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["of(cachedresponse",{"_index":841,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["of(this.getcontext(key",{"_index":1080,"title":{},"body":{"injectables/WeatherService.html":{}}}],["oninit",{"_index":362,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":855,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":856,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onsubmit",{"_index":857,"title":{},"body":{"components/SearchComponent.html":{}}}],["opacity",{"_index":577,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["options",{"_index":920,"title":{},"body":{"components/SearchComponent.html":{}}}],["origin",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["original",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.includes",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.split",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1).length",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].tolowercase",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].touppercase",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["originalevent",{"_index":739,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{}}}],["out",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":659,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["outputs",{"_index":653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overcast",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overflow",{"_index":410,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1235,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1129,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":414,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["page",{"_index":1237,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{}}}],["panelstate.show",{"_index":388,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["parammap",{"_index":802,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params",{"_index":804,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["params.get('lng",{"_index":819,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.has('key",{"_index":814,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.has('lat",{"_index":816,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.has('lng",{"_index":817,"title":{},"body":{"guards/LocationResolver.html":{}}}],["params.ts",{"_index":747,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{}}}],["params.ts:10",{"_index":825,"title":{},"body":{"classes/QueryParams.html":{}}}],["params.ts:11",{"_index":822,"title":{},"body":{"classes/QueryParams.html":{}}}],["params.ts:15",{"_index":823,"title":{},"body":{"classes/QueryParams.html":{}}}],["params.ts:9",{"_index":824,"title":{},"body":{"classes/QueryParams.html":{}}}],["partly",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["pathmatch",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permission",{"_index":527,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":842,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["pipe(map(result",{"_index":1060,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(map(results",{"_index":1075,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(mergemap",{"_index":810,"title":{},"body":{"guards/LocationResolver.html":{}}}],["pipe(mergemap(location",{"_index":1071,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pointerevent",{"_index":741,"title":{},"body":{"interfaces/IMenuEvent.html":{}}}],["popper.js",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":580,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["predicate",{"_index":1093,"title":{},"body":{"injectables/WeatherService.html":{}}}],["preferences",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prevented",{"_index":540,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":1197,"title":{},"body":{"index.html":{}}}],["primary",{"_index":395,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":444,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["primeng/autocomplete",{"_index":599,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":601,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":603,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":605,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":607,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":609,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":611,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":613,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":615,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":617,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":619,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":621,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":623,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":625,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":597,"title":{},"body":{"modules/FeatureModule.html":{}}}],["pristine",{"_index":925,"title":{},"body":{"components/SearchComponent.html":{}}}],["pristine):focus",{"_index":931,"title":{},"body":{"components/SearchComponent.html":{}}}],["private",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":1218,"title":{},"body":{"index.html":{}}}],["production",{"_index":1220,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1191,"title":{},"body":{"index.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":1229,"title":{},"body":{"index.html":{}}}],["provide",{"_index":461,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${this.country.id}/flat/32.png",{"_index":279,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["providers.weather.autocomplete",{"_index":504,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.conditions",{"_index":506,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.forecasts",{"_index":508,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.geoposition",{"_index":510,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.icons}/${this.icon}.svg",{"_index":479,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["providers.weather.icons}/${this.weathericon}.svg",{"_index":354,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["providers.weather.locations",{"_index":512,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":293,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["put(req",{"_index":301,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["q",{"_index":751,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"injectables/WeatherService.html":{}}}],["query",{"_index":758,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["queryparams",{"_index":750,"title":{"classes/QueryParams.html":{}},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["radiobuttonmodule",{"_index":614,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rain",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rank",{"_index":263,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reactiveformsmodule",{"_index":941,"title":{},"body":{"modules/SearchModule.html":{}}}],["readonly",{"_index":289,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["red",{"_index":928,"title":{},"body":{"components/SearchComponent.html":{}}}],["redirectto",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1236,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":873,"title":{},"body":{"components/SearchComponent.html":{}}}],["region",{"_index":715,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reload",{"_index":1208,"title":{},"body":{"index.html":{}}}],["req",{"_index":298,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.clone",{"_index":835,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.params.append('apikey",{"_index":836,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.url.includes(key",{"_index":546,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["req.url.includes(providers.weather.baseurl",{"_index":834,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["request",{"_index":516,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestcache",{"_index":308,"title":{"classes/RequestCache.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["requestinterceptor",{"_index":435,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":796,"title":{},"body":{"guards/LocationResolver.html":{},"modules/WeatherRoutingModule.html":{}}}],["resolve(route",{"_index":798,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolveaccordingly",{"_index":795,"title":{},"body":{"guards/LocationResolver.html":{}}}],["response",{"_index":284,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.map(item",{"_index":1061,"title":{},"body":{"injectables/WeatherService.html":{}}}],["result.tostring",{"_index":917,"title":{},"body":{"components/SearchComponent.html":{}}}],["result['location",{"_index":989,"title":{},"body":{"components/WeatherComponent.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[2",{"_index":1078,"title":{},"body":{"injectables/WeatherService.html":{}}}],["return",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":299,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":667,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["ripplemodule",{"_index":616,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":533,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["route.queryparammap",{"_index":805,"title":{},"body":{"guards/LocationResolver.html":{}}}],["router",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["routermodule",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":468,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":595,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":704,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":946,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(weatherroutes",{"_index":1023,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":168,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/WeatherModule.html":{}}}],["routing.module.ts",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["run",{"_index":1195,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1021,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["running",{"_index":1221,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":502,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["scaffolding",{"_index":1211,"title":{},"body":{"index.html":{}}}],["screen",{"_index":679,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":847,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":849,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":848,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":942,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":943,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["search/search.module",{"_index":458,"title":{},"body":{"modules/ContainerModule.html":{}}}],["searchcomponent",{"_index":109,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":431,"title":{"modules/SearchModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["searchoptions",{"_index":858,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchpattern",{"_index":859,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchquery",{"_index":850,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchroutes",{"_index":945,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":939,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["selector",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":1203,"title":{},"body":{"index.html":{}}}],["server",{"_index":531,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services/application.service",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SidenavComponent.html":{}}}],["services/cache.service",{"_index":459,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["services/weather.service",{"_index":460,"title":{},"body":{"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{}}}],["set(datasets.conditions",{"_index":1087,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set(datasets.forecasts",{"_index":1088,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set(datasets.locations",{"_index":1089,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcontext",{"_index":1033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setobservables",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setoptions",{"_index":860,"title":{},"body":{"components/SearchComponent.html":{}}}],["sets.enum",{"_index":557,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/WeatherService.html":{}}}],["sets.enum.ts",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":949,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":948,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":186,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":188,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":192,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":190,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":191,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":111,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":711,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["shadow",{"_index":662,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["showers",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sidenav",{"_index":423,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":955,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":954,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":969,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":967,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":654,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavcomponent",{"_index":113,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{}}}],["sidenavmodule",{"_index":432,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavpanel",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["sidenavstate",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sitetheme",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["sitethemechanged",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["size",{"_index":675,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["sleet",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":919,"title":{},"body":{"components/SearchComponent.html":{}}}],["snow",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":927,"title":{},"body":{"components/SearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":774,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["space",{"_index":406,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["spec\\.ts",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animation",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exception",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formatters.ts",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":1167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":1168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":466,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":361,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:17",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:28",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:33",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":437,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:42",{"_index":441,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":596,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":702,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":648,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":655,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":658,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":657,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":699,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":947,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":951,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":950,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":953,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:12",{"_index":962,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":960,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:15",{"_index":963,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":974,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":592,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":547,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:12",{"_index":551,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:17",{"_index":552,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":589,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":944,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":846,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:19",{"_index":863,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:20",{"_index":864,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:21",{"_index":866,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:22",{"_index":868,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:23",{"_index":872,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":861,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:26",{"_index":862,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:36",{"_index":869,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:38",{"_index":870,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:40",{"_index":871,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:42",{"_index":865,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:47",{"_index":876,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":940,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather",{"_index":1019,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["src/app/weather/weather.component.ts",{"_index":977,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:12",{"_index":985,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:13",{"_index":983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:19",{"_index":986,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:23",{"_index":984,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":1016,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":1171,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/animation",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/app",{"_index":185,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/formatters.ts",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/menu",{"_index":737,"title":{},"body":{"interfaces/IMenuEvent.html":{},"coverage.html":{}}}],["src/common/helpers/query",{"_index":746,"title":{},"body":{"interfaces/IQueryParams.html":{},"classes/QueryParams.html":{},"coverage.html":{}}}],["src/common/helpers/search",{"_index":757,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/exception",{"_index":492,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interceptors/request",{"_index":828,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractModel.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":49,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":259,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"coverage.html":{}}}],["src/common/models/cache",{"_index":282,"title":{},"body":{"interfaces/CacheResult.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":328,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":469,"title":{},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":473,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":481,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":628,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":643,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":705,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":713,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":742,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":761,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":767,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":772,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":794,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:11",{"_index":797,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:13",{"_index":800,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:12",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:13",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":213,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:19",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:20",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:28",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:45",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/cache.service.ts",{"_index":288,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["src/common/services/cache.service.ts:12",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:13",{"_index":294,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:16",{"_index":297,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:25",{"_index":302,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:6",{"_index":826,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/cache.service.ts:7",{"_index":827,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/weather.service.ts",{"_index":1024,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:17",{"_index":1037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:20",{"_index":1047,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:25",{"_index":1038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:29",{"_index":1040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:33",{"_index":1042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:37",{"_index":1043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:44",{"_index":1044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:53",{"_index":1045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:60",{"_index":1039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:68",{"_index":1046,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:73",{"_index":1041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:77",{"_index":1048,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1190,"title":{"index.html":{}},"body":{}}],["state.enum",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":1170,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":438,"title":{},"body":{"modules/ContainerModule.html":{}}}],["stored",{"_index":503,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stored[object.keys(stored).find(key",{"_index":545,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["storms",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{},"components/SearchComponent.html":{}}}],["subscriber",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.complete",{"_index":247,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(this.geolatlng",{"_index":246,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(value",{"_index":254,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success",{"_index":240,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":243,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":245,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":851,"title":{},"body":{"components/SearchComponent.html":{}}}],["sunny",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sunshine",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(args",{"_index":73,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["supplied",{"_index":519,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1238,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1239,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":879,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":895,"title":{},"body":{"components/SearchComponent.html":{}}}],["syntax",{"_index":518,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":618,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tap",{"_index":831,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["tap((event",{"_index":843,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["teal",{"_index":930,"title":{},"body":{"components/SearchComponent.html":{}}}],["tel",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":337,"title":{"classes/Temperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["temperature(args?.temperature",{"_index":353,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["template",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":1223,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1222,"title":{},"body":{"index.html":{}}}],["text",{"_index":677,"title":{},"body":{"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{},"components/SearchComponent.html":{}}}],["theme",{"_index":1173,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["theme.enum",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["theme.enum.ts",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["themeoption",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{}}}],["then(m",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["thermometer",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$isloading",{"_index":250,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.$isloadingchanged",{"_index":234,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$isloadingchanged.subscribe",{"_index":251,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$searchquery",{"_index":891,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.$searchquery.next(event.query",{"_index":898,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.$searchquery.pipe",{"_index":893,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.$sitetheme",{"_index":255,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.$sitethemechanged",{"_index":235,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$sitethemechanged.subscribe",{"_index":256,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.$suggestions",{"_index":892,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.administrativearea",{"_index":272,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.administrativearea.localizedname",{"_index":278,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.application",{"_index":809,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.$isloading",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.$isloadingchanged.next(false",{"_index":845,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.$isloadingchanged.next(true",{"_index":833,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.$sitetheme",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.geolatlng",{"_index":808,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.geolatlng?.longitude",{"_index":821,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.sidenavstate",{"_index":382,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.args?.sidenavmode",{"_index":231,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavstate",{"_index":233,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.cache.get(req",{"_index":839,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cache.put(req",{"_index":844,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cached.foreach(entry",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.get(cachedorigin",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.set(origin",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.conditions",{"_index":724,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.constructor.name",{"_index":44,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.context",{"_index":1052,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(data).slice().find((item",{"_index":1097,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(data).some(predicate",{"_index":1095,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(data).unshift(value",{"_index":1092,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.country",{"_index":274,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.country.localizedname",{"_index":277,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.createcontext",{"_index":1051,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.created",{"_index":39,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.createform",{"_index":887,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentoption",{"_index":889,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentroute",{"_index":385,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.datasets",{"_index":723,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.day",{"_index":777,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.elevation",{"_index":646,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["this.favorites",{"_index":559,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.forecast",{"_index":727,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.forecasts",{"_index":637,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.geolatlng",{"_index":241,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.geoposition",{"_index":729,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.getconditions(location.key",{"_index":1073,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(key",{"_index":1079,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(null",{"_index":1091,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getforecast(location.key",{"_index":1074,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.headline",{"_index":641,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.http",{"_index":1058,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get('../../../assets/datasets/output.json').topromise().then(result",{"_index":964,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.http.get('../../assets/datasets/output.json').pipe(map(location",{"_index":1082,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.id",{"_index":41,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.imperial",{"_index":487,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.isdaytime",{"_index":357,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["this.isloading",{"_index":253,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.localizedname",{"_index":276,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.location",{"_index":988,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location.forecast.headline.effectivedate",{"_index":993,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location.isfavorite",{"_index":990,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.imperial.unit",{"_index":1002,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.imperial.value",{"_index":1001,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.metric.unit",{"_index":1000,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.temperature.metric.value",{"_index":999,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.conditions.weathertext",{"_index":997,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location?.localizedname",{"_index":992,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.locationinput",{"_index":902,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.locationinput.value",{"_index":901,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.maxage",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.maximum",{"_index":763,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.metric",{"_index":489,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.minimum",{"_index":765,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.night",{"_index":779,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.output",{"_index":965,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.primengconfig.ripple",{"_index":626,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.region",{"_index":731,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.resolveaccordingly(params",{"_index":813,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.route.data.subscribe",{"_index":987,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.router.events.subscribe",{"_index":383,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.router.navigate(['weather",{"_index":899,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions",{"_index":910,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions[0",{"_index":890,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setcontext(datasets.conditions",{"_index":1065,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext(datasets.forecasts",{"_index":1068,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext(datasets.locations",{"_index":1076,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setobservables",{"_index":237,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setoptions",{"_index":888,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.sidenavchanged.emit",{"_index":660,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavpanel",{"_index":230,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":232,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sitetheme",{"_index":257,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sources",{"_index":776,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.temperature",{"_index":352,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.timezone",{"_index":733,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.type",{"_index":43,"title":{},"body":{"classes/AbstractModel.html":{}}}],["this.weather",{"_index":560,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.weather.autocomplete(text.tolowercase",{"_index":896,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.weather.getgeoposition(+params.get('lat",{"_index":818,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getgeoposition(this.application.geolatlng?.latitude",{"_index":820,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getgeoposition(x.latitude",{"_index":811,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getlocation(params.get('key",{"_index":815,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.getstaticoutput",{"_index":807,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.weather.updatecontext(this.location",{"_index":991,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this[camelcase(key",{"_index":37,"title":{},"body":{"classes/AbstractModel.html":{}}}],["thunderstorms",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timezone",{"_index":716,"title":{"classes/TimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["titlecase",{"_index":998,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastmodule",{"_index":620,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglebuttonmodule",{"_index":622,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglefavorite",{"_index":981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["togglesidenav",{"_index":652,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tooltipmodule",{"_index":624,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":393,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostring",{"_index":264,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["transition",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":464,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":33,"title":{},"body":{"classes/AbstractModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/IQueryParams.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorized",{"_index":522,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":300,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["unexpected",{"_index":538,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":743,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"index.html":{}}}],["unittype",{"_index":744,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{}}}],["unknown",{"_index":1094,"title":{},"body":{"injectables/WeatherService.html":{}}}],["unshift(location",{"_index":1057,"title":{},"body":{"injectables/WeatherService.html":{}}}],["update",{"_index":735,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["updatecontext",{"_index":1034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updatestorage",{"_index":1035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["uri",{"_index":535,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":285,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["use",{"_index":1213,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":462,"title":{},"body":{"modules/ContainerModule.html":{}}}],["usevalue",{"_index":465,"title":{},"body":{"modules/ContainerModule.html":{}}}],["valid:not(.ng",{"_index":929,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators",{"_index":885,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(180.0000000",{"_index":908,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(90.0000000",{"_index":905,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.min",{"_index":906,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.required",{"_index":904,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.key",{"_index":900,"title":{},"body":{"components/SearchComponent.html":{}}}],["var",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1249,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":265,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"index.html":{}}}],["via",{"_index":1225,"title":{},"body":{"index.html":{}}}],["void",{"_index":303,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["w",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather",{"_index":116,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather(item",{"_index":640,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["weather.component.html",{"_index":979,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":978,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather",{"_index":1017,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.component",{"_index":1018,"title":{},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["weathercomponent",{"_index":115,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":338,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["weathermodule",{"_index":1010,"title":{"modules/WeatherModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherroutes",{"_index":1020,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["weatherroutingmodule",{"_index":1015,"title":{"modules/WeatherRoutingModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":436,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":339,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":569,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":415,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["wind",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windy",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":952,"title":{},"body":{"components/SettingsComponent.html":{}}}],["x",{"_index":411,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["x.isfavorite",{"_index":563,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["x.key",{"_index":1055,"title":{},"body":{"injectables/WeatherService.html":{}}}],["x.longitude",{"_index":812,"title":{},"body":{"guards/LocationResolver.html":{}}}],["y",{"_index":413,"title":{},"body":{"components/ContainerComponent.html":{},"components/WeatherComponent.html":{}}}],["yes",{"_index":23,"title":{},"body":{"classes/AbstractModel.html":{},"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/QueryParams.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":875,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":874,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractModel.html":{"url":"classes/AbstractModel.html","title":"class - AbstractModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/abstract-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/abstract-model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/abstract-model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { camelCase } from '@helpers/formatters';\nimport { Guid } from 'guid-ts'\n\nexport abstract class AbstractModel {\n  public created: Date;\n  public id: Guid | string;\n  public name: string;\n  public type: string;\n  constructor(args?: any) {\n    args ? Object.keys(args)?.forEach(key => this[camelCase(key)] = this[camelCase(key)] ?? args[key]) : {};\n    this.created = new Date();\n    this.id = this.id ?? Guid.newGuid().toString();\n    this.type = this.type ?? this.constructor.name;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdministrativeArea.html":{"url":"classes/AdministrativeArea.html","title":"class - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                englishType\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                localizedType\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAdministrativeArea)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAdministrativeArea\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends AbstractModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorTheme              } from '@constants/color-theme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule          ,\n    BrowserAnimationsModule,\n    HttpClientModule       ,\n    AppRoutingModule       ,\n    ContainerModule.forRoot({\n      themeOption : ColorTheme.Dark,\n      sidenavMode : PanelMode .Push,\n      sidenavState: PanelState.Hide,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: 'weather'  , loadChildren: () => \"import('./weather/weather.module'    ).then(m => m.WeatherModule  )\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'weather' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                coordinates\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                themeOption\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            coordinates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            themeOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorTheme   } from '@constants/color-theme.enum'\nimport { PanelMode    } from '@constants/panel-mode.enum'\nimport { PanelState   } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public themeOption ?: ColorTheme  ;\n  public coordinates ?: IGeoPosition;\n  public sidenavMode ?: PanelMode   ;\n  public sidenavState?: PanelState  ;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $isLoading\n                            \n                            \n                                    Public\n                                $isLoadingChanged\n                            \n                            \n                                    Public\n                                $siteTheme\n                            \n                            \n                                    Public\n                                $siteThemeChanged\n                            \n                            \n                                    Public\n                                geoLatLng\n                            \n                            \n                                    Public\n                                getUserLocation\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Private\n                                setObservables\n                            \n                            \n                                    Public\n                                sidenavPanel\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                siteTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $isLoadingChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $siteTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $siteThemeChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoLatLng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            siteTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BehaviorSubject , Observable, Subject, Subscriber } from 'rxjs'\nimport { Injectable                                        } from '@angular/core'\nimport { ColorTheme                                        } from '@constants/color-theme.enum'\nimport { PanelMode                                         } from '@constants/panel-mode.enum'\nimport { PanelState                                        } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION                                  } from '@env/environment'\nimport { AppSettings                                       } from '@helpers/app-settings'\nimport { GeoPosition                                       } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public $isLoading       : Observable   ;\n  public $isLoadingChanged: Subject      ;\n  public $siteTheme       : Observable;\n  public $siteThemeChanged: Subject   ;\n  public geoLatLng        : GeoPosition           ;\n  public isLoading        : boolean               ;\n  public siteTheme        : ColorTheme            ;\n  public sidenavPanel     : PanelMode             ;\n  public sidenavState     : PanelState            ;\n  constructor(private args?: AppSettings) {\n    this.sidenavPanel = this.args?.sidenavMode ;\n    this.sidenavState = this.args?.sidenavState;\n    this.$isLoadingChanged = new Subject();\n    this.$siteThemeChanged = new BehaviorSubject(args?.themeOption);\n    this.setObservables();\n  }\n  public getUserLocation = (): Observable => new Observable(\n    (subscriber: Subscriber) => {\n      navigator.geolocation\n        .getCurrentPosition(\n          (success) => {\n            this.geoLatLng = new GeoPosition({latitude: success.coords.latitude, longitude: success.coords.longitude});\n            subscriber.next(this.geoLatLng);\n            subscriber.complete();\n          },\n          (failure) => {\n            this.geoLatLng = new GeoPosition(DEFAULT_LOCATION);\n            subscriber.next(this.geoLatLng);\n            subscriber.complete();\n          });\n    }\n  )\n\n  private setObservables = () => {\n    this.$isLoading = new Observable(\n      subscriber => {\n        this.$isLoadingChanged.subscribe({\n          next: value => {\n            if (value != this.isLoading) {\n              this.isLoading = value;\n              subscriber.next(value);\n            }\n          }\n        })\n      });\n\n    this.$siteTheme = new Observable(\n      subscriber => {\n        this.$siteThemeChanged.subscribe({\n          next: value => {\n            if (value != this.siteTheme) {\n              this.siteTheme = value;\n              subscriber.next(value);\n            }\n          }\n        })\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoComplete.html":{"url":"classes/AutoComplete.html","title":"class - AutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                flagIcon\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                version\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAutoComplete)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAutoComplete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { AbstractModel                               } from '@models/abstract-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName}, ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/flat/32.png`;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheResult.html":{"url":"interfaces/CacheResult.html","title":"interface - CacheResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/cache-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        lastRead\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\n\nexport interface CacheResult {\n  lastRead?: number           ;\n  response?: HttpResponse;\n  url     ?: string           ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cached\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxAge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cached\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8.64e+7\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conditions.html":{"url":"classes/Conditions.html","title":"class - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                getAnimation\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAnimation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                  } from '@env/environment'\nimport { animationMap               } from '@helpers/animation-map'\nimport { AbstractModel              } from '@models/abstract-model'\nimport { ITemperature , Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends AbstractModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n  public getAnimation = (): string => {\n    const result = animationMap[this.weatherText.toLowerCase()]\n    ?? animationMap[`${this.weatherText.toLowerCase()} ${this.isDayTime ? 'day' : 'night'}`];\n    return `../../assets/images/anim/${result}.svg`;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $isLoading\n                            \n                            \n                                    Public\n                                $siteTheme\n                            \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $siteTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable                 } from 'rxjs'\nimport { Component         , OnInit } from '@angular/core'\nimport { NavigationEnd     , Router } from '@angular/router'\nimport { ColorTheme                 } from '@constants/color-theme.enum'\nimport { PanelState                 } from '@constants/panel-state.enum'\nimport { ApplicationService         } from '@services/application.service'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public $isLoading  : Observable   ;\n  public $siteTheme  : Observable;\n  public currentRoute: string                ;\n  public sidenavState: PanelState            ;\n  constructor(private application: ApplicationService, private router: Router) {\n    this.$siteTheme   = this.application.$siteTheme  ;\n    this.$isLoading   = this.application.$isLoading  ;\n    this.sidenavState = this.application.sidenavState;\n    this.router.events.subscribe({\n      next: event => this.currentRoute = !(event instanceof NavigationEnd)\n        ? this.currentRoute\n        : `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n  }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(\n    to top,\n    $color-primary,\n    lighten($color: $color-primary, $amount: 10%),\n    lighten($color: $color-primary, $amount: 20%)\n  );\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: 100vh;\n    max-height: 100vh;\n    justify-content: space-between;\n    .container-content {\n      display: flex;\n      flex-direction: column;\n      flex: auto;\n      justify-content: space-between;\n      max-height: $content-height;\n      overflow-y: hidden;\n      .content-center {\n        flex: auto;\n        overflow-x: hidden;\n        overflow-y: auto;\n      }\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ExceptionInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MessageService                           } from 'primeng/api'\nimport { CommonModule                             } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule         } from '@angular/core'\nimport { ExceptionInterceptor                     } from '@common/interceptors/exception-interceptor'\nimport { RequestInterceptor                       } from '@common/interceptors/request-interceptor'\nimport { LocationResolver                         } from '@common/resolvers/location.resolver'\nimport { ContainerRoutingModule                   } from '@container/container-routing.module'\nimport { ContainerComponent                       } from '@container/container.component'\nimport { FeatureModule                            } from '@container/feature.module'\nimport { HeaderModule                             } from '@container/header/header.module'\nimport { SidenavModule                            } from '@container/sidenav/sidenav.module'\nimport { AppSettings                              } from '@helpers/app-settings'\nimport { SearchModule                             } from '@search/search.module'\nimport { ApplicationService                       } from '@services/application.service'\nimport { CacheService          , RequestCache     } from '@services/cache.service'\nimport { WeatherService                           } from '@services/weather.service'\n\nconst Components = [ContainerComponent                                           ];\nconst Modules    = [SidenavModule     , HeaderModule, SearchModule, FeatureModule];\n\n@NgModule({\n  declarations:  Components,\n  exports     : [Components, Modules],\n  imports: [\n    CommonModule          ,\n    ContainerRoutingModule,\n    HttpClientModule      ,\n    Modules\n  ],\n  providers: [\n    { provide: RequestCache, useClass: CacheService },\n    { provide: HTTP_INTERCEPTORS, useClass: ExceptionInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor  , multi: true },\n    MessageService    ,\n    ApplicationService,\n    WeatherService    ,\n    LocationResolver\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule             } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends AbstractModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Day.html":{"url":"classes/Day.html","title":"class - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { AbstractModel } from '@models/abstract-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends AbstractModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elevation.html":{"url":"classes/Elevation.html","title":"class - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IElevation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IElevation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends AbstractModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ExceptionInterceptor.html":{"url":"interceptors/ExceptionInterceptor.html","title":"interceptor - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/exception-interceptor.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable                                                              } from '@angular/core'\nimport { Observable                                                              } from 'rxjs'\nimport { catchError                                                              } from 'rxjs/operators'\nimport { providers                                                               } from '@env/environment'\n\nexport const stored = {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\nexport const errors = {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n@Injectable()\nexport class ExceptionInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        return next.handle(req.clone({ url: stored[Object.keys(stored).find(key => req.url.includes(key))] }));\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                favorites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/favorites/favorites.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component     , OnInit } from '@angular/core'\nimport { DataSets               } from '@constants/data-sets.enum'\nimport { Location               } from '@models/location-model'\nimport { WeatherService         } from '@services/weather.service'\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  public favorites: Location[] = new Array();\n  constructor(private weather: WeatherService) {\n    this.favorites = this.weather\n      .getContext(null, DataSets.Locations, (x: Location) => x.isFavorite);\n  }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{item.localizedName}}\n    \n      \n      \n        {{item.conditions.weatherText}}\n        \n        {{item.conditions.temperature.metric.value}}\n        {{item.conditions.temperature.metric.unit}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black   ;\n  bottom    : 0px     ;\n  left      : 0px     ;\n  opacity   : 40%     ;\n  padding   : 25px 0px;\n  position  : absolute;\n  width     : 100%    ;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{item.localizedName}}                        {{item.conditions.weatherText}}                {{item.conditions.temperature.metric.value}}        {{item.conditions.temperature.metric.unit}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Forecast.html":{"url":"classes/Forecast.html","title":"class - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Headline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel            } from '@models/abstract-model'\nimport { Headline     , IHeadline } from '@models/headline-model'\nimport { IWeather     , Weather   } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends AbstractModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoPosition.html":{"url":"classes/GeoPosition.html","title":"class - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elevation\n                            \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IGeoPosition | any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IGeoPosition | any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elevation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Elevation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends AbstractModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition | any) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavChanged: EventEmitter = new EventEmitter();\n  public toggleSidenav = () => this.sidenavChanged.emit();\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    color: white;\n    max-height: 40px;\n  }\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $color-primary, $amount: 5%), lighten($color: $color-primary, $amount: 10%), lighten($color: $color-primary, $amount: 20%));\n  display: flex;\n  height: $navbar-height;\n  justify-content: space-between;\n  padding: 0px 15px;\n\n  .header-items {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n  }\n  .header-actions {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 5px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Headline.html":{"url":"classes/Headline.html","title":"class - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                effectiveDate\n                            \n                            \n                                    Public\n                                effectiveEpochDate\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                endEpochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                severity\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IHeadline)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IHeadline\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends AbstractModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        CountryId\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        EnglishType\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        Level\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        LocalizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CountryId\n                                    \n                                \n                                \n                                    \n                                        CountryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishType\n                                    \n                                \n                                \n                                    \n                                        EnglishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedType\n                                    \n                                \n                                \n                                    \n                                        LocalizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends AbstractModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoComplete.html":{"url":"interfaces/IAutoComplete.html","title":"interface - IAutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { AbstractModel                               } from '@models/abstract-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName}, ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/flat/32.png`;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EpochTime\n                                \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        IsDayTime\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        LocalObservationDateTime\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                                \n                                            Optional\n                                        WeatherIcon\n                                \n                                \n                                            Optional\n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                  } from '@env/environment'\nimport { animationMap               } from '@helpers/animation-map'\nimport { AbstractModel              } from '@models/abstract-model'\nimport { ITemperature , Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends AbstractModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n  public getAnimation = (): string => {\n    const result = animationMap[this.weatherText.toLowerCase()]\n    ?? animationMap[`${this.weatherText.toLowerCase()} ${this.isDayTime ? 'day' : 'night'}`];\n    return `../../assets/images/anim/${result}.svg`;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends AbstractModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        Icon\n                                \n                                \n                                            Optional\n                                        IconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconPhrase\n                                    \n                                \n                                \n                                    \n                                        IconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { AbstractModel } from '@models/abstract-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends AbstractModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends AbstractModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DailyForecasts\n                                \n                                \n                                            Optional\n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel            } from '@models/abstract-model'\nimport { Headline     , IHeadline } from '@models/headline-model'\nimport { IWeather     , Weather   } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends AbstractModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Elevation\n                                \n                                \n                                            Optional\n                                        Latitude\n                                \n                                \n                                            Optional\n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Elevation\n                                    \n                                \n                                \n                                    \n                                        Elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends AbstractModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition | any) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Category\n                                \n                                \n                                            Optional\n                                        EffectiveDate\n                                \n                                \n                                            Optional\n                                        EffectiveEpochDate\n                                \n                                \n                                            Optional\n                                        EndDate\n                                \n                                \n                                            Optional\n                                        EndEpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Severity\n                                \n                                \n                                            Optional\n                                        Text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndDate\n                                    \n                                \n                                \n                                    \n                                        EndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndEpochDate\n                                    \n                                \n                                \n                                    \n                                        EndEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Severity\n                                    \n                                \n                                \n                                    \n                                        Severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends AbstractModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        AdministrativeArea\n                                \n                                \n                                            Optional\n                                        Conditions\n                                \n                                \n                                            Optional\n                                        Country\n                                \n                                \n                                            Optional\n                                        DataSets\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        Forecast\n                                \n                                \n                                            Optional\n                                        GeoPosition\n                                \n                                \n                                            Optional\n                                        IsAlias\n                                \n                                \n                                            Optional\n                                        Key\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        Rank\n                                \n                                \n                                            Optional\n                                        Region\n                                \n                                \n                                            Optional\n                                        TimeZone\n                                \n                                \n                                            Optional\n                                        Type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Conditions\n                                    \n                                \n                                \n                                    \n                                        Conditions:         IConditions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IConditions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DataSets\n                                    \n                                \n                                \n                                    \n                                        DataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Forecast\n                                    \n                                \n                                \n                                    \n                                        Forecast:         IForecast\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IForecast\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GeoPosition\n                                    \n                                \n                                \n                                    \n                                        GeoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsAlias\n                                    \n                                \n                                \n                                    \n                                        IsAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                    \n                                \n                                \n                                    \n                                        Region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TimeZone\n                                    \n                                \n                                \n                                    \n                                        TimeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel                           } from '@models/abstract-model'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { Conditions        , IConditions         } from '@models/conditions-model'\nimport { Country           , ICountry            } from '@models/country-model'\nimport { Forecast          , IForecast           } from '@models/forecast-model'\nimport { GeoPosition       , IGeoPosition        } from '@models/geoPosition-model'\nimport { ITimeZone         , TimeZone            } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Conditions        ?: IConditions        ;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  Forecast          ?: IForecast          ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.conditions         = new Conditions        (args?.Conditions        );\n    this.country            = new Country           (args?.Country           );\n    this.forecast           = new Forecast          (args?.Forecast          );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n  public update = (conditions: Conditions, forecast: Forecast): Location => {\n    this.conditions = conditions;\n    this.forecast = forecast;\n    return this;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuEvent.html":{"url":"interfaces/IMenuEvent.html","title":"interface - IMenuEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/menu-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                                \n                                        originalEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     PointerEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PointerEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MenuItem } from 'primeng/api';\n\nexport interface IMenuEvent {\n  item         : MenuItem    ;\n  originalEvent: PointerEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Unit\n                                \n                                \n                                            Optional\n                                        UnitType\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Unit\n                                    \n                                \n                                \n                                    \n                                        Unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UnitType\n                                    \n                                \n                                \n                                    \n                                        UnitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends AbstractModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQueryParams.html":{"url":"interfaces/IQueryParams.html","title":"interface - IQueryParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IQueryParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/query-params.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        lat\n                                \n                                \n                                            Optional\n                                        lng\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lng\n                                    \n                                \n                                \n                                    \n                                        lng:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { camelCase } from '@helpers/formatters';\n\nexport interface IQueryParams {\n  lat?: number;\n  lng?: number;\n  key?: number;\n}\nexport class QueryParams implements IQueryParams {\n  public lat: number;\n  public lng: number;\n  public q  : string;\n  constructor(args?: IQueryParams) {\n    Object.assign(this, args);\n  }\n  public build = (): string =>\n    `?${Object.entries(this).map(x => `${camelCase(x[0])}=${x[1]}`).join('&')}`;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Maximum\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                                \n                                            Optional\n                                        Minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Maximum\n                                    \n                                \n                                \n                                    \n                                        Maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Minimum\n                                    \n                                \n                                \n                                    \n                                        Minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Imperial?: IMetric;\n  Maximum ?: IMetric;\n  Metric  ?: IMetric;\n  Minimum ?: IMetric;\n}\nexport class Temperature extends AbstractModel {\n  public imperial: Metric;\n  public maximum : Metric;\n  public metric  : Metric;\n  public minimum : Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.imperial = new Metric(args?.Imperial);\n    this.maximum  = new Metric(args?.Maximum );\n    this.metric   = new Metric(args?.Metric  );\n    this.minimum  = new Metric(args?.Minimum );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Code\n                                \n                                \n                                            Optional\n                                        GmtOffset\n                                \n                                \n                                            Optional\n                                        IsDaylightSaving\n                                \n                                \n                                            Optional\n                                        Name\n                                \n                                \n                                            Optional\n                                        NextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Code\n                                    \n                                \n                                \n                                    \n                                        Code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GmtOffset\n                                    \n                                \n                                \n                                    \n                                        GmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        IsDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        NextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends AbstractModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Date\n                                \n                                \n                                            Optional\n                                        Day\n                                \n                                \n                                            Optional\n                                        EpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Night\n                                \n                                \n                                            Optional\n                                        Sources\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Sources\n                                    \n                                \n                                \n                                    \n                                        Sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AbstractModel              } from '@models/abstract-model'\nimport { Day          , IDay        } from '@models/day-model'\nimport { ITemperature , Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends AbstractModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Forecast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel                           } from '@models/abstract-model'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { Conditions        , IConditions         } from '@models/conditions-model'\nimport { Country           , ICountry            } from '@models/country-model'\nimport { Forecast          , IForecast           } from '@models/forecast-model'\nimport { GeoPosition       , IGeoPosition        } from '@models/geoPosition-model'\nimport { ITimeZone         , TimeZone            } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Conditions        ?: IConditions        ;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  Forecast          ?: IForecast          ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends AbstractModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.conditions         = new Conditions        (args?.Conditions        );\n    this.country            = new Country           (args?.Country           );\n    this.forecast           = new Forecast          (args?.Forecast          );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n  public update = (conditions: Conditions, forecast: Forecast): Location => {\n    this.conditions = conditions;\n    this.forecast = forecast;\n    return this;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                resolveAccordingly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable                                } from 'rxjs'\nimport { mergeMap                                  } from 'rxjs/operators'\nimport { Injectable                                } from '@angular/core'\nimport { ActivatedRouteSnapshot, ParamMap, Resolve } from '@angular/router'\nimport { environment                               } from '@env/environment'\nimport { Location                                  } from '@models/location-model'\nimport { ApplicationService                        } from '@services/application.service'\nimport { WeatherService                            } from '@services/weather.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private weather: WeatherService) { }\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const params = route.queryParamMap;\n\n    return !environment.production ? this.weather.getStaticOutput()\n      : (!this.application.geoLatLng) ? this.application\n        .getUserLocation()\n        .pipe(mergeMap(\n          (x) => this.weather.getGeoPosition(x.latitude, x.longitude)))\n        : this.resolveAccordingly(params);\n  }\n\n  private resolveAccordingly = (params: ParamMap): Observable => params.has('key')\n    ? this.weather.getLocation(params.get('key'))\n    : (params.has('lat') && params.has('lng'))\n      ? this.weather.getGeoPosition(+params.get('lat'), +params.get('lng'))\n      : this.weather.getGeoPosition(this.application.geoLatLng?.latitude, this.application.geoLatLng?.longitude);\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                unitType\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IMetric)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IMetric\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends AbstractModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryParams.html":{"url":"classes/QueryParams.html","title":"class - QueryParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/query-params.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IQueryParams\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                lng\n                            \n                            \n                                    Public\n                                q\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IQueryParams)\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/query-params.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IQueryParams\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            build\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lng\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            q\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/query-params.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { camelCase } from '@helpers/formatters';\n\nexport interface IQueryParams {\n  lat?: number;\n  lng?: number;\n  key?: number;\n}\nexport class QueryParams implements IQueryParams {\n  public lat: number;\n  public lng: number;\n  public q  : string;\n  constructor(args?: IQueryParams) {\n    Object.assign(this, args);\n  }\n  public build = (): string =>\n    `?${Object.entries(this).map(x => `${camelCase(x[0])}=${x[1]}`).join('&')}`;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable        , of                                                      } from 'rxjs'\nimport { tap                                                                         } from 'rxjs/operators'\nimport { HttpEvent         , HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable                                                                  } from '@angular/core'\nimport { providers                                                                   } from '@env/environment'\nimport { decodeBase64                                                                } from '@helpers/formatters'\nimport { ApplicationService                                                          } from '@services/application.service'\nimport { RequestCache                                                                } from '@services/cache.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService, private cache: RequestCache) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.application.$isLoadingChanged.next(true);\n    req = req.url.includes(providers.weather.baseUrl) ? req.clone({\n      params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n    }) : req;\n    const cachedResponse = this.cache.get(req);\n    return (!cachedResponse ? next.handle(req) : of(cachedResponse))\n      .pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            this.cache.put(req, event);\n            this.application.$isLoadingChanged.next(false);\n          }\n        })\n      );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $searchQuery\n                            \n                            \n                                    Public\n                                $suggestions\n                            \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                currentOption\n                            \n                            \n                                    Public\n                                locationInput\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                searchOptions\n                            \n                            \n                                    Public\n                                searchPattern\n                            \n                            \n                                    Private\n                                setOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $searchQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $suggestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locationInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[a-zA-Z ]/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable, Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component, Input, OnInit } from '@angular/core'\nimport { ISearchEvent } from '@helpers/search-event'\nimport { AutoComplete } from '@models/autoComplete-model'\nimport { WeatherService } from '@services/weather.service'\nimport { MenuItem } from 'primeng/api'\nimport { IMenuEvent } from '@helpers/menu-event'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router'\nimport { PanelState } from '@constants/panel-state.enum'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  public $searchQuery: Subject;\n  public $suggestions: Observable;\n  public currentOption: MenuItem   ;\n  public locationInput: FormGroup  ;\n  public searchOptions: MenuItem [];\n  public searchPattern: RegExp = /[a-zA-Z ]/;\n  constructor(private weather: WeatherService, private router: Router) { }\n  ngOnInit() {\n    this.createForm();\n    this.setOptions();\n    this.currentOption = this.searchOptions[0];\n    this.$searchQuery = new Subject();\n    this.$suggestions = this.$searchQuery.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text.toLowerCase())));\n  }\n  public onSearch = (event: ISearchEvent) =>\n    event.query ? this.$searchQuery.next(event.query) : undefined;\n  public onSelect = (value: AutoComplete) =>\n    this.router.navigate(['weather'], { queryParams: { key: value.key } });\n  public onSubmit = () =>\n    this.router.navigate(['weather'], { queryParams: this.locationInput.value });\n  public createForm = () => this.locationInput =\n    new FormGroup({\n      lat: new FormControl(undefined, [Validators.required, Validators.max(90.0000000), Validators.min(-90.0000000)]),\n      lng: new FormControl(undefined, [Validators.required, Validators.max(180.0000000), Validators.min(-180.0000000)]),\n    });\n  private setOptions = () => this.searchOptions = [\n    { label: 'Location', icon: 'fa fa-map-marker', command: (e: IMenuEvent) => this.currentOption = e.item },\n    {\n      label: 'Coordinates',\n      icon: 'fa fa-compass',\n      command: (e: IMenuEvent) => {\n        this.currentOption = e.item;\n        this.createForm();\n      }\n    },\n  ];\n}\n\n\n    \n\n    \n        \n  \n    \n      Weather\n    \n    \n      \n    \n  \n  \n    \n      Location\n      \n        \n          \n            \n            {{result.toString()}}\n          \n        \n      \n    \n    \n      \n        Latitude\n        \n        \n        \n      \n      \n        Longitude\n        \n        \n        \n      \n      \n        \n          \n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                @import \"common.scss\";\n.app-search {\n  margin-bottom: 10px;\n  max-width: 100%;\n  padding: 10px 0px;\n  .search-header {\n    align-items: center;\n    color: $color-text;\n    display: flex;\n    font-size: 32px;\n    justify-content: space-between;\n    padding: 5px;\n    .header-title {\n      align-items: center;\n      display: flex;\n      padding-right: 10px;\n      .fa {\n        font-size: smaller;\n        margin-right: 10px;\n      }\n    }\n    .search-options {\n      flex: auto;\n      padding-left: 10px;\n    }\n  }\n  .search-form {\n    padding: 10px 0px;\n    .form-autocomplete {\n      display: flex;\n      flex-direction: column;\n      padding: 0px 2.5px;\n    }\n    .form-coordinates {\n      align-items: center;\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 0px;\n    }\n  }\n}\nlabel {\n  color: $color-text;\n  margin: 0px;\n}\n.form-control.ng-invalid:not(.ng-pristine) {\n  border: 2px solid red;\n  color: $color-text;\n}\n.form-control.ng-valid:not(.ng-pristine) {\n  border: 2px solid $color-teal;\n  color: $color-text;\n}\n.form-control.ng-invalid:not(.ng-pristine):focus {\n  background: lighten($color: red, $amount: 40%);\n  border: 2px solid red;\n  color: red;\n  transition: ease-in-out 300ms;\n}\n.form-control.ng-valid:not(.ng-pristine):focus {\n  background: lighten($color: $color-teal, $amount: 40%);\n  border: 2px solid $color-teal;\n  color: #28a745;\n  transition: ease-in-out 300ms;\n}\n.input-col {\n  flex: auto;\n  padding: 0px 2.5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather                                Location                                                {{result.toString()}}                                              Latitude                                            Longitude                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ReactiveFormsModule, FeatureModule, SearchRoutingModule, Modules],\n  declarations:  Components  ,\n  exports     : [Components  , Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                output\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient                        } from '@angular/common/http'\nimport { Component         , Input, OnInit } from '@angular/core'\nimport { PanelState                        } from '@constants/panel-state.enum'\nimport { ApplicationService                } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState;\n  public output: string[];\n  constructor(private config: ApplicationService, private http: HttpClient) { }\n  ngOnInit() {\n    this.http.get('../../../assets/datasets/output.json').toPromise().then(result => this.output = JSON.stringify(result).split(/[{}]/));\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 350px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { HttpClientModule  } from '@angular/common/http'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HttpClientModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Temperature.html":{"url":"classes/Temperature.html","title":"class - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                maximum\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                minimum\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITemperature)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/temperature-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITemperature\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maximum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minimum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Imperial?: IMetric;\n  Maximum ?: IMetric;\n  Metric  ?: IMetric;\n  Minimum ?: IMetric;\n}\nexport class Temperature extends AbstractModel {\n  public imperial: Metric;\n  public maximum : Metric;\n  public metric  : Metric;\n  public minimum : Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.imperial = new Metric(args?.Imperial);\n    this.maximum  = new Metric(args?.Maximum );\n    this.metric   = new Metric(args?.Metric  );\n    this.minimum  = new Metric(args?.Minimum );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeZone.html":{"url":"classes/TimeZone.html","title":"class - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                gmtOffset\n                            \n                            \n                                    Public\n                                isDaylightSaving\n                            \n                            \n                                    Public\n                                nextOffsetChange\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITimeZone)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITimeZone\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gmtOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDaylightSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nextOffsetChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel } from '@models/abstract-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends AbstractModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractModel              } from '@models/abstract-model'\nimport { Day          , IDay        } from '@models/day-model'\nimport { ITemperature , Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends AbstractModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateString\n                            \n                            \n                                    Public\n                                location\n                            \n                            \n                                    Public\n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component     , OnInit } from '@angular/core'\nimport { ActivatedRoute         } from '@angular/router'\nimport { Location               } from '@models/location-model'\nimport { WeatherService         } from '@services/weather.service'\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  public location: Location;\n  public dateString: Date | string;\n  constructor(private weather: WeatherService, private route: ActivatedRoute) {\n    this.route.data.subscribe({\n      next: (result) => this.location = result['location']\n    });\n  }\n  public toggleFavorite = () => {\n    this.location.isFavorite = !this.location.isFavorite;\n    this.weather.updateContext(this.location);\n  }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{this.location?.localizedName}}\n          {{this.location.forecast.headline.effectiveDate | date:'EEEE, MMMM d, y'}}\n          {{this.location?.conditions.weatherText | titlecase}}\n          \n          \n            {{this.location?.conditions.temperature.metric.value}}\n            {{this.location?.conditions.temperature.metric.unit}}\n             / \n            {{this.location?.conditions.temperature.imperial.value}}\n            {{this.location?.conditions.temperature.imperial.unit}}\n          \n        \n        \n           \n        \n      \n    \n    \n      \n    \n  \n  \n    \n      \n        {{item.date | date: 'EEEE'}}\n        \n          \n          \n            \n              Min: {{item.temperature.minimum.value}}\n              {{item.temperature.minimum.unit}}\n            \n            \n            \n              Max: {{item.temperature.maximum.value}}\n              {{item.temperature.maximum.unit}}\n            \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{this.location?.localizedName}}          {{this.location.forecast.headline.effectiveDate | date:\\'EEEE, MMMM d, y\\'}}          {{this.location?.conditions.weatherText | titlecase}}                                {{this.location?.conditions.temperature.metric.value}}            {{this.location?.conditions.temperature.metric.unit}}             /             {{this.location?.conditions.temperature.imperial.value}}            {{this.location?.conditions.temperature.imperial.unit}}                                                                                           {{item.date | date: \\'EEEE\\'}}                                                      Min: {{item.temperature.minimum.value}}              {{item.temperature.minimum.unit}}                                                  Max: {{item.temperature.maximum.value}}              {{item.temperature.maximum.unit}}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { FeatureModule        } from '@container/feature.module'\nimport { WeatherRoutingModule } from '@weather/weather-routing.module'\nimport { WeatherComponent     } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, WeatherRoutingModule, FeatureModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherRoutingModule.html":{"url":"modules/WeatherRoutingModule.html","title":"module - WeatherRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                 } from '@angular/core'\nimport { RouterModule    , Routes } from '@angular/router'\nimport { LocationResolver         } from '@common/resolvers/location.resolver'\nimport { WeatherComponent         } from '@weather/weather.component'\n\nexport const WeatherRoutes: Routes = [\n  { path: '', resolve: { location: LocationResolver }, runGuardsAndResolvers: 'always', component: WeatherComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(WeatherRoutes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                            \n                                    Private\n                                context\n                            \n                            \n                                    Private\n                                createContext\n                            \n                            \n                                    Public\n                                getConditions\n                            \n                            \n                                    Public\n                                getContext\n                            \n                            \n                                    Public\n                                getForecast\n                            \n                            \n                                    Public\n                                getGeoPosition\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Public\n                                getStaticOutput\n                            \n                            \n                                    Private\n                                setContext\n                            \n                            \n                                    Public\n                                updateContext\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGeoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStaticOutput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:77\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { forkJoin     , Observable, of } from 'rxjs'\nimport { map          , mergeMap       } from 'rxjs/operators'\nimport { HttpClient                    } from '@angular/common/http'\nimport { Injectable                    } from '@angular/core'\nimport { DataSets                      } from '@constants/data-sets.enum'\nimport { providers                     } from '@env/environment'\nimport { AppSettings                   } from '@helpers/app-settings'\nimport { decodeBase64 , encodeBase64   } from '@helpers/formatters'\nimport { AbstractModel                 } from '@models/abstract-model'\nimport { AutoComplete , IAutoComplete  } from '@models/autoComplete-model'\nimport { Conditions   , IConditions    } from '@models/conditions-model'\nimport { Forecast     , IForecast      } from '@models/forecast-model'\nimport { ILocation    , Location       } from '@models/location-model'\n\n@Injectable()\nexport class WeatherService {\n  private context: Map;\n  constructor(private http: HttpClient, private args?: AppSettings) { this.createContext(); }\n\n  public updateContext = (location: Location) => this.context\n    .get(DataSets.Locations)\n    .filter((x: Location) => x.key != location.key)\n    .unshift(location);\n\n  public autoComplete = (search: string): Observable => this.http\n    .get(providers.weather.autocomplete, { params: { q: search } })\n    .pipe(map(result => result.map(item => new AutoComplete(item))));\n\n  public getConditions = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.conditions}/${locationKey}`)\n    .pipe(map(result => this.setContext(DataSets.Conditions, new Conditions(result[0]))));\n\n  public getForecast = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.forecasts}/${locationKey}`)\n    .pipe(map(result => this.setContext(DataSets.Forecasts, new Forecast(result))));\n\n  public getGeoPosition = (lat: number, lng: number): Observable => this.http\n    .get(providers.weather.geoposition, { params: { q: lat + ',' + lng } })\n    .pipe(mergeMap(location =>\n      forkJoin(of(location), this.getConditions(location.Key), this.getForecast(location.Key))\n        .pipe(map(results => this.setContext(DataSets.Locations, new Location(results[0]).update(results[1], results[2]))\n        ))));\n\n  public getLocation = (key: string): Observable => this.getContext(key)\n    ? of(this.getContext(key))\n    : this.http\n      .get(`${providers.weather.locations}/${key}`)\n      .pipe(mergeMap(location =>\n        forkJoin(of(location), this.getConditions(location.Key), this.getForecast(location.Key))\n          .pipe(map(results =>\n            this.setContext(DataSets.Locations, new Location(results[0]).update(results[1], results[2]))))));\n\n  public getStaticOutput = () =>\n    this.http.get('../../assets/datasets/output.json').pipe(map(location => {\n      const result = new Location(location);\n      console.log(result);\n      return result;\n    }));\n\n  private createContext = () => this.context =\n    localStorage.getItem(encodeBase64('context'))\n      ? JSON.parse(decodeBase64(localStorage.getItem(encodeBase64('context'))))\n      : new Map()\n        .set(DataSets.Conditions, new Array())\n        .set(DataSets.Forecasts, new Array())\n        .set(DataSets.Locations, new Array());\n\n  private setContext = (data: DataSets, value: any): any | undefined => {\n    !this.getContext(null, data, x => x == value)\n      ? this.context.get(data).unshift(value) : undefined;\n    return value;\n  }\n  public getContext = (key?: string, data: DataSets = DataSets.Locations, predicate?: (value: any) => unknown): any | undefined =>\n    this.context.get(data).some(predicate ?? ((item: Location) => item.key == key))\n      ? this.context.get(data).slice().find((item: Location) => item.key == key) : undefined;\n\n  public updateStorage = () => localStorage.setItem(encodeBase64('context'), encodeBase64(JSON.stringify(this.context)));\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/animation-map.ts\n            \n            variable\n            animationMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            camelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            encodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            titleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/menu-event.ts\n            \n            interface\n            IMenuEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/query-params.ts\n            \n            class\n            QueryParams\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/query-params.ts\n            \n            interface\n            IQueryParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            interceptor\n            ExceptionInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            stored\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/abstract-model.ts\n            \n            class\n            AbstractModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            class\n            AdministrativeArea\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            class\n            AutoComplete\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            IAutoComplete\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/cache-model.ts\n            \n            interface\n            CacheResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            Conditions\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            Day\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            class\n            Elevation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            Forecast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            class\n            GeoPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            class\n            Headline\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            class\n            Temperature\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            class\n            TimeZone\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            animate.css : ^4.1.1\n        \n            bootstrap : ^4.6.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorTheme   (src/.../color-theme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorTheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : theme-dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : theme-light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Favorites\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Preferences\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            animationMap   (src/.../animation-map.ts)\n                        \n                        \n                            camelCase   (src/.../formatters.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            decodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            encodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errors   (src/.../exception-interceptor.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            stored   (src/.../exception-interceptor.ts)\n                        \n                        \n                            titleCase   (src/.../formatters.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/animation-map.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            animationMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  'clear night'                    : 'clear-night'                ,\n  'cloudy'                         : 'cloudy'                     ,\n  'cold'                           : 'cold'                       ,\n  'dreary'                         : 'dreary'                     ,\n  'flurries'                       : 'drizzle'                    ,\n  'fog'                            : 'fog'                        ,\n  'freezing rain'                  : 'sleet'                      ,\n  'hazy moonlight night'           : 'fog-night'                  ,\n  'hazy sunshine day'              : 'fog-day'                    ,\n  'hot'                            : 'thermometer'                ,\n  'ice'                            : 'hail'                       ,\n  'intermittent clouds day'        : 'overcast'                   ,\n  'intermittent clouds night'      : 'overcast'                   ,\n  'mostly clear day'               : 'partly-cloudy-day'          ,\n  'mostly clear night'             : 'partly-cloudy-night'        ,\n  'mostly cloudy day'              : 'overcast-day'               ,\n  'mostly cloudy night'            : 'overcast-night'             ,\n  'mostly cloudy w/ flurries day'  : 'partly-cloudy-day-drizzle'  ,\n  'mostly cloudy w/ flurries night': 'partly-cloudy-night-drizzle',\n  'mostly cloudy w/ showers day'   : 'partly-cloudy-day-rain'     ,\n  'mostly cloudy w/ showers night' : 'partly-cloudy-night-rain'   ,\n  'mostly cloudy w/ snow day'      : 'partly-cloudy-day-snow'     ,\n  'mostly cloudy w/ snow night'    : 'partly-cloudy-night-snow'   ,\n  'mostly cloudy w/ t-storms day'  : 'thunderstorms-day-rain'     ,\n  'mostly cloudy w/ t-storms night': 'thunderstorms-night-rain'   ,\n  'mostly sunny day'               : 'clear-day'                  ,\n  'partly cloudy day'              : 'partly-cloudy-day'          ,\n  'partly cloudy night'            : 'partly-cloudy-night'        ,\n  'partly cloudy w/ showers night' : 'partly-cloudy-night-rain'   ,\n  'partly cloudy w/ t-storms night': 'thunderstorms-night-rain'   ,\n  'partly sunny day'               : 'partly-cloudy-day'          ,\n  'partly sunny w/ flurries day'   : 'partly-cloudy-day-drizzle'  ,\n  'partly sunny w/ showers day'    : 'partly-cloudy-day-rain'     ,\n  'partly sunny w/ t-storms day'   : 'thunderstorms-day-rain'     ,\n  'rain and snow'                  : 'snow'                       ,\n  'rain'                           : 'rain'                       ,\n  'showers'                        : 'rain'                       ,\n  'sleet'                          : 'sleet'                      ,\n  'snow'                           : 'snow'                       ,\n  'sunny'                          : 'clear-day'                  ,\n  't-storms'                       : 'thunderstorms'              ,\n  'windy'                          : 'wind'                       ,\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/helpers/formatters.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            camelCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original[0].toLowerCase() + (original.substring(1).length \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => atob(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => btoa(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string => original.includes(' ')\n  ? original.split(' ')\n    .map(item => item[0].toUpperCase() + item.substring(1))\n    .join(' ')\n  : original[0].toUpperCase() + original.substring(1)\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent                                           ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule     , HeaderModule, SearchModule, FeatureModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude : 32.003,\n  longitude: 34.756\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                              ,\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl     : 'https://dataservice.accuweather.com'                                       ,\n    conditions  : 'https://dataservice.accuweather.com/currentconditions/v1'                   ,\n    forecasts   : 'https://dataservice.accuweather.com/forecasts/v1/daily/5day'                ,\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons'                           ,\n    locations   : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude : 32.003,\n  longitude: 34.756\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather     : {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete',\n    baseUrl     : 'https://dataservice.accuweather.com',\n    conditions  : 'https://dataservice.accuweather.com/currentconditions/v1',\n    forecasts   : 'https://dataservice.accuweather.com/forecasts/v1/daily/5day',\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons',\n    locations   : 'https://dataservice.accuweather.com/locations/v1',\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/interceptors/exception-interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stored\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
