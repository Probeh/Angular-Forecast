var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdministrativeArea.html",[0,0.078,1,2.201]],["body/classes/AdministrativeArea.html",[0,0.073,1,2.895,2,1.334,3,0.115,4,0.1,5,0.1,6,5.794,7,0.827,8,1.287,9,1.55,10,0.322,11,0.787,12,1.397,13,5.638,14,4.054,15,5.638,16,5.638,17,3.609,18,5.638,19,2.096,20,2.229,21,1.146,22,0.831,23,0.768,24,1.196,25,3.609,26,1.527,27,3.474,28,0.922,29,0.014,30,0.541,31,1.334,32,1.334,33,1.785,34,3.241,35,3.241,36,2.92,37,1.714,38,2.489,39,2.489,40,1.236,41,2.724,42,1.566,43,1.443,44,1.566,45,1.566,46,1.566,47,0.129,48,0.889,49,0.74,50,0.16,51,0.396,52,0.922,53,0.006,54,0.009,55,0.006]],["title/components/AppComponent.html",[56,1.131,57,1.733]],["body/components/AppComponent.html",[0,0.086,3,0.134,4,0.118,5,0.118,10,0.377,11,0.877,21,1.108,22,0.464,23,1.34,26,1.151,29,0.014,33,0.969,47,0.151,50,0.134,53,0.007,54,0.01,55,0.007,56,1.86,57,3.037,58,1.996,59,2.308,60,2.308,61,2.308,62,2.308,63,3.8,64,2.308,65,4.178,66,3.975,67,5.797,68,3.062,69,6.505,70,3.062,71,5.797,72,5.656,73,5.797,74,1.916,75,1.692,76,5.04,77,0.868,78,1.564,79,3.062,80,3.062,81,2.308,82,3.659,83,2.308,84,2.308,85,1.916,86,2.308,87,1.396,88,2.308,89,1.836,90,2.308,91,1.916,92,2.308,93,1.836,94,2.308,95,1.916,96,2.308,97,1.916,98,2.308,99,1.836,100,1.564,101,2.308,102,2.308]],["title/modules/AppModule.html",[103,1.091,104,2.844]],["body/modules/AppModule.html",[0,0.081,3,0.126,4,0.111,5,0.111,29,0.014,47,0.269,50,0.126,53,0.007,54,0.01,55,0.007,57,3.457,77,0.816,78,1.47,103,1.133,104,5.629,105,1.312,106,1.969,107,3.33,108,3.169,109,1.844,110,1.528,111,3.572,112,3.572,113,3.572,114,3.572,115,4.861,116,4.716,117,2.938,118,2.17,119,1.882,120,4.109,121,2.153,122,4.836,123,2.065,124,2.153,125,5.562,126,4.836,127,3.219,128,5.562,129,4.109,130,4.109,131,2.418,132,4.109,133,2.955,134,3.219,135,3.219,136,4,137,3.715,138,3.219,139,2.569,140,2.744,141,4.109,142,4.109,143,3.219,144,4.109,145,3.219,146,3.572,147,2.744,148,3.219]],["title/modules/AppRoutingModule.html",[103,1.091,115,2.641]],["body/modules/AppRoutingModule.html",[0,0.101,3,0.159,4,0.139,5,0.139,29,0.014,47,0.224,50,0.199,53,0.009,54,0.011,55,0.009,77,1.025,100,2.31,105,1.65,110,1.922,115,4.312,121,1.999,124,2.499,149,5.166,150,3.041,151,3.8,152,3.245,153,2.596,154,1.848,155,5.166,156,4.704,157,6.457,158,5.166,159,5.166,160,4.047,161,5.166,162,5.166,163,5.166,164,5.166,165,5.166,166,5.166]],["title/classes/AppSettings.html",[0,0.078,167,2.472]],["body/classes/AppSettings.html",[0,0.087,2,1.593,3,0.137,4,0.12,5,0.12,10,0.385,11,0.888,12,1.361,22,0.741,23,1.353,26,1.44,29,0.014,30,1.119,47,0.242,49,0.884,50,0.137,53,0.008,54,0.01,55,0.008,133,4.722,134,3.489,135,3.489,136,4.722,137,3.92,138,3.489,139,4.105,140,2.974,143,5.143,145,5.143,147,4.385,167,3.669,168,6.476,169,3.872,170,5.708,171,5.87,172,4.453,173,4.453,174,4.453,175,3.654,176,3.203]],["title/injectables/ApplicationService.html",[177,1.811,178,1.988]],["body/injectables/ApplicationService.html",[0,0.048,3,0.075,4,0.066,5,0.066,10,0.211,11,0.576,12,1.363,21,0.728,22,0.775,23,0.503,24,0.562,26,1.462,28,1.156,29,0.014,30,0.553,31,1.362,32,0.874,47,0.227,49,0.485,50,0.075,53,0.004,54,0.007,55,0.004,74,2.656,75,2.753,77,0.485,133,3.363,134,1.914,135,1.914,136,3.363,137,2.542,138,1.914,139,2.923,140,1.632,143,3.663,145,3.663,147,3.123,167,3.3,170,4.065,175,2.603,176,1.757,177,1.743,178,1.913,179,1.757,180,2.125,181,4.835,182,4.676,183,4.676,184,3.551,185,4.676,186,4.065,187,4.676,188,4.676,189,4.676,190,4.676,191,4.676,192,1.473,193,3.807,194,3.807,195,3.807,196,6.327,197,5.721,198,6.873,199,2.444,200,4.065,201,0.946,202,1.171,203,2.444,204,6.267,205,1.854,206,2.444,207,3.522,208,2.444,209,2.444,210,2.01,211,2.542,212,2.444,213,2.444,214,2.444,215,2.444,216,2.444,217,2.444,218,2.444,219,2.444,220,1.291,221,1.914,222,1.228,223,1.914,224,1.757,225,1.228,226,2.444,227,2.444,228,2.444,229,2.444,230,2.125,231,2.444,232,2.444,233,2.444,234,2.444,235,2.444,236,2.444,237,2.444,238,1.632,239,2.444,240,1.632,241,2.444,242,2.444,243,2.444,244,2.444,245,4.676,246,2.444,247,2.923,248,2.444,249,2.444,250,2.444,251,2.444,252,2.444,253,2.444,254,2.444,255,2.444]],["title/classes/AutoComplete.html",[0,0.078,256,2.201]],["body/classes/AutoComplete.html",[0,0.061,1,4.011,2,1.121,3,0.096,4,0.084,5,0.084,7,0.694,8,1.136,9,1.472,10,0.27,11,0.695,12,1.391,17,3.333,19,1.851,20,1.708,21,1.04,22,0.813,23,0.645,24,1.056,25,3.027,26,1.506,27,2.092,28,0.775,29,0.014,30,0.455,31,1.121,32,1.121,33,1.666,36,2.453,37,1.906,38,2.092,39,2.092,40,1.038,41,2.516,42,1.316,43,1.212,44,1.316,45,1.316,46,1.316,47,0.188,48,0.747,49,0.912,50,0.141,51,0.333,52,0.775,53,0.005,54,0.008,55,0.005,74,2.013,75,1.777,109,1.038,205,1.266,222,1.574,256,2.556,257,5.739,258,3.163,259,4.728,260,4,261,4.307,262,4.728,263,4.692,264,4,265,3.303,266,2.723,267,2.252,268,2.723,269,2.252,270,2.252,271,2.252,272,2.252,273,2.723,274,2.723,275,2.453,276,2.723,277,2.723,278,2.723]],["title/classes/BaseModel.html",[0,0.078,9,0.845]],["body/classes/BaseModel.html",[0,0.086,2,1.572,3,0.135,4,0.118,5,0.118,7,0.974,9,1.244,10,0.379,11,0.88,12,1.358,19,2.629,20,2.426,21,1.327,22,0.816,23,0.905,24,1.338,26,1.433,28,1.087,29,0.014,30,0.638,31,1.572,32,1.572,33,1.646,40,2.162,43,2.687,47,0.201,50,0.135,53,0.008,54,0.01,55,0.008,205,1.212,275,4.558,279,6.452,280,5.818,281,4.394,282,4.394,283,4.394,284,3.442,285,3.442,286,3.82,287,3.442,288,4.394,289,5.818,290,4.394,291,4.394,292,5.818,293,4.394,294,4.394,295,4.394]],["title/interfaces/CacheResult.html",[51,0.42,296,2.641]],["body/interfaces/CacheResult.html",[3,0.163,4,0.143,5,0.143,7,1.175,10,0.458,11,0.992,22,0.757,29,0.014,30,1.132,33,1.58,37,2.037,47,0.183,50,0.163,51,0.563,53,0.009,54,0.011,55,0.009,123,2.663,296,4.381,297,1.896,298,4.607,299,5.832,300,5.354,301,5.354,302,5.354]],["title/injectables/CacheService.html",[177,1.811,303,2.641]],["body/injectables/CacheService.html",[0,0.101,3,0.113,4,0.099,5,0.099,10,0.318,11,0.781,12,1.158,21,0.987,22,0.633,23,1.227,26,1.348,28,1.277,29,0.014,30,0.749,37,1.054,47,0.206,49,0.732,50,0.159,53,0.006,54,0.009,55,0.006,74,2.262,75,1.998,77,0.732,123,1.852,154,2.309,177,2.364,179,2.651,181,5.063,184,3.718,192,1.998,201,1.998,202,2.855,205,1.423,287,4.666,296,2.462,299,2.887,300,4.885,301,2.651,302,5.304,303,3.447,304,2.887,305,5.178,306,5.178,307,4.487,308,5.161,309,5.178,310,4.926,311,3.686,312,3.447,313,5.61,314,4.487,315,3.686,316,3.712,317,4.487,318,3.686,319,3.204,320,3.227,321,1.548,322,2.651,323,2.887,324,3.204,325,3.204,326,3.204,327,4.487,328,4.487,329,3.204,330,2.051,331,3.204,332,4.487,333,3.204,334,4.487,335,3.204,336,3.204,337,3.204,338,3.204]],["title/classes/Conditions.html",[0,0.078,339,2.089]],["body/classes/Conditions.html",[0,0.059,2,1.068,3,0.092,4,0.08,5,0.08,7,0.662,8,1.096,9,1.45,10,0.258,11,0.67,12,1.398,19,1.786,20,1.649,21,1.011,22,0.818,23,0.615,24,1.019,26,1.518,27,1.993,28,0.738,29,0.014,30,0.433,31,1.068,32,1.068,33,1.65,37,1.873,39,1.993,40,1.94,41,2.458,42,1.254,43,1.155,44,1.254,45,1.254,46,1.254,47,0.183,48,0.712,49,0.88,50,0.136,51,0.317,52,0.738,53,0.005,54,0.008,55,0.005,74,1.308,75,1.155,109,0.989,205,0.823,210,3.459,222,1.5,265,2.146,267,2.146,339,2.341,340,5.827,341,5.087,342,3.802,343,4.208,344,5.087,345,3.658,346,5.087,347,3.658,348,3.774,349,5.087,350,5.087,351,3.908,352,3.853,353,2.594,354,2.338,355,2.338,356,2.338,357,2.594,358,2.467,359,2.146,360,2.146,361,2.146,362,2.594]],["title/components/ContainerComponent.html",[56,1.131,85,1.733]],["body/components/ContainerComponent.html",[0,0.053,3,0.084,4,0.073,5,0.073,10,0.235,11,0.627,12,1.244,21,0.957,22,0.594,23,0.562,26,1.257,28,0.674,29,0.014,30,0.396,33,0.918,47,0.228,50,0.084,53,0.005,54,0.007,55,0.005,56,1.432,57,1.195,58,1.426,59,1.44,60,1.44,61,1.44,62,1.44,64,1.44,65,3.801,66,3.667,68,2.188,70,2.188,74,1.195,75,1.055,77,0.541,78,0.976,79,2.188,80,2.188,81,1.44,82,2.954,83,1.44,84,1.44,85,2.451,86,1.44,87,0.871,88,1.44,89,1.146,90,1.44,91,1.195,92,1.44,93,1.146,94,1.44,95,1.195,96,1.44,97,1.195,98,1.44,99,1.146,100,1.482,101,1.44,102,1.44,137,1.821,139,3.131,140,1.821,147,3.344,148,3.245,153,1.371,178,2.811,184,2.188,186,4.354,192,1.603,201,1.055,202,1.307,207,2.787,220,1.44,225,1.371,230,4.354,247,1.705,321,1.74,363,2.371,364,2.787,365,6.331,366,5.008,367,4.142,368,5.008,369,5.008,370,3.113,371,1.961,372,6.58,373,4.354,374,4.381,375,4.142,376,2.766,377,2.727,378,2.727,379,2.727,380,2.727,381,1.705,382,4.142,383,1.705,384,2.727,385,2.727,386,2.727,387,2.727,388,3.245,389,4.142,390,2.371,391,2.727,392,2.727,393,1.821,394,2.136,395,2.371,396,2.371,397,2.727,398,4.354,399,3.601,400,3.601,401,2.371,402,2.371,403,2.766,404,4.325,405,4.325,406,2.371,407,3.245,408,4.325,409,3.245,410,3.245,411,2.136,412,3.245,413,5.008,414,4.142,415,4.142,416,2.371,417,2.979,418,3.601,419,2.727,420,2.371,421,2.371,422,2.371,423,4.354,424,3.601,425,2.136,426,3.601]],["title/modules/ContainerModule.html",[103,1.091,116,2.641]],["body/modules/ContainerModule.html",[0,0.059,3,0.093,4,0.081,5,0.081,21,0.576,22,0.32,26,0.598,28,0.745,29,0.014,30,0.437,31,1.596,32,1.077,47,0.27,50,0.093,53,0.005,54,0.008,55,0.005,58,1.83,77,0.598,78,1.077,85,1.956,87,2.278,103,0.83,105,1.877,106,1.443,107,2.807,108,1.513,109,1.948,110,1.977,116,5.259,117,2.356,118,1.591,119,1.379,121,1.727,122,3.879,123,1.513,124,2.057,131,1.772,154,1.596,167,3.923,178,3.303,192,1.166,201,1.166,211,3.55,223,2.359,224,2.166,303,2.98,320,2.789,330,1.676,374,3.495,381,1.883,383,1.883,427,2.618,428,2.618,429,2.618,430,2.618,431,2.618,432,4.389,433,4.389,434,4.389,435,4.389,436,4.108,437,2.359,438,3.879,439,3.011,440,4.462,441,3.011,442,5.315,443,2.483,444,1.591,445,5.877,446,3.011,447,3.55,448,3.011,449,3.011,450,3.209,451,3.011,452,3.011,453,3.011,454,2.356,455,2.166,456,2.789,457,3.011,458,2.789,459,3.011,460,2.789,461,3.011,462,2.618,463,2.618,464,6.275,465,5.877,466,5.315,467,3.011]],["title/modules/ContainerRoutingModule.html",[103,1.091,432,2.641]],["body/modules/ContainerRoutingModule.html",[0,0.111,3,0.175,4,0.153,5,0.153,29,0.014,47,0.237,50,0.21,53,0.01,54,0.012,55,0.01,77,1.128,105,1.815,110,2.114,121,2.2,124,2.65,150,3.345,151,4.029,152,3.441,153,2.856,154,2.033,432,4.572,468,5.683,469,5.683,470,5.683]],["title/classes/Country.html",[0,0.078,258,2.089]],["body/classes/Country.html",[0,0.084,2,1.531,3,0.132,4,0.115,5,0.115,7,0.949,8,1.414,9,1.608,10,0.37,11,0.865,12,1.368,14,4.295,17,3.824,19,2.304,20,2.395,21,1.231,22,0.822,23,0.882,24,1.315,26,1.493,28,1.059,29,0.014,30,0.621,31,1.531,32,1.531,33,1.733,40,1.419,41,2.886,42,1.798,43,1.656,44,1.798,45,1.798,46,1.798,47,0.148,48,1.021,49,0.85,50,0.176,51,0.455,52,1.059,53,0.007,54,0.01,55,0.007,258,3.019,471,5.382,472,4.295,473,3.365,474,3.078]],["title/classes/Day.html",[0,0.078,475,2.472]],["body/classes/Day.html",[0,0.076,2,1.381,3,0.119,4,0.104,5,0.104,7,0.856,8,1.318,9,1.565,10,0.333,11,0.806,12,1.382,19,2.147,20,1.982,21,1.167,22,0.814,23,0.795,24,1.225,26,1.503,28,0.954,29,0.014,30,0.56,31,1.381,32,1.381,33,1.584,37,1.745,38,2.577,40,1.279,41,2.765,42,1.621,43,1.493,44,1.621,45,1.621,46,1.621,47,0.184,48,0.92,49,0.766,50,0.164,51,0.41,52,0.954,53,0.007,54,0.009,55,0.007,74,1.691,75,1.493,109,1.279,210,3.223,222,1.939,342,4.389,343,4.733,473,2.271,475,3.331,476,5.595,477,5.156,478,5.722,479,4.115,480,4.174,481,2.577,482,3.355]],["title/classes/Elevation.html",[0,0.078,483,2.472]],["body/classes/Elevation.html",[0,0.081,2,1.481,3,0.127,4,0.111,5,0.111,7,0.918,8,1.383,9,1.594,10,0.357,11,0.846,12,1.362,19,2.253,20,2.08,21,1.21,22,0.816,23,0.853,24,1.286,26,1.48,28,1.024,29,0.014,30,0.601,31,1.481,32,1.481,33,1.404,40,1.373,41,2.847,42,1.739,43,1.602,44,1.739,45,1.739,46,1.739,47,0.194,48,0.987,49,1.11,50,0.172,51,0.44,52,1.024,53,0.007,54,0.01,55,0.007,205,1.542,473,3.29,474,2.977,483,3.495,484,5.31,485,5.893,486,4.278,487,4.237,488,3.523,489,2.977,490,3.599,491,3.599,492,3.599,493,3.599]],["title/interceptors/ExceptionInterceptor.html",[433,2.641,447,2.641]],["body/interceptors/ExceptionInterceptor.html",[0,0.061,3,0.14,4,0.083,5,0.083,10,0.267,11,0.689,21,0.871,22,0.633,23,0.638,26,1.182,28,1.336,29,0.014,30,0.661,37,1.704,47,0.238,50,0.166,53,0.005,54,0.009,55,0.005,74,1.996,75,1.763,77,0.615,109,1.027,123,1.556,154,1.63,177,2.086,184,2.853,192,1.763,201,1.198,207,3.007,211,3.042,220,1.635,222,1.556,225,1.556,247,3.724,285,2.426,300,2.227,301,2.227,310,3.978,312,2.068,321,1.301,330,3.007,373,3.96,374,4.666,381,1.936,412,4.232,433,3.042,438,5.519,494,2.426,495,4.973,496,2.068,497,6.638,498,3.568,499,3.096,500,4.554,501,3.568,502,4.666,503,3.096,504,3.096,505,5.402,506,3.096,507,3.096,508,2.692,509,2.227,510,4.554,511,2.426,512,3.568,513,2.227,514,2.227,515,2.692,516,2.692,517,2.692,518,2.692,519,2.692,520,2.692,521,2.692,522,2.692,523,2.692,524,2.692,525,2.426,526,2.692,527,3.96,528,2.692,529,2.692,530,2.692,531,2.692,532,3.96,533,3.96,534,2.692,535,2.692,536,2.692,537,2.692,538,2.692,539,2.692,540,2.692,541,2.692,542,3.568,543,2.692,544,2.426,545,2.692,546,2.692,547,2.692,548,2.692,549,2.692,550,2.692,551,2.692,552,2.692,553,3.096,554,3.096,555,3.096,556,4.554,557,4.554,558,4.554,559,3.096,560,3.568,561,4.554,562,4.554,563,4.554,564,2.692,565,4.554,566,2.692,567,3.096,568,2.426,569,2.692,570,2.692,571,3.096,572,3.096,573,3.096,574,3.096,575,3.096,576,3.096,577,3.096,578,3.096]],["title/components/FavoritesComponent.html",[56,1.131,87,1.263]],["body/components/FavoritesComponent.html",[0,0.07,3,0.109,4,0.096,5,0.096,10,0.307,21,0.961,23,1.202,26,0.998,29,0.014,47,0.174,50,0.109,53,0.006,54,0.009,55,0.006,56,1.669,57,1.556,58,1.731,59,1.875,60,1.875,61,1.875,62,1.875,64,1.875,65,4.025,66,3.83,68,2.655,70,2.655,77,0.705,78,1.27,79,2.655,80,2.655,81,1.875,82,3.352,83,1.875,84,1.875,85,1.556,86,1.875,87,2.027,88,1.875,89,1.491,90,1.875,91,1.556,92,1.875,93,1.491,94,1.875,95,1.556,96,1.875,97,1.556,98,1.875,99,1.491,100,1.27,101,1.875,102,1.875,160,3.938,192,1.946,201,1.374,202,1.702,247,3.143,321,2.112,364,3.248,370,3.533,393,2.371,394,2.781,405,2.553,408,5.002,417,2.553,418,2.553,579,3.087,580,5.836,581,5.027,582,3.55,583,3.55,584,6.347,585,7.693,586,6.047,587,6.956,588,6.956,589,6.347,590,6.347,591,5.027,592,5.836,593,2.781,594,3.087,595,2.781,596,3.55,597,3.55,598,3.55,599,3.55,600,3.55,601,3.55,602,3.087,603,4.197,604,3.55,605,3.55,606,2.781,607,3.087]],["title/modules/FavoritesModule.html",[103,1.091,608,2.844]],["body/modules/FavoritesModule.html",[0,0.092,3,0.144,4,0.126,5,0.126,29,0.014,47,0.246,50,0.144,53,0.008,54,0.01,55,0.008,58,2.316,77,0.929,78,1.675,87,2.554,103,1.291,105,2.272,106,2.244,107,3.553,108,2.353,109,2.011,110,2.502,117,3.203,118,2.472,119,2.144,121,2.347,124,2.347,131,2.755,154,2.17,443,3.375,444,2.472,608,5.662,609,4.07,610,4.681,611,4.681,612,4.07,613,5.043,614,3.667,615,4.681,616,4.07]],["title/modules/FavoritesRoutingModule.html",[103,1.091,613,2.641]],["body/modules/FavoritesRoutingModule.html",[0,0.106,3,0.166,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.545,77,1.073,87,2.12,105,1.726,110,2.01,121,2.091,124,2.57,150,3.18,151,3.908,152,3.337,153,2.716,154,1.933,156,3.609,613,4.434,616,4.698,617,5.403,618,5.403,619,3.886,620,5.403]],["title/modules/FeatureModule.html",[103,1.091,454,2.089]],["body/modules/FeatureModule.html",[0,0.083,3,0.13,4,0.113,5,0.113,29,0.014,47,0.281,50,0.13,53,0.007,54,0.01,55,0.007,77,0.836,105,1.346,110,1.568,121,1.631,124,2.19,211,2.814,225,2.118,381,2.634,443,3.149,444,2.226,454,2.988,621,4.214,622,6.387,623,5.658,624,4.214,625,5.658,626,4.214,627,5.658,628,4.214,629,5.658,630,4.214,631,5.658,632,4.214,633,5.658,634,4.214,635,5.658,636,4.214,637,5.658,638,4.214,639,5.658,640,4.214,641,5.658,642,4.214,643,4.919,644,3.664,645,5.658,646,4.214,647,5.658,648,4.214,649,5.658,650,4.214,651,4.214]],["title/classes/Forecast.html",[0,0.078,652,2.089]],["body/classes/Forecast.html",[0,0.078,2,1.42,3,0.122,4,0.107,5,0.107,7,0.88,8,1.344,9,1.577,10,0.343,11,0.822,12,1.354,19,2.19,20,2.021,21,1.184,22,0.809,23,0.818,24,1.25,26,1.464,28,0.982,29,0.014,30,0.576,31,1.42,32,1.42,33,1.374,40,1.316,41,2.798,42,1.668,43,1.537,44,1.668,45,1.668,46,1.668,47,0.214,48,0.947,49,1.23,50,0.167,51,0.422,52,0.982,53,0.007,54,0.009,55,0.007,100,2.217,205,1.708,473,2.337,481,3.629,652,2.87,653,5.219,654,4.455,655,4.611,656,4.449,657,3.397,658,3.452,659,3.397,660,3.452,661,3.452,662,3.452,663,3.452,664,2.337,665,3.452,666,3.452,667,3.452,668,3.452]],["title/components/ForecastComponent.html",[56,1.131,89,1.661]],["body/components/ForecastComponent.html",[0,0.084,3,0.132,4,0.116,5,0.116,10,0.371,21,1.097,23,1.33,26,1.139,29,0.014,47,0.149,50,0.132,53,0.007,54,0.01,55,0.007,56,1.846,57,1.886,58,1.975,59,2.272,60,2.272,61,2.272,62,2.272,64,2.272,65,4.167,66,3.965,68,3.03,70,3.03,77,0.854,78,1.539,79,3.03,80,3.03,81,2.272,82,3.636,83,2.272,84,2.272,85,1.886,86,2.272,87,1.374,88,2.272,89,2.892,90,2.272,91,1.886,92,2.272,93,1.807,94,2.272,95,1.886,96,2.272,97,1.886,98,2.272,99,1.807,100,1.539,101,2.272,102,2.272,192,2.22,201,1.665,202,2.062,321,2.41,364,3.592,370,3.832,652,3.636,669,3.74,670,6.454,671,5.737,672,4.302,673,4.302,674,4.494]],["title/modules/ForecastModule.html",[103,1.091,675,2.844]],["body/modules/ForecastModule.html",[0,0.092,3,0.144,4,0.126,5,0.126,29,0.014,47,0.246,50,0.144,53,0.008,54,0.01,55,0.008,58,2.316,77,0.929,78,1.675,87,2.514,89,2.547,103,1.291,105,2.272,106,2.244,107,3.553,108,2.353,109,2.011,110,2.502,117,3.203,118,2.472,119,2.144,121,2.347,124,2.347,131,2.755,154,2.17,443,3.375,444,2.472,675,5.662,676,4.07,677,4.07,678,4.681,679,4.681,680,5.043,681,3.667,682,4.681,683,4.07]],["title/modules/ForecastRoutingModule.html",[103,1.091,680,2.641]],["body/modules/ForecastRoutingModule.html",[0,0.106,3,0.166,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.545,77,1.073,89,2.789,105,1.726,110,2.01,121,2.091,124,2.57,150,3.18,151,3.908,152,3.337,153,2.716,154,1.933,156,3.609,619,3.886,680,4.434,683,4.698,684,5.403,685,5.403,686,5.403]],["title/classes/GeoPosition.html",[0,0.078,687,2.328]],["body/classes/GeoPosition.html",[0,0.078,2,1.431,3,0.123,4,0.108,5,0.108,7,0.887,8,1.351,9,1.58,10,0.345,11,0.826,12,1.374,19,2.201,20,2.031,21,1.189,22,0.82,23,0.824,24,1.256,26,1.493,28,0.989,29,0.014,30,0.581,31,1.431,32,1.431,33,1.379,37,2.065,40,1.326,41,2.807,42,1.68,43,1.548,44,1.68,45,1.68,46,1.68,47,0.189,48,0.954,49,1.084,50,0.168,51,0.425,52,0.989,53,0.007,54,0.009,55,0.007,175,3.719,205,1.103,238,4.463,240,4.463,473,2.354,480,4.278,481,2.671,483,4.62,487,3.414,687,3.214,688,5.48,689,3.477,690,3.477,691,3.477]],["title/components/HeaderComponent.html",[56,1.131,91,1.733]],["body/components/HeaderComponent.html",[0,0.054,3,0.085,4,0.075,5,0.075,10,0.239,11,0.634,12,1.127,21,0.801,22,0.445,23,1.041,26,1.202,29,0.014,40,1.868,47,0.145,50,0.085,53,0.005,54,0.007,55,0.005,56,1.445,57,1.213,58,1.443,59,1.462,60,1.462,61,1.462,62,1.462,64,1.462,65,3.814,66,3.679,68,2.213,70,2.213,74,1.836,75,1.621,77,0.55,78,0.991,79,2.213,80,2.213,81,1.462,82,2.976,83,1.462,84,1.462,85,1.213,86,1.462,87,0.884,88,1.462,89,1.163,90,1.462,91,2.47,92,1.462,93,1.163,94,1.462,95,1.213,96,1.462,97,1.213,98,1.462,99,1.163,100,0.991,101,1.462,102,1.462,119,1.919,160,3.282,192,1.621,201,1.071,202,1.327,205,1.394,321,1.76,364,2.813,370,3.137,393,1.849,394,2.169,395,2.407,396,2.407,398,4.394,399,4.394,400,4.394,401,2.407,402,2.407,403,4.043,404,4.053,405,4.898,407,4.415,408,4.053,409,2.169,410,2.169,411,3.282,417,1.991,418,4.053,420,3.642,424,3.642,425,3.959,593,3.282,594,2.407,603,4.053,606,2.169,692,2.407,693,5.537,694,5.054,695,4.189,696,5.054,697,5.054,698,4.189,699,5.054,700,4.189,701,5.635,702,2.768,703,2.768,704,2.768,705,4.189,706,2.768,707,3.282,708,3.282,709,5.054,710,4.899,711,5.263,712,5.75,713,2.407,714,2.768,715,2.768,716,4.189,717,2.768,718,2.768,719,2.768,720,2.407,721,2.169,722,2.407,723,2.768,724,2.169,725,4.189,726,4.189,727,4.189,728,2.768,729,4.189,730,3.642,731,3.642,732,2.768,733,2.407,734,2.768,735,3.642,736,3.642,737,4.189,738,2.768]],["title/modules/HeaderModule.html",[103,1.091,456,2.472]],["body/modules/HeaderModule.html",[0,0.089,3,0.14,4,0.123,5,0.123,29,0.014,47,0.253,50,0.14,53,0.008,54,0.01,55,0.008,58,2.285,77,0.904,78,1.629,87,2.501,91,2.61,103,1.255,105,2.248,106,2.182,107,3.505,108,2.288,109,1.974,110,2.469,117,3.145,118,2.404,119,2.085,121,2.305,124,2.305,131,2.679,154,2.13,443,3.314,444,2.404,454,3.958,455,3.274,456,4.977,739,3.957,740,4.552,741,4.552,742,3.957,743,5.005,744,3.566,745,4.552,746,4.552]],["title/modules/HeaderRoutingModule.html",[103,1.091,743,2.641]],["body/modules/HeaderRoutingModule.html",[0,0.111,3,0.175,4,0.153,5,0.153,29,0.014,47,0.237,50,0.21,53,0.01,54,0.012,55,0.01,77,1.128,105,1.815,110,2.114,121,2.2,124,2.65,150,3.345,151,4.029,152,3.441,153,2.856,154,2.033,743,4.572,747,5.683,748,5.683,749,5.683]],["title/classes/Headline.html",[0,0.078,655,2.472]],["body/classes/Headline.html",[0,0.064,2,1.167,3,0.1,4,0.088,5,0.088,7,0.723,8,1.17,9,1.491,10,0.282,11,0.716,12,1.401,19,1.907,20,1.76,21,1.064,22,0.829,23,0.672,24,1.088,26,1.529,27,2.179,28,0.807,29,0.014,30,0.474,31,1.167,32,1.167,33,1.721,36,2.556,37,2.082,38,2.179,39,2.179,40,2.312,41,2.565,42,1.37,43,1.263,44,1.37,45,1.37,46,1.37,47,0.113,48,0.778,49,0.648,50,0.145,51,0.346,52,0.807,53,0.006,54,0.008,55,0.006,265,2.346,267,2.346,345,3.817,347,3.817,354,2.556,355,2.556,356,3.706,560,4.783,655,2.958,657,3.817,724,4.783,750,5.868,751,5.308,752,5.308,753,5.308,754,5.308,755,5.308]],["title/interfaces/IAdministrativeArea.html",[25,2.201,51,0.42]],["body/interfaces/IAdministrativeArea.html",[0,0.084,1,2.394,3,0.132,4,0.116,5,0.116,6,3.37,7,0.954,8,1.064,9,1.226,10,0.371,11,0.868,12,1.257,13,6.235,14,4.483,15,6.235,16,6.235,17,3.992,18,6.235,20,2.561,22,0.8,24,0.989,25,3.592,29,0.014,30,1.166,33,1.829,37,1.969,47,0.149,48,1.026,49,0.854,50,0.176,51,0.457,52,1.064,53,0.007,54,0.01,55,0.007,297,1.539]],["title/interfaces/IAutoComplete.html",[51,0.42,264,2.641]],["body/interfaces/IAutoComplete.html",[0,0.076,1,4.152,3,0.119,4,0.104,5,0.104,7,0.856,8,0.954,9,1.139,10,0.333,11,0.806,12,1.271,17,3.844,22,0.822,24,0.887,25,4.074,29,0.014,33,1.743,37,2.133,47,0.211,48,0.92,49,1.058,50,0.164,51,0.41,52,0.954,53,0.007,54,0.009,55,0.007,109,1.279,205,1.469,222,1.939,256,2.148,257,3.023,258,3.648,259,3.355,260,4.613,261,4.967,262,3.355,263,5.411,264,4.076,269,2.775,270,2.775,271,2.775,272,2.775,273,3.355,274,3.355,275,3.023,276,3.355,277,3.355,278,3.355,297,1.381]],["title/interfaces/IConditions.html",[51,0.42,351,2.641]],["body/interfaces/IConditions.html",[0,0.069,3,0.108,4,0.095,5,0.095,7,0.781,8,0.871,9,1.068,10,0.304,11,0.756,12,1.282,22,0.788,24,0.81,29,0.014,30,1.157,33,1.703,37,2.085,40,2.096,47,0.201,48,0.84,49,0.992,50,0.154,51,0.374,52,0.871,53,0.006,54,0.009,55,0.006,109,1.167,205,0.971,210,3.85,222,1.769,297,1.259,339,1.859,340,2.758,341,5.805,342,2.532,343,4.802,344,5.805,345,4.174,346,5.805,347,4.174,348,3.971,349,5.805,350,5.805,351,3.879,358,3.519,359,2.532,360,2.532,361,2.532,362,3.06]],["title/interfaces/ICountry.html",[51,0.42,472,2.472]],["body/interfaces/ICountry.html",[0,0.098,3,0.154,4,0.134,5,0.134,7,1.107,8,1.235,9,1.351,10,0.431,11,0.956,12,1.077,14,4.7,17,4.185,20,2.711,22,0.737,24,1.149,29,0.014,30,1.115,33,1.791,47,0.173,48,1.191,49,0.991,50,0.194,51,0.53,52,1.235,53,0.009,54,0.011,55,0.009,258,2.637,297,1.787,471,3.912,472,4.335]],["title/interfaces/IDay.html",[51,0.42,479,2.472]],["body/interfaces/IDay.html",[0,0.093,3,0.145,4,0.127,5,0.127,7,1.047,8,1.168,9,1.303,10,0.408,11,0.922,12,1.217,22,0.717,24,1.086,29,0.014,30,1.099,33,1.583,37,2.041,47,0.211,48,1.126,49,0.937,50,0.187,51,0.501,52,1.168,53,0.008,54,0.01,55,0.008,109,1.565,210,3.77,222,2.373,297,1.689,342,3.396,343,5.315,475,2.952,476,3.699,477,5.79,478,6.425,479,4.222,482,4.105]],["title/interfaces/IElevation.html",[51,0.42,487,2.472]],["body/interfaces/IElevation.html",[0,0.097,3,0.152,4,0.133,5,0.133,7,1.094,8,1.22,9,1.341,10,0.426,11,0.949,12,1.069,22,0.666,24,1.135,29,0.014,30,1.054,47,0.217,48,1.177,49,1.245,50,0.193,51,0.524,52,1.22,53,0.008,54,0.011,55,0.008,205,1.73,297,1.765,483,3.084,484,3.865,485,6.513,486,4.383,487,4.311,488,4.33,489,3.548,490,4.29,491,4.29,492,4.29,493,4.29]],["title/interfaces/IForecast.html",[51,0.42,656,2.641]],["body/interfaces/IForecast.html",[0,0.092,3,0.144,4,0.126,5,0.126,7,1.041,8,1.161,9,1.299,10,0.405,11,0.919,12,1.036,22,0.645,24,1.08,29,0.014,30,1.034,47,0.233,48,1.12,49,1.337,50,0.187,51,0.499,52,1.161,53,0.008,54,0.01,55,0.008,100,2.174,205,1.857,297,1.68,652,2.48,653,3.678,654,3.376,655,4.808,656,4.499,657,4.453,658,4.082,659,4.453,660,4.082,661,6.193,662,4.082,663,4.082,664,2.763,665,4.082,666,4.082,667,4.082,668,4.082]],["title/interfaces/IGeoPosition.html",[51,0.42,175,2.201]],["body/interfaces/IGeoPosition.html",[0,0.093,3,0.146,4,0.128,5,0.128,7,1.053,8,1.175,9,1.308,10,0.41,11,0.926,12,1.154,22,0.719,24,1.092,29,0.014,30,1.101,37,2.234,47,0.212,48,1.133,49,1.215,50,0.188,51,0.504,52,1.175,53,0.008,54,0.01,55,0.008,175,3.77,205,1.31,238,4.945,240,4.945,297,1.699,483,4.821,487,4.472,687,2.795,688,3.72,689,4.129,690,4.129,691,4.129]],["title/interfaces/IHeadline.html",[51,0.42,657,2.472]],["body/interfaces/IHeadline.html",[0,0.074,3,0.117,4,0.102,5,0.102,7,0.842,8,0.939,9,1.126,10,0.328,11,0.797,12,1.286,22,0.801,24,0.873,29,0.014,30,1.167,33,1.768,37,2.226,40,2.463,47,0.131,48,0.905,49,0.754,50,0.162,51,0.403,52,0.939,53,0.006,54,0.009,55,0.006,297,1.358,345,4.293,347,4.293,560,5.379,655,2.373,657,3.783,724,5.379,750,2.974,751,5.97,752,5.97,753,5.97,754,5.97,755,5.97]],["title/interfaces/ILocation.html",[51,0.42,756,2.641]],["body/interfaces/ILocation.html",[0,0.055,1,3.705,3,0.087,4,0.076,5,0.076,7,0.625,8,0.698,9,0.908,10,0.244,11,0.643,12,1.28,14,3.815,17,3.397,22,0.81,24,0.649,25,3.166,29,0.014,30,1.151,33,1.723,37,1.627,47,0.23,48,0.673,49,1.321,50,0.131,51,0.3,52,0.698,53,0.005,54,0.007,55,0.005,175,3.166,176,2.028,205,1.769,210,3.223,258,3.772,260,4.076,261,4.389,269,2.028,270,2.028,271,2.028,272,2.028,297,1.009,339,2.7,472,4.161,652,2.7,664,1.66,687,4.032,756,3.414,757,2.21,758,4.781,759,5.306,760,5.306,761,4.282,762,3.557,763,2.21,764,2.452,765,2.21,766,2.452,767,1.763,768,2.452,769,3.694,770,2.452,771,2.452,772,2.452,773,2.452,774,2.452,775,2.452,776,2.452]],["title/interfaces/IMenuEvent.html",[51,0.42,777,2.844]],["body/interfaces/IMenuEvent.html",[3,0.172,4,0.15,5,0.15,10,0.482,11,1.025,22,0.72,29,0.014,47,0.193,50,0.172,51,0.593,53,0.01,54,0.012,55,0.01,297,1.999,381,3.493,595,5.94,777,4.873,778,4.857,779,4.377,780,6.592,781,6.592,782,7.293]],["title/interfaces/IMetric.html",[51,0.42,488,2.201]],["body/interfaces/IMetric.html",[0,0.097,3,0.152,4,0.133,5,0.133,7,1.094,8,1.22,9,1.341,10,0.426,11,0.949,12,1.175,22,0.732,24,1.135,29,0.014,30,1.112,33,1.609,37,2.252,47,0.171,48,1.177,49,0.979,50,0.193,51,0.524,52,1.22,53,0.008,54,0.011,55,0.008,75,2.899,297,1.765,486,2.746,488,3.838,783,3.865,784,5.869,785,6.513]],["title/interfaces/ISearchEvent.html",[51,0.42,786,2.844]],["body/interfaces/ISearchEvent.html",[3,0.171,4,0.15,5,0.15,10,0.481,11,1.023,22,0.718,29,0.014,33,1.615,50,0.171,51,0.591,53,0.01,54,0.012,55,0.01,297,1.992,779,4.362,780,6.584,786,4.863,787,4.841,788,7.573,789,7.282,790,7.282]],["title/interfaces/ITemperature.html",[51,0.42,358,2.201]],["body/interfaces/ITemperature.html",[0,0.098,3,0.153,4,0.134,5,0.134,7,1.104,8,1.231,9,1.348,10,0.43,11,0.954,12,1.075,22,0.67,24,1.145,29,0.014,30,1.057,47,0.218,48,1.187,49,1.252,50,0.194,51,0.529,52,1.231,53,0.009,54,0.011,55,0.009,205,1.74,297,1.781,322,5.402,348,2.771,358,3.854,486,3.854,488,4.339,489,3.58,791,3.9,792,6.531,793,4.328,794,4.328,795,4.328,796,4.328]],["title/interfaces/ITimeZone.html",[51,0.42,762,2.472]],["body/interfaces/ITimeZone.html",[0,0.088,3,0.138,4,0.121,5,0.121,7,0.996,8,1.11,9,1.261,10,0.388,11,0.893,12,1.193,21,1.339,22,0.772,24,1.033,29,0.014,30,1.145,33,1.687,37,2.002,40,2.321,47,0.155,48,1.071,49,0.891,50,0.181,51,0.477,52,1.11,53,0.008,54,0.01,55,0.008,210,3.698,297,1.606,761,2.807,762,4.121,797,3.517,798,5.698,799,6.323,800,6.323,801,6.323]],["title/interfaces/IWeather.html",[51,0.42,659,2.472]],["body/interfaces/IWeather.html",[0,0.07,3,0.109,4,0.096,5,0.096,7,0.787,8,0.878,9,1.075,10,0.307,11,0.76,12,1.245,22,0.776,24,0.817,29,0.014,30,1.147,33,1.706,37,1.815,40,2.464,47,0.202,48,0.847,49,1.158,50,0.155,51,0.377,52,0.878,53,0.006,54,0.009,55,0.006,100,1.27,205,1.75,297,1.27,345,4.188,347,4.188,348,3.981,358,3.533,359,2.553,360,2.553,361,2.553,475,4.71,479,4.471,659,3.649,664,2.09,802,2.781,803,5.824,804,5.824,805,5.824,806,3.087,807,4.371,808,3.087,809,3.087,810,3.087,811,3.087]],["title/classes/Location.html",[0,0.078,767,2.472]],["body/classes/Location.html",[0,0.048,1,3.514,2,0.869,3,0.075,4,0.065,5,0.065,7,0.539,8,0.937,9,1.35,10,0.21,11,0.573,12,1.396,14,3.289,17,2.929,19,1.527,20,1.41,21,0.891,22,0.819,23,0.5,24,0.871,25,2.109,26,1.507,28,0.601,29,0.014,30,0.353,31,0.869,32,0.869,33,1.647,37,1.332,40,0.805,41,2.21,42,1.02,43,0.94,44,1.02,45,1.02,46,1.02,47,0.219,48,0.579,49,1.253,50,0.117,51,0.258,52,0.601,53,0.004,54,0.006,55,0.004,175,2.109,176,1.747,205,1.667,210,3.013,258,3.692,260,3.514,261,3.784,266,2.112,268,2.112,269,1.747,270,1.747,271,1.747,272,1.747,339,3.193,352,2.112,353,2.112,357,2.112,472,2.912,652,3.193,664,1.43,687,3.844,756,3.514,757,5.818,758,4.122,759,4.575,760,4.575,761,4.083,762,2.369,763,1.903,764,2.112,765,1.903,766,2.112,767,2.369,768,4.05,769,3.294,770,2.112,771,2.112,772,2.112,773,2.112,774,2.112,775,2.112,776,2.112,812,3.789,813,2.429,814,2.429,815,2.429,816,2.429,817,2.429,818,2.429,819,2.429,820,2.429]],["title/guards/LocationResolver.html",[450,2.844,821,3.098]],["body/guards/LocationResolver.html",[0,0.092,3,0.144,4,0.126,5,0.126,10,0.403,21,1.157,22,0.643,23,0.962,26,1.202,28,1.497,29,0.014,30,0.879,47,0.255,50,0.144,53,0.008,54,0.01,55,0.008,77,0.927,123,2.346,153,2.346,177,2.772,178,3.572,184,2.465,192,2.343,201,1.807,207,3.739,220,2.465,225,2.346,321,1.961,330,2.598,371,3.357,376,4.043,383,2.918,450,4.353,544,3.657,822,4.668,823,4.058,824,7.107,825,5.84,826,6.179,827,4.668,828,6.053,829,7.107,830,4.668,831,6.053,832,5.263,833,4.668]],["title/classes/Metric.html",[0,0.078,486,2.201]],["body/classes/Metric.html",[0,0.081,2,1.477,3,0.127,4,0.111,5,0.111,7,0.916,8,1.38,9,1.593,10,0.357,11,0.844,12,1.379,19,2.249,20,2.076,21,1.209,22,0.825,23,0.851,24,1.284,26,1.504,28,1.021,29,0.014,30,0.6,31,1.477,32,1.477,33,1.616,37,2.085,40,1.369,41,2.844,42,1.735,43,1.598,44,1.735,45,1.735,46,1.735,47,0.143,48,0.985,49,0.82,50,0.172,51,0.439,52,1.021,53,0.007,54,0.01,55,0.007,75,2.621,473,2.431,474,2.97,481,3.727,486,3.106,488,3.769,783,5.541,784,5.305,785,5.887]],["title/classes/RequestCache.html",[0,0.078,320,2.472]],["body/classes/RequestCache.html",[0,0.107,2,1.427,3,0.123,4,0.107,5,0.107,10,0.344,12,0.68,21,1.042,22,0.579,23,0.822,26,1.082,28,1.348,29,0.014,30,0.792,47,0.215,49,0.792,50,0.168,53,0.007,54,0.009,55,0.007,77,0.792,123,2.005,154,2.388,177,2.497,181,3.921,184,2.879,192,2.11,201,2.11,202,2.977,205,1.1,287,5.786,296,2.664,299,3.125,300,5.026,301,2.869,302,5.407,303,2.664,304,3.125,305,3.468,306,3.468,307,4.74,309,5.4,310,5.022,312,3.641,313,5.803,314,4.74,316,2.869,317,3.468,319,3.468,320,3.883,321,1.676,322,2.869,323,3.125,324,3.468,325,3.468,326,3.468,327,4.74,328,4.74,329,3.468,330,2.22,331,3.468,332,4.74,333,3.468,334,4.74,335,3.468,336,3.468,337,3.468,338,3.468,834,3.989,835,3.989]],["title/interceptors/RequestInterceptor.html",[434,2.641,447,2.641]],["body/interceptors/RequestInterceptor.html",[0,0.079,3,0.124,4,0.109,5,0.109,10,0.35,21,1.053,22,0.585,23,0.834,26,1.093,28,1.362,29,0.014,30,0.799,47,0.261,50,0.124,53,0.007,54,0.009,55,0.007,77,0.804,109,1.342,123,2.035,154,1.448,177,2.522,178,3.375,184,2.138,192,2.131,201,1.567,207,3.483,220,2.138,222,2.035,225,2.035,247,3.912,285,3.171,302,3.96,310,4.485,312,4.179,320,4.199,321,1.701,323,4.902,330,2.253,371,2.911,376,3.678,383,2.531,388,4.314,390,3.52,434,3.678,462,3.52,494,3.171,496,2.704,498,4.314,501,4.314,502,5.261,508,3.52,509,2.911,511,3.171,512,4.314,513,2.911,564,3.52,568,3.171,569,3.52,570,3.52,836,5.441,837,4.048,838,4.048,839,4.048,840,4.048,841,4.048,842,5.506,843,4.048,844,3.52,845,4.048,846,4.048,847,4.048,848,4.048,849,4.048]],["title/interceptors/ResponseInterceptor.html",[435,2.641,447,2.641]],["body/interceptors/ResponseInterceptor.html",[0,0.094,3,0.147,4,0.129,5,0.129,10,0.414,21,1.177,22,0.654,23,0.987,26,1.222,28,1.522,29,0.014,30,0.894,47,0.248,50,0.147,53,0.008,54,0.011,55,0.008,77,0.951,123,2.407,177,2.819,178,3.607,192,2.382,201,1.854,207,3.785,220,2.53,225,2.407,247,4.252,310,4.793,312,3.199,321,2.012,330,2.666,371,3.445,376,4.111,383,2.995,435,4.111,494,3.753,496,3.199,498,4.822,501,4.822,502,5.623,511,3.753,512,4.822,844,4.165,850,5.913,851,4.79,852,4.79]],["title/components/SearchComponent.html",[56,1.131,93,1.661]],["body/components/SearchComponent.html",[0,0.038,3,0.059,4,0.052,5,0.052,10,0.166,11,0.475,12,1.299,21,0.761,22,0.61,23,0.395,26,1.347,28,0.475,29,0.014,30,0.736,47,0.221,49,0.381,50,0.059,53,0.003,54,0.005,55,0.003,56,1.139,57,0.841,58,1.081,59,1.014,60,1.014,61,1.014,62,1.014,64,1.014,65,3.452,66,3.352,68,1.658,70,1.658,72,1.669,74,2.387,75,2.224,77,0.381,78,0.687,79,1.658,80,1.658,81,1.014,82,2.43,83,1.014,84,1.014,85,0.841,86,1.014,87,0.613,88,1.014,89,0.806,90,1.014,91,0.841,92,1.014,93,1.932,94,1.014,95,0.841,96,1.014,97,0.841,98,1.014,99,0.806,100,1.425,101,1.014,102,1.014,184,2.876,192,1.215,201,0.743,202,0.92,204,3.999,205,1.269,207,2.216,220,1.014,225,0.965,238,2.096,240,2.096,256,2.216,316,1.38,321,1.319,364,2.216,370,2.56,381,1.2,388,3.604,393,1.282,403,3.072,404,4.133,407,2.459,408,2.257,409,2.459,410,2.459,411,3.604,417,4.133,421,1.669,422,1.669,423,2.729,425,1.504,436,2.876,463,1.669,477,2.459,509,1.38,586,3.462,593,4.266,602,1.669,603,3.648,606,1.504,607,2.729,693,2.729,707,2.459,708,2.459,710,3.462,711,3.462,712,3.462,713,2.729,720,4.41,721,3.604,722,2.729,730,3.999,731,3.462,733,1.669,767,2.489,777,2.864,781,4.41,786,2.257,853,1.669,854,5.213,855,3.982,856,3.139,857,3.982,858,3.982,859,3.982,860,3.982,861,3.982,862,3.982,863,3.982,864,3.982,865,3.982,866,3.982,867,3.982,868,1.919,869,3.139,870,1.919,871,4.6,872,1.919,873,1.919,874,1.919,875,1.919,876,1.919,877,1.919,878,1.919,879,3.139,880,3.139,881,3.139,882,1.919,883,1.919,884,1.919,885,1.919,886,3.139,887,1.919,888,1.919,889,1.669,890,1.919,891,1.919,892,1.919,893,1.504,894,3.139,895,1.919,896,3.982,897,1.919,898,1.919,899,1.919,900,1.919,901,1.919,902,1.919,903,1.919,904,1.919,905,1.919,906,1.919,907,1.919,908,1.669,909,3.139,910,3.139,911,1.919,912,3.139,913,1.919,914,1.669,915,1.919,916,1.919,917,1.919,918,1.919,919,2.729,920,3.139,921,3.139,922,3.139,923,1.919,924,3.139,925,1.919,926,1.919,927,1.919,928,1.919,929,1.919,930,5.072,931,3.139,932,1.919,933,3.139,934,1.919,935,3.139,936,3.139,937,3.139,938,3.139,939,1.919,940,3.139,941,1.669,942,1.919]],["title/modules/SearchModule.html",[103,1.091,460,2.472]],["body/modules/SearchModule.html",[0,0.088,3,0.138,4,0.121,5,0.121,29,0.014,47,0.258,50,0.138,53,0.008,54,0.01,55,0.008,58,2.267,77,0.889,78,1.602,87,2.493,93,2.474,103,1.235,105,2.234,106,2.146,107,3.477,108,2.25,109,1.953,110,2.449,117,3.111,118,2.365,119,2.051,121,2.28,124,2.28,131,2.635,154,2.108,443,3.279,444,2.365,454,3.94,455,3.22,460,4.964,893,3.508,943,3.893,944,4.478,945,4.478,946,3.893,947,4.982,948,3.508,949,5.891,950,4.478,951,3.893]],["title/modules/SearchRoutingModule.html",[103,1.091,947,2.641]],["body/modules/SearchRoutingModule.html",[0,0.106,3,0.166,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.545,77,1.073,93,2.789,105,1.726,110,2.01,121,2.091,124,2.57,150,3.18,151,3.908,152,3.337,153,2.716,154,1.933,156,3.609,619,3.886,947,4.434,951,4.698,952,5.403,953,5.403,954,5.403]],["title/components/SettingsComponent.html",[56,1.131,95,1.733]],["body/components/SettingsComponent.html",[0,0.084,3,0.132,4,0.116,5,0.116,10,0.371,21,1.097,23,1.33,26,1.139,29,0.014,47,0.149,50,0.132,53,0.007,54,0.01,55,0.007,56,1.846,57,1.886,58,1.975,59,2.272,60,2.272,61,2.272,62,2.272,64,2.272,65,4.167,66,3.965,68,3.03,70,3.03,77,0.854,78,1.539,79,3.03,80,3.03,81,2.272,82,3.636,83,2.272,84,2.272,85,1.886,86,2.272,87,1.374,88,2.272,89,1.807,90,2.272,91,1.886,92,2.272,93,1.807,94,2.272,95,3.018,96,2.272,97,1.886,98,2.272,99,1.807,100,1.539,101,2.272,102,2.272,192,2.22,201,1.665,202,2.062,224,4.951,321,2.41,364,3.592,370,3.832,674,4.494,955,3.74,956,6.454,957,5.737,958,4.302,959,4.302]],["title/components/SidenavComponent.html",[56,1.131,97,1.733]],["body/components/SidenavComponent.html",[0,0.071,3,0.112,4,0.098,5,0.098,10,0.314,12,0.62,21,1.131,22,0.543,23,0.749,26,1.174,28,0.899,29,0.014,30,0.528,47,0.222,50,0.112,53,0.006,54,0.009,55,0.006,56,1.691,57,1.594,58,1.761,59,1.921,60,1.921,61,1.921,62,1.921,64,1.921,65,4.043,66,3.941,68,2.7,70,2.7,74,1.594,75,1.408,77,0.722,78,1.301,79,2.7,80,2.7,81,1.921,82,3.388,83,1.921,84,1.921,85,1.594,86,1.921,87,1.162,88,1.921,89,1.528,90,1.921,91,1.594,92,1.921,93,1.528,94,1.921,95,1.594,96,1.921,97,2.812,98,1.921,99,1.528,100,1.301,101,1.921,102,1.921,119,2.342,137,2.429,139,3.697,140,2.429,147,3.949,148,4.006,178,3.224,192,1.979,201,1.408,202,1.743,225,1.828,321,2.148,364,3.291,370,3.571,383,2.274,393,2.429,403,2.429,404,2.615,405,2.615,406,3.162,418,3.677,426,5.141,603,2.615,707,2.849,708,2.849,735,4.445,736,4.445,941,4.445,960,3.162,961,5.913,962,5.113,963,5.113,964,3.637,965,5.113,966,5.113,967,3.637,968,3.637,969,5.113,970,3.637,971,3.637]],["title/modules/SidenavModule.html",[103,1.091,458,2.472]],["body/modules/SidenavModule.html",[0,0.09,3,0.141,4,0.123,5,0.123,29,0.014,47,0.26,50,0.141,53,0.008,54,0.01,55,0.008,58,2.291,77,0.909,78,1.638,87,2.504,95,2.62,97,2.62,103,1.262,105,2.253,106,2.194,107,3.514,108,2.3,109,1.981,110,2.475,117,3.156,118,2.417,119,2.096,121,2.313,124,2.313,154,2.138,443,3.326,444,2.417,454,3.964,455,3.292,458,4.901,643,5.196,644,3.979,972,3.979,973,4.577,974,4.577,975,4.577,976,3.586,977,4.577,978,4.577]],["title/classes/Temperature.html",[0,0.078,348,2.201]],["body/classes/Temperature.html",[0,0.082,2,1.492,3,0.128,4,0.112,5,0.112,7,0.925,8,1.39,9,1.597,10,0.36,11,0.85,12,1.363,19,2.265,20,2.09,21,1.215,22,0.818,23,0.859,24,1.292,26,1.483,28,1.032,29,0.014,30,0.606,31,1.492,32,1.492,33,1.409,40,1.383,41,2.856,42,1.752,43,1.614,44,1.752,45,1.752,46,1.752,47,0.195,48,0.995,49,1.115,50,0.173,51,0.443,52,1.032,53,0.007,54,0.01,55,0.007,205,1.55,322,4.89,348,3.128,358,3.784,473,3.307,474,3,486,3.95,488,3.537,489,3,791,5.326,792,5.911,793,3.627,794,3.627,795,3.627,796,3.627]],["title/classes/TimeZone.html",[0,0.078,761,2.472]],["body/classes/TimeZone.html",[0,0.076,2,1.39,3,0.119,4,0.105,5,0.105,7,0.862,8,1.324,9,1.568,10,0.336,11,0.81,12,1.383,19,2.158,20,1.992,21,1.262,22,0.823,23,0.801,24,1.231,26,1.505,28,0.961,29,0.014,30,0.564,31,1.39,32,1.39,33,1.626,34,3.378,35,4.655,37,1.752,40,2.189,41,2.773,42,1.632,43,1.504,44,1.632,45,1.632,46,1.632,47,0.135,48,0.927,49,0.771,50,0.165,51,0.413,52,0.961,53,0.007,54,0.009,55,0.007,210,3.235,480,3.044,481,2.595,761,3.347,762,4.127,797,5.607,798,5.172,799,5.739,800,5.739,801,5.739]],["title/classes/Weather.html",[0,0.078,100,1.415]],["body/classes/Weather.html",[0,0.061,2,1.104,3,0.095,4,0.083,5,0.083,7,0.684,8,1.123,9,1.465,10,0.266,11,0.687,12,1.389,19,1.83,20,1.69,21,1.031,22,0.817,23,0.636,24,1.045,26,1.502,27,2.06,28,0.763,29,0.014,30,0.448,31,1.104,32,1.104,33,1.661,37,1.542,38,2.06,39,2.06,40,2.332,41,2.498,42,1.296,43,1.194,44,1.296,45,1.296,46,1.296,47,0.187,48,0.736,49,1.07,50,0.14,51,0.328,52,0.763,53,0.005,54,0.008,55,0.005,100,1.625,205,1.64,265,2.218,267,2.218,345,3.717,347,3.717,348,3.815,354,2.417,355,2.417,356,3.558,358,2.528,359,2.218,360,2.218,361,2.218,475,4.627,479,3.37,659,3.717,664,1.816,802,5.719,803,5.169,804,5.169,805,5.169,806,2.682,807,3.949,808,2.682,809,2.682,810,2.682,811,2.682]],["title/components/WeatherComponent.html",[56,1.131,99,1.661]],["body/components/WeatherComponent.html",[0,0.084,3,0.132,4,0.116,5,0.116,10,0.371,21,1.097,23,1.33,26,1.139,29,0.014,47,0.149,50,0.132,53,0.007,54,0.01,55,0.007,56,1.846,57,1.886,58,1.975,59,2.272,60,2.272,61,2.272,62,2.272,64,2.272,65,4.167,66,3.965,68,3.03,70,3.03,77,0.854,78,1.539,79,3.03,80,3.03,81,2.272,82,3.636,83,2.272,84,2.272,85,1.886,86,2.272,87,1.374,88,2.272,89,1.807,90,2.272,91,1.886,92,2.272,93,1.807,94,2.272,95,1.886,96,2.272,97,1.886,98,2.272,99,2.892,100,2.566,101,2.272,102,2.272,192,2.22,201,1.665,202,2.062,321,2.41,364,3.592,370,3.832,674,4.494,979,3.74,980,6.454,981,5.737,982,4.302,983,4.302]],["title/modules/WeatherModule.html",[103,1.091,984,2.844]],["body/modules/WeatherModule.html",[0,0.092,3,0.144,4,0.126,5,0.126,29,0.014,47,0.246,50,0.144,53,0.008,54,0.01,55,0.008,58,2.313,77,0.927,78,1.67,87,2.513,99,2.543,103,1.287,105,2.27,106,2.237,107,3.548,108,2.346,109,2.007,110,2.499,117,3.197,118,2.465,119,2.138,121,2.343,124,2.343,131,2.748,154,2.166,443,3.369,444,2.465,984,5.659,985,4.058,986,4.668,987,4.668,988,4.058,989,5.039,990,3.657,991,4.668,992,4.058]],["title/modules/WeatherRoutingModule.html",[103,1.091,989,2.641]],["body/modules/WeatherRoutingModule.html",[0,0.106,3,0.166,4,0.146,5,0.146,29,0.014,47,0.249,50,0.204,53,0.009,54,0.011,55,0.009,56,1.545,77,1.073,99,2.789,105,1.726,110,2.01,121,2.091,124,2.57,150,3.18,151,3.908,152,3.337,153,2.716,154,1.933,156,3.609,619,3.886,989,4.434,992,4.698,993,5.403,994,5.403,995,5.403]],["title/injectables/WeatherService.html",[177,1.811,436,2.472]],["body/injectables/WeatherService.html",[0,0.05,3,0.078,4,0.068,5,0.068,9,0.543,10,0.219,11,0.594,12,1.266,21,0.486,22,0.417,23,0.524,26,1.379,28,0.629,29,0.014,30,0.369,31,1.715,32,0.909,33,1.423,37,1.122,47,0.245,48,0.606,49,1.156,50,0.078,53,0.004,54,0.007,55,0.004,74,2.982,75,2.815,77,0.505,109,0.843,123,1.277,167,3.37,177,1.797,179,1.828,181,3.448,184,3.841,205,1.916,207,3.427,220,1.342,222,1.277,223,1.991,224,1.828,225,1.277,256,3.001,260,3.6,264,1.698,316,4.19,330,1.415,339,1.342,351,1.698,416,3.412,436,2.453,509,1.828,568,3.075,595,1.991,652,1.342,656,1.698,664,2.822,756,1.698,763,1.991,765,1.991,767,3.37,825,3.412,826,4.687,832,4.168,854,3.412,889,2.21,908,2.21,914,2.21,996,2.21,997,3.756,998,4.794,999,4.794,1000,4.794,1001,4.794,1002,4.794,1003,4.794,1004,4.794,1005,2.542,1006,3.925,1007,2.542,1008,2.542,1009,2.542,1010,2.542,1011,2.542,1012,2.542,1013,2.542,1014,2.542,1015,2.542,1016,2.542,1017,4.794,1018,2.542,1019,2.542,1020,2.542,1021,2.542,1022,2.542,1023,3.925,1024,2.542,1025,5.826,1026,2.542,1027,3.925,1028,5.826,1029,2.542,1030,2.542,1031,3.925,1032,2.542,1033,2.542,1034,2.542,1035,2.542,1036,2.542,1037,2.542,1038,2.542,1039,3.925,1040,3.925,1041,2.542,1042,2.542,1043,2.542,1044,2.542,1045,2.542,1046,2.542,1047,2.542]],["title/coverage.html",[1048,4.712]],["body/coverage.html",[0,0.143,1,1.19,5,0.058,6,2.684,7,1.734,9,0.457,22,0.227,25,1.19,29,0.014,51,0.776,53,0.004,54,0.006,55,0.004,56,1.842,57,0.938,58,2.07,63,1.86,85,0.938,87,0.683,89,0.898,91,0.938,93,0.898,95,0.938,97,0.938,99,0.898,100,0.765,105,1.92,109,1.136,167,1.337,168,1.86,169,1.86,175,1.19,177,1.963,178,1.075,180,1.86,205,0.59,221,2.684,256,1.19,257,2.684,258,1.13,264,1.429,279,1.86,284,1.676,296,1.429,298,1.86,303,1.429,304,2.684,320,1.337,339,1.13,340,2.684,348,1.19,351,1.429,358,1.19,363,1.86,412,6.491,433,1.429,434,1.429,435,1.429,436,1.337,437,2.684,447,2.863,450,1.538,471,2.684,472,1.337,475,1.337,476,2.684,479,1.337,483,1.337,484,2.684,486,1.19,487,1.337,488,1.19,495,3.358,496,3.582,513,1.538,514,1.538,525,1.676,579,1.86,614,2.684,652,1.13,653,2.684,655,1.337,656,1.429,657,1.337,659,1.337,669,1.86,681,2.684,687,1.259,688,2.684,692,1.86,744,2.684,750,2.684,756,1.429,757,2.684,761,1.337,762,1.337,767,1.337,777,1.538,778,1.86,779,2.684,783,2.684,786,1.538,787,1.86,791,2.684,797,2.684,802,2.684,821,1.676,823,1.86,836,1.86,850,1.86,853,1.86,948,2.684,955,1.86,960,1.86,976,2.684,979,1.86,990,2.684,996,1.86,997,1.676,1048,1.86,1049,2.139,1050,2.139,1051,2.139,1052,7.078,1053,2.139,1054,7.768,1055,7.768,1056,5.363,1057,5.722,1058,4.286,1059,4.261,1060,1.86,1061,1.86,1062,2.139,1063,2.139,1064,5.722,1065,3.426,1066,4.901,1067,4.286,1068,2.139,1069,2.139,1070,2.139,1071,2.139,1072,3.727,1073,2.979,1074,3.727,1075,2.979,1076,1.86,1077,2.139,1078,2.139]],["title/dependencies.html",[106,2.283,1079,3.292]],["body/dependencies.html",[29,0.014,43,1.951,53,0.009,54,0.011,55,0.009,77,1,106,2.416,108,2.533,126,5.527,127,4.98,153,2.533,220,2.662,286,4.381,444,2.662,721,3.948,893,3.948,1080,5.04,1081,6.937,1082,5.04,1083,5.04,1084,5.04,1085,5.04,1086,5.04,1087,5.04,1088,5.04,1089,5.04,1090,5.04,1091,5.04,1092,5.04,1093,5.04,1094,5.04,1095,5.04,1096,5.04,1097,5.04,1098,6.357,1099,5.04,1100,5.04,1101,5.04,1102,5.04,1103,5.04,1104,5.04,1105,5.04,1106,5.04]],["title/miscellaneous/enumerations.html",[1107,2.367,1108,4.14]],["body/miscellaneous/enumerations.html",[10,0.395,29,0.014,53,0.008,54,0.01,55,0.008,75,3.167,100,2.138,133,4.298,136,4.298,139,3.736,146,5.196,256,3.326,258,3.156,339,3.156,654,4.298,758,4.682,1107,3.292,1108,3.979,1109,4.577,1110,5.976,1111,4.577,1112,5.976,1113,5.976,1114,4.577,1115,5.976,1116,5.976,1117,4.577,1118,5.976,1119,5.976,1120,5.976,1121,4.577,1122,5.976,1123,5.976,1124,4.577,1125,5.976,1126,5.976,1127,5.196,1128,4.577,1129,5.976,1130,4.577,1131,5.976,1132,5.976,1133,5.976,1134,5.976,1135,5.976,1136,5.976]],["title/index.html",[10,0.284,1137,3.292,1138,3.292]],["body/index.html",[4,0.123,21,0.873,29,0.01,53,0.008,54,0.01,55,0.008,56,1.9,66,2.294,76,5.777,119,2.091,205,1.259,263,3.576,376,3.048,403,3.048,514,3.283,542,4.673,652,2.411,784,4.673,798,3.576,919,3.968,1081,3.968,1139,5.965,1140,4.564,1141,6.645,1142,6.645,1143,7.5,1144,4.564,1145,4.564,1146,4.564,1147,4.564,1148,4.564,1149,4.564,1150,7.64,1151,4.564,1152,4.564,1153,4.564,1154,4.564,1155,4.564,1156,4.564,1157,4.564,1158,4.564,1159,4.564,1160,6.645,1161,6.645,1162,4.564,1163,7.312,1164,4.564,1165,4.564,1166,4.564,1167,4.564,1168,4.564,1169,3.968,1170,5.965,1171,7.046,1172,4.564,1173,5.965,1174,5.965,1175,4.564,1176,7.046,1177,4.564,1178,4.564,1179,4.564,1180,6.645,1181,4.564,1182,4.564,1183,4.564,1184,3.576,1185,4.564,1186,4.564]],["title/modules.html",[105,1.731]],["body/modules.html",[29,0.011,53,0.009,54,0.011,55,0.009,104,3.613,105,1.605,115,3.356,116,3.356,127,6.191,432,3.356,454,2.654,456,3.141,458,3.141,460,3.141,608,3.613,613,3.356,675,3.613,680,3.356,743,3.356,947,3.356,984,3.613,989,3.356,1187,7.902,1188,7.902,1189,8.239,1190,7.902,1191,7.902]],["title/overview.html",[1184,4.245]],["body/overview.html",[2,1.231,29,0.014,53,0.006,54,0.008,55,0.006,57,3.106,58,1.184,78,1.231,87,2.593,103,0.948,104,5.304,105,1.098,106,1.649,107,1.816,108,1.728,109,1.14,110,1.279,111,2.99,112,2.99,113,2.99,114,2.99,115,3.83,116,5.305,117,2.596,118,1.816,119,1.575,152,1.728,178,2.882,179,2.473,297,1.231,427,2.99,428,2.99,429,2.99,430,2.99,431,2.99,432,3.83,433,3.83,434,3.83,435,3.83,436,3.585,454,3.495,456,4.611,458,4.43,460,4.611,566,2.99,608,5.096,609,2.99,612,2.99,613,3.83,675,5.096,676,2.99,677,2.99,680,3.83,739,2.99,742,2.99,743,3.83,821,2.694,943,2.99,946,2.99,947,3.83,972,2.99,984,5.096,985,2.99,988,2.99,989,3.83,1184,2.694,1192,3.439,1193,3.439,1194,3.439,1195,4.915,1196,3.439]],["title/routes.html",[152,2.724]],["body/routes.html",[29,0.013,53,0.011,54,0.013,55,0.011,152,3.236]],["title/miscellaneous/variables.html",[1107,2.367,1197,4.14]],["body/miscellaneous/variables.html",[10,0.198,22,0.82,28,0.567,29,0.014,33,1.419,53,0.004,54,0.008,55,0.004,58,2.476,74,3.423,75,3.042,85,1.004,87,0.732,89,0.962,91,1.004,93,0.962,95,1.004,97,1.004,99,0.962,100,1.295,105,2.296,109,1.689,200,3.146,211,2.417,221,3.991,238,2.417,240,2.417,256,2.014,284,2.835,339,1.911,437,1.795,454,1.21,456,1.432,458,1.432,460,1.432,495,1.795,496,2.995,513,2.602,514,2.602,515,1.992,516,1.992,517,1.992,518,1.992,519,1.992,520,1.992,521,1.992,522,1.992,523,1.992,524,1.992,525,2.835,526,1.992,527,3.146,528,1.992,529,1.992,530,1.992,531,1.992,532,1.992,533,3.146,534,1.992,535,1.992,536,1.992,537,1.992,538,1.992,539,1.992,540,1.992,541,1.992,542,2.835,543,1.992,544,1.795,545,1.992,546,1.992,547,1.992,548,1.992,549,1.992,550,1.992,551,1.992,552,1.992,614,1.795,654,2.602,681,1.795,687,2.13,744,1.795,948,1.795,976,1.795,990,1.795,997,2.835,1059,1.992,1060,3.146,1061,3.146,1072,1.992,1073,4.429,1074,1.992,1075,1.992,1076,3.146,1107,1.647,1127,3.146,1169,3.146,1197,1.992,1198,3.618,1199,3.618,1200,3.618,1201,3.618,1202,3.618,1203,3.618,1204,3.618,1205,3.618,1206,5.095,1207,4.485,1208,4.485,1209,3.618,1210,2.291,1211,2.291,1212,2.291,1213,2.291,1214,2.291,1215,2.291,1216,2.291,1217,2.291,1218,2.291,1219,2.291,1220,2.291,1221,2.291,1222,6.401,1223,3.618,1224,3.618,1225,3.618,1226,3.618,1227,3.618,1228,5.095,1229,3.618,1230,3.618,1231,3.618,1232,3.618,1233,3.618,1234,3.618,1235,3.618,1236,3.618,1237,3.618,1238,3.618,1239,3.618,1240,2.291]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":412,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":717,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":603,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":566,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"overview.html":{}}}],["1.1.1",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":401,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":601,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":406,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":419,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["11.0.0",{"_index":1081,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":425,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["16",{"_index":1192,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1195,"title":{},"body":{"overview.html":{}}}],["180.0000000",{"_index":916,"title":{},"body":{"components/SearchComponent.html":{}}}],["2.0.0",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":931,"title":{},"body":{"components/SearchComponent.html":{}}}],["20",{"_index":402,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":737,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":970,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":602,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["2px",{"_index":936,"title":{},"body":{"components/SearchComponent.html":{}}}],["3",{"_index":1194,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":969,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":927,"title":{},"body":{"components/SearchComponent.html":{}}}],["34.855499",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35px",{"_index":925,"title":{},"body":{"components/SearchComponent.html":{}}}],["4.1.0",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":600,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400",{"_index":526,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":596,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["401",{"_index":532,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":537,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":541,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":714,"title":{},"body":{"components/HeaderComponent.html":{}}}],["500",{"_index":547,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5px",{"_index":926,"title":{},"body":{"components/SearchComponent.html":{}}}],["6.6.0",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["8.64e+7",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["9",{"_index":1193,"title":{},"body":{"overview.html":{}}}],["90.0000000",{"_index":913,"title":{},"body":{"components/SearchComponent.html":{}}}],["absolute",{"_index":605,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["abstract",{"_index":287,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["access",{"_index":539,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":723,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":718,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":829,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":1,"title":{"classes/AdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["administrativearea(args?.administrativearea",{"_index":271,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["administrativearea(args?.country",{"_index":273,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["age",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["align",{"_index":710,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["amount",{"_index":400,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":1141,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":444,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":893,"title":{},"body":{"components/SearchComponent.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"dependencies.html":{}}}],["animate.css",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":534,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":57,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"index.html":{}}}],["applicationservice",{"_index":178,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":104,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":115,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":167,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["apptheme",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["appthemechange",{"_index":182,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["appthemestate",{"_index":183,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["args",{"_index":31,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["args?.country",{"_index":770,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.dailyforecasts",{"_index":663,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.dailyforecasts?.map(item",{"_index":665,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.day",{"_index":809,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.geoposition",{"_index":772,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.night",{"_index":811,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.region",{"_index":774,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.timezone",{"_index":776,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args[key",{"_index":290,"title":{},"body":{"classes/BaseModel.html":{}}}],["array",{"_index":664,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["artifacts",{"_index":1164,"title":{},"body":{"index.html":{}}}],["assets/datasets/autocomplete.json",{"_index":516,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/conditions.json",{"_index":518,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/forecasts.json",{"_index":520,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/geoposition.json",{"_index":522,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/locations.json",{"_index":524,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["atob(value",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":535,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":423,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["autocomplete",{"_index":256,"title":{"classes/AutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocomplete(item",{"_index":1030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["autocompletemodule",{"_index":623,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":1155,"title":{},"body":{"index.html":{}}}],["available",{"_index":1191,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":394,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["bad",{"_index":528,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["basemodel",{"_index":9,"title":{"classes/BaseModel.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["basemodel:5",{"_index":42,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:6",{"_index":44,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:7",{"_index":45,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:8",{"_index":46,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["baseurl",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":410,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["black",{"_index":598,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{}}}],["bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":731,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bottom",{"_index":607,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["browse",{"_index":1189,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":719,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1163,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":625,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":1132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["cached",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedorigin",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresponse",{"_index":842,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["cachedresult",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresult.lastread",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cacheresult",{"_index":296,"title":{"interfaces/CacheResult.html":{}},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["cacheservice",{"_index":303,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["calc(#{$navbar",{"_index":716,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caption",{"_index":597,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":592,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":627,"title":{},"body":{"modules/FeatureModule.html":{}}}],["catcherror",{"_index":506,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["catcherror((error",{"_index":555,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["category",{"_index":751,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["center",{"_index":712,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["change",{"_index":1157,"title":{},"body":{"index.html":{}}}],["check",{"_index":1183,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":629,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":619,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["city",{"_index":1129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"overview.html":{}}}],["cli",{"_index":1142,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["closable",{"_index":557,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["cluster_appmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":427,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":428,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":430,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":429,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":431,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":609,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":610,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":611,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":612,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_forecastmodule",{"_index":676,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_forecastmodule_declarations",{"_index":678,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":679,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":677,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":739,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":740,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":741,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":742,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":943,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":944,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":945,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":946,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":972,"title":{},"body":{"modules/SidenavModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":973,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":974,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":975,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":985,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declarations",{"_index":987,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":986,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":988,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":798,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":1147,"title":{},"body":{"index.html":{}}}],["col",{"_index":942,"title":{},"body":{"components/SearchComponent.html":{}}}],["color",{"_index":593,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["colortheme",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colortheme.light",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":422,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["command",{"_index":919,"title":{},"body":{"components/SearchComponent.html":{},"index.html":{}}}],["common.scss",{"_index":393,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/exception",{"_index":446,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/request",{"_index":448,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":449,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":451,"title":{},"body":{"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":443,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["compass",{"_index":923,"title":{},"body":{"components/SearchComponent.html":{}}}],["component",{"_index":56,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["condition",{"_index":550,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":339,"title":{"classes/Conditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["conditions(result",{"_index":1034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["config",{"_index":966,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(this",{"_index":295,"title":{},"body":{"classes/BaseModel.html":{}}}],["const",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["constants/color",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/panel",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["constructor(args",{"_index":24,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["constructor(config",{"_index":964,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":1005,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(message",{"_index":499,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["constructor(private",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":868,"title":{},"body":{"components/SearchComponent.html":{}}}],["container",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":452,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":453,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":455,"title":{},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":745,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":746,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":457,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":977,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":978,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":459,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":85,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":116,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":469,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":432,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":408,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["context",{"_index":997,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ng",{"_index":933,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinates",{"_index":922,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinatesform",{"_index":857,"title":{},"body":{"components/SearchComponent.html":{}}}],["countries",{"_index":1125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":258,"title":{"classes/Country.html":{}},"body":{"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":13,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["coverage",{"_index":1048,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":998,"title":{},"body":{"injectables/WeatherService.html":{}}}],["created",{"_index":19,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["createform",{"_index":858,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentdate",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentoption",{"_index":859,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentroute",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{}}}],["dailyforecasts",{"_index":661,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":1122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":573,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["dataset",{"_index":1017,"title":{},"body":{"injectables/WeatherService.html":{}}}],["datasets",{"_index":758,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":40,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["date.now",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["day",{"_index":475,"title":{"classes/Day.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["debouncetime",{"_index":885,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":901,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":513,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(providers.weather.apikey",{"_index":570,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["delay",{"_index":839,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["dependencies",{"_index":106,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":558,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["dev",{"_index":1152,"title":{},"body":{"index.html":{}}}],["development",{"_index":1149,"title":{},"body":{"index.html":{}}}],["direction",{"_index":421,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1162,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1166,"title":{},"body":{"index.html":{}}}],["display",{"_index":403,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":1165,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":886,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":631,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":920,"title":{},"body":{"components/SearchComponent.html":{}}}],["e.item",{"_index":921,"title":{},"body":{"components/SearchComponent.html":{}}}],["e2e",{"_index":1177,"title":{},"body":{"index.html":{}}}],["ease",{"_index":736,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["effectivedate",{"_index":752,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":753,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["element",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":483,"title":{"classes/Elevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["elevation(args?.elevation",{"_index":691,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["encodebase64",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encountered",{"_index":548,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1176,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":754,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":755,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endpoint",{"_index":540,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["englishname",{"_index":14,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["englishtype",{"_index":15,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["entry.lastread",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["enumerations",{"_index":1108,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":803,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["epochtime",{"_index":341,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["error",{"_index":561,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["error.status",{"_index":563,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["errors",{"_index":525,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors[error.status",{"_index":559,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["event",{"_index":388,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.query",{"_index":904,"title":{},"body":{"components/SearchComponent.html":{}}}],["event.ts",{"_index":779,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":391,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{}}}],["exceptioninterceptor",{"_index":433,"title":{"interceptors/ExceptionInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["exceptioninterceptor.failcount",{"_index":505,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["execute",{"_index":1173,"title":{},"body":{"index.html":{}}}],["expire",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["f",{"_index":1131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":720,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["failcount",{"_index":497,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["failed",{"_index":536,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":242,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorites",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":581,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":580,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":615,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":616,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":87,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":608,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":618,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":613,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":454,"title":{"modules/FeatureModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fieldsetmodule",{"_index":633,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1158,"title":{},"body":{"index.html":{}}}],["first",{"_index":584,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":1168,"title":{},"body":{"index.html":{}}}],["flagicon",{"_index":259,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["flex",{"_index":404,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":790,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":721,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["forecast",{"_index":652,"title":{"classes/Forecast.html":{}},"body":{"classes/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast(result",{"_index":1036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forecast.component.html",{"_index":671,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":670,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":1146,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":1148,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":682,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":683,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":89,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodule",{"_index":675,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{},"overview.html":{}}}],["forecastroutes",{"_index":685,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":680,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["forecasts",{"_index":654,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":930,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol",{"_index":891,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol(undefined",{"_index":909,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":871,"title":{},"body":{"components/SearchComponent.html":{}}}],["forroot",{"_index":439,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":440,"title":{},"body":{"modules/ContainerModule.html":{}}}],["found",{"_index":543,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fsevents",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":552,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1179,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1160,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1140,"title":{},"body":{"index.html":{}}}],["geoposition",{"_index":687,"title":{"classes/GeoPosition.html":{}},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(`${providers.weather.conditions}/${locationkey",{"_index":1032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.forecasts}/${locationkey",{"_index":1035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.locations}/${key",{"_index":1043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.autocomplete",{"_index":1026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.geoposition",{"_index":1037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(req",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["getconditions",{"_index":999,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext",{"_index":1000,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrentposition",{"_index":235,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getforecast",{"_index":1001,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getgeoposition",{"_index":1002,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticon",{"_index":342,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["getlocation",{"_index":1003,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getting",{"_index":1137,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":185,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["given",{"_index":545,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gmtoffset",{"_index":799,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["go",{"_index":1182,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":396,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":1190,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":821,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":822,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":43,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"dependencies.html":{}}}],["guid.newguid",{"_index":293,"title":{},"body":{"classes/BaseModel.html":{}}}],["handle(req.clone",{"_index":567,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["hasprecipitation",{"_index":343,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["header",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["header'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":91,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":456,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":748,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":743,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headline",{"_index":655,"title":{"classes/Headline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["headline(args?.headline",{"_index":668,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":405,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1180,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/formatters",{"_index":285,"title":{},"body":{"classes/BaseModel.html":{},"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["helpers/menu",{"_index":890,"title":{},"body":{"components/SearchComponent.html":{}}}],["helpers/search",{"_index":888,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":415,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":1136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":825,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":1154,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":445,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":826,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httperrorresponse",{"_index":510,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["httpevent",{"_index":511,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":502,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":512,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":302,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["https://dataservice.accuweather.com",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comcurrentconditions/v1",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comforecasts/v1/daily/5day",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":25,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iautocomplete",{"_index":264,"title":{"interfaces/IAutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["icon",{"_index":477,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"components/SearchComponent.html":{}}}],["iconditions",{"_index":351,"title":{"interfaces/IConditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["iconphrase",{"_index":478,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":472,"title":{"interfaces/ICountry.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["iday",{"_index":479,"title":{"interfaces/IDay.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["identifier",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["ielevation",{"_index":487,"title":{"interfaces/IElevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":656,"title":{"interfaces/IForecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["igeoposition",{"_index":175,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iheadline",{"_index":657,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":756,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["image",{"_index":715,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imenuevent",{"_index":777,"title":{"interfaces/IMenuEvent.html":{}},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["imetric",{"_index":488,"title":{"interfaces/IMetric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["imperial",{"_index":485,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["implements",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":47,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./weather/weather.module').then(m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":41,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["injectable",{"_index":177,"title":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":179,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":941,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["input:focus",{"_index":932,"title":{},"body":{"components/SearchComponent.html":{}}}],["inputevent",{"_index":789,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":963,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":635,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept",{"_index":498,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":501,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":447,"title":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":496,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.ts:10",{"_index":852,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:11",{"_index":837,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:14",{"_index":838,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:25",{"_index":504,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:26",{"_index":500,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:29",{"_index":503,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:7",{"_index":851,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptors",{"_index":494,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":51,"title":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":297,"title":{},"body":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["invalid",{"_index":531,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["invalid:not(.ng",{"_index":934,"title":{},"body":{"components/SearchComponent.html":{}}}],["isalias",{"_index":759,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isdaylightsaving",{"_index":800,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["isdaytime",{"_index":344,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":786,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":768,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isloading",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":595,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/IMenuEvent.html":{},"injectables/WeatherService.html":{}}}],["item.key",{"_index":1023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["item.substring(1",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[0].touppercase",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemperature",{"_index":358,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["items",{"_index":711,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["itimezone",{"_index":762,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["iweather",{"_index":659,"title":{"interfaces/IWeather.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["join",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jquery",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":575,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["justify",{"_index":407,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["karma",{"_index":1175,"title":{},"body":{"index.html":{}}}],["key",{"_index":260,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["keyfiltermodule",{"_index":637,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":586,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["languages",{"_index":1126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastread",{"_index":299,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["lat",{"_index":908,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["latitude",{"_index":238,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["lat},${lng",{"_index":1038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["left",{"_index":606,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":16,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":1123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":399,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":395,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":345,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["literal",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":1144,"title":{},"body":{"index.html":{}}}],["lng",{"_index":914,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["loadchildren",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadingchange",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["loadingstate",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["local",{"_index":574,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["localizedname",{"_index":17,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["localizedtype",{"_index":18,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":346,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["location",{"_index":767,"title":{"classes/Location.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["location(result",{"_index":1040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationchange",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationkey",{"_index":1031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationresolver",{"_index":450,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":1127,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationstate",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationtype",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":240,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.weathermodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":420,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["map(item",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":411,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["marker",{"_index":918,"title":{},"body":{"components/SearchComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":424,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maxage",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["maximum",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ITemperature.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{}}}],["measure",{"_index":1116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":725,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menuitem",{"_index":781,"title":{},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["message",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["messageservice",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["metadata",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":486,"title":{"classes/Metric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["metric(args?.imperial",{"_index":491,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.maximum",{"_index":794,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.metric",{"_index":493,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.minimum",{"_index":796,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["min",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":792,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["miscellaneous",{"_index":1107,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilelink",{"_index":347,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["mode.enum",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":1119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":49,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":473,"title":{},"body":{"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["model.ts:11",{"_index":481,"title":{},"body":{"classes/Day.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{}}}],["model.ts:12",{"_index":480,"title":{},"body":{"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/TimeZone.html":{}}}],["model.ts:13",{"_index":34,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:14",{"_index":35,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:15",{"_index":36,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{}}}],["model.ts:16",{"_index":38,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Day.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:17",{"_index":39,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:18",{"_index":27,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:19",{"_index":267,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:20",{"_index":265,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:21",{"_index":354,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:22",{"_index":355,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:23",{"_index":356,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:24",{"_index":357,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:25",{"_index":352,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:26",{"_index":268,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:27",{"_index":266,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:28",{"_index":813,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:29",{"_index":814,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:30",{"_index":353,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:31",{"_index":815,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:32",{"_index":816,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:33",{"_index":817,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:34",{"_index":818,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:35",{"_index":819,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:36",{"_index":820,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:37",{"_index":812,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:5",{"_index":281,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:6",{"_index":282,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:7",{"_index":283,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:8",{"_index":280,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:9",{"_index":474,"title":{},"body":{"classes/Country.html":{},"classes/Elevation.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["models/administrativearea",{"_index":269,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/autocomplete",{"_index":889,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/base",{"_index":48,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["models/cache",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["models/conditions",{"_index":763,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/country",{"_index":764,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/day",{"_index":806,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/elevation",{"_index":689,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":765,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/geoposition",{"_index":176,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/headline",{"_index":658,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["models/location",{"_index":1015,"title":{},"body":{"injectables/WeatherService.html":{}}}],["models/metric",{"_index":489,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["models/temperature",{"_index":359,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/timezone",{"_index":766,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/weather",{"_index":660,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":103,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":105,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":442,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":1181,"title":{},"body":{"index.html":{}}}],["ms",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["multi",{"_index":466,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1153,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":382,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":234,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":247,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req",{"_index":844,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":553,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["next.handle(req.clone",{"_index":576,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["nextoffsetchange",{"_index":801,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["ng",{"_index":1150,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["ngoninit",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":804,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["none",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":832,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["number",{"_index":37,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["object",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args)?.foreach(key",{"_index":288,"title":{},"body":{"classes/BaseModel.html":{}}}],["observable",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["observable(subscriber",{"_index":245,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["of(cachedresponse",{"_index":845,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["of(null",{"_index":833,"title":{},"body":{"guards/LocationResolver.html":{}}}],["of(this.getcontext(key",{"_index":1042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":860,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":861,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onsubmit",{"_index":862,"title":{},"body":{"components/SearchComponent.html":{}}}],["opacity",{"_index":599,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["options",{"_index":929,"title":{},"body":{"components/SearchComponent.html":{}}}],["origin",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["original",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{},"miscellaneous/variables.html":{}}}],["original.split",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1).length",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].tolowercase",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["originalevent",{"_index":780,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":1134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":413,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1184,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1079,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":417,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["page",{"_index":1186,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":392,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":568,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["path",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["pathmatch",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permission",{"_index":538,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":846,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["pipe(map(result",{"_index":1028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(tap",{"_index":571,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["placeholder",{"_index":588,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["pointerevent",{"_index":782,"title":{},"body":{"interfaces/IMenuEvent.html":{}}}],["popper.js",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":604,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["predicate",{"_index":1020,"title":{},"body":{"injectables/WeatherService.html":{}}}],["prevented",{"_index":551,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":1145,"title":{},"body":{"index.html":{}}}],["previous",{"_index":591,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":398,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["primeng/autocomplete",{"_index":624,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":626,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":628,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":630,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":632,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":634,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":636,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":638,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":640,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":642,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":644,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":646,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":648,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":650,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":622,"title":{},"body":{"modules/FeatureModule.html":{}}}],["pristine",{"_index":935,"title":{},"body":{"components/SearchComponent.html":{}}}],["private",{"_index":184,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":1167,"title":{},"body":{"index.html":{}}}],["production",{"_index":1169,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1139,"title":{},"body":{"index.html":{}}}],["promise",{"_index":831,"title":{},"body":{"guards/LocationResolver.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":1178,"title":{},"body":{"index.html":{}}}],["provide",{"_index":464,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${this.country.id}/shiny/32.png",{"_index":278,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["providers.weather.autocomplete",{"_index":515,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.conditions",{"_index":517,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.forecasts",{"_index":519,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.geoposition",{"_index":521,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.icons}/${this.icon}.svg",{"_index":482,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["providers.weather.icons}/${this.weathericon}.svg",{"_index":362,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["providers.weather.locations",{"_index":523,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":12,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["put(req",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["q",{"_index":1027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["query",{"_index":788,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":639,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":733,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["rank",{"_index":261,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reactiveformsmodule",{"_index":949,"title":{},"body":{"modules/SearchModule.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"injectables/WeatherService.html":{}}}],["red",{"_index":938,"title":{},"body":{"components/SearchComponent.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1185,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":879,"title":{},"body":{"components/SearchComponent.html":{}}}],["region",{"_index":760,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reload",{"_index":1156,"title":{},"body":{"index.html":{}}}],["representative",{"_index":587,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":841,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.params.append('apikey",{"_index":569,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.url.includes(key",{"_index":578,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["req.url.includes(providers.weather.baseurl",{"_index":564,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["request",{"_index":527,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestcache",{"_index":320,"title":{"classes/RequestCache.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["requestinterceptor",{"_index":434,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":824,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":828,"title":{},"body":{"guards/LocationResolver.html":{}}}],["response",{"_index":300,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["responseinterceptor",{"_index":435,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":53,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.map(item",{"_index":1029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["result.tostring",{"_index":924,"title":{},"body":{"components/SearchComponent.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":572,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["retry",{"_index":507,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["retry(1",{"_index":554,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["return",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":713,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["ripplemodule",{"_index":641,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":544,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":470,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":620,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":686,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":749,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":954,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(weatherroutes",{"_index":995,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":152,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/WeatherModule.html":{}}}],["routing.module.ts",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["run",{"_index":1143,"title":{},"body":{"index.html":{}}}],["running",{"_index":1170,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":509,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["scaffolding",{"_index":1159,"title":{},"body":{"index.html":{}}}],["screen",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":854,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":856,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":855,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":950,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":951,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["search/search.module",{"_index":461,"title":{},"body":{"modules/ContainerModule.html":{}}}],["searchcomponent",{"_index":93,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":460,"title":{"modules/SearchModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["searchoptions",{"_index":863,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchpattern",{"_index":864,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchroutes",{"_index":953,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":947,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["searchsubject",{"_index":865,"title":{},"body":{"components/SearchComponent.html":{}}}],["second",{"_index":589,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":1151,"title":{},"body":{"index.html":{}}}],["server",{"_index":542,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services/application.service",{"_index":383,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SidenavComponent.html":{}}}],["services/cache.service",{"_index":462,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["services/weather.service",{"_index":463,"title":{},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{}}}],["set('conditions",{"_index":1045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('forecast",{"_index":1046,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set('location",{"_index":1047,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcontext",{"_index":1004,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setobservables",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setoptions",{"_index":866,"title":{},"body":{"components/SearchComponent.html":{}}}],["sets.enum.ts",{"_index":1112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":169,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":171,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":172,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":173,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":174,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":95,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":560,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["shadow",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":1135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":426,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":962,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":961,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":971,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":968,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavcomponent",{"_index":97,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":458,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/SidenavModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["size",{"_index":722,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["slide",{"_index":585,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["smaller",{"_index":928,"title":{},"body":{"components/SearchComponent.html":{}}}],["solid",{"_index":937,"title":{},"body":{"components/SearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":805,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["space",{"_index":409,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["spec\\.ts",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exception",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast.module.ts",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formatters.ts",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":1117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":1118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":468,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":363,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:31",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":437,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:44",{"_index":441,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":621,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":747,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":744,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":955,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":959,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":958,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":960,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":965,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":967,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":976,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":617,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":579,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":583,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":582,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":614,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":684,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":669,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":673,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":672,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":681,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":952,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":853,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:17",{"_index":883,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:18",{"_index":872,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:19",{"_index":878,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:20",{"_index":874,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:21",{"_index":882,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:22",{"_index":869,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":870,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:34",{"_index":875,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:36",{"_index":876,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:39",{"_index":877,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:40",{"_index":873,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:45",{"_index":884,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":948,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather",{"_index":993,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["src/app/weather/weather.component.ts",{"_index":979,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":990,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":1121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":1124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":1128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":1130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":1133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":168,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/formatters.ts",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/menu",{"_index":778,"title":{},"body":{"interfaces/IMenuEvent.html":{},"coverage.html":{}}}],["src/common/helpers/search",{"_index":787,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/exception",{"_index":495,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interceptors/request",{"_index":836,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":850,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":6,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":257,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"coverage.html":{}}}],["src/common/models/base",{"_index":279,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/common/models/cache",{"_index":298,"title":{},"body":{"interfaces/CacheResult.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":340,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":471,"title":{},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":476,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":484,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":653,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":688,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":750,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":757,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":783,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":791,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":797,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":802,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":823,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:10",{"_index":830,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:8",{"_index":827,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":180,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:12",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:13",{"_index":213,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":214,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:19",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:20",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:21",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:22",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:30",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:35",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:55",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/cache.service.ts",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["src/common/services/cache.service.ts:12",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:13",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:16",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:25",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:6",{"_index":834,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/cache.service.ts:7",{"_index":835,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/weather.service.ts",{"_index":996,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:15",{"_index":1006,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:18",{"_index":1014,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:23",{"_index":1010,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:27",{"_index":1007,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:31",{"_index":1009,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:35",{"_index":1011,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:39",{"_index":1012,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:43",{"_index":1013,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:50",{"_index":1008,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1138,"title":{"index.html":{}},"body":{}}],["state.enum",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":1120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":438,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["stored",{"_index":514,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stored[object.keys(stored).find(key",{"_index":577,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{},"components/SearchComponent.html":{}}}],["subscriber",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(updated",{"_index":255,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success",{"_index":236,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":239,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":241,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":867,"title":{},"body":{"components/SearchComponent.html":{}}}],["summary",{"_index":562,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["super(args",{"_index":52,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["supplied",{"_index":530,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1187,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1188,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":887,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":902,"title":{},"body":{"components/SearchComponent.html":{}}}],["syntax",{"_index":529,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["table",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":643,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tap",{"_index":508,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["tap((event",{"_index":847,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["teal",{"_index":940,"title":{},"body":{"components/SearchComponent.html":{}}}],["tel",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":348,"title":{"classes/Temperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["temperature(args?.temperature",{"_index":361,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":1172,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1171,"title":{},"body":{"index.html":{}}}],["text",{"_index":724,"title":{},"body":{"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["theme.enum",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["theme.enum.ts",{"_index":1110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["third",{"_index":590,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.administrativearea",{"_index":270,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.administrativearea.localizedname",{"_index":277,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.application.loadingchange$.next(false",{"_index":849,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.loadingchange$.next(true",{"_index":840,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.loadingstate",{"_index":385,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.sidenavstate",{"_index":386,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.apptheme",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.appthemechange$.subscribe",{"_index":253,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.appthemestate",{"_index":252,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.apptheme",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavmode",{"_index":229,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavstate",{"_index":231,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.cache.get(req",{"_index":843,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cache.put(req",{"_index":848,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cached.foreach(entry",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.get(cachedorigin",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.set(origin",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.constructor.name",{"_index":294,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.context",{"_index":1044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).slice().find((item",{"_index":1024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).some(predicate",{"_index":1022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).unshift(value",{"_index":1019,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.coordinatesform",{"_index":907,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.country",{"_index":272,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.country.localizedname",{"_index":276,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.createcontext",{"_index":1016,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.created",{"_index":291,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.createform",{"_index":894,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentoption",{"_index":896,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentroute",{"_index":389,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.datasets",{"_index":769,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.day",{"_index":808,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.elevation",{"_index":690,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["this.failcount",{"_index":565,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["this.forecasts",{"_index":662,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.geoposition",{"_index":771,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.getcontext(key",{"_index":1041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(null",{"_index":1018,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getuserlocation",{"_index":233,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.headline",{"_index":667,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.http",{"_index":1025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.id",{"_index":292,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.imperial",{"_index":490,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.isloading",{"_index":384,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.loadingchange$.subscribe",{"_index":246,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.loadingstate",{"_index":244,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.localizedname",{"_index":274,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.locationchange$.next",{"_index":237,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationchange$.next(default_location",{"_index":243,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationchange$.subscribe",{"_index":250,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationstate",{"_index":249,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.maxage",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.maximum",{"_index":793,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.message.add",{"_index":556,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["this.metric",{"_index":492,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.minimum",{"_index":795,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.night",{"_index":810,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.primengconfig.ripple",{"_index":651,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.region",{"_index":773,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.router.events.subscribe",{"_index":387,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchoptions",{"_index":917,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions[1",{"_index":897,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject",{"_index":898,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject$.next(event.query",{"_index":905,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject$.pipe",{"_index":900,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setcontext('conditions",{"_index":1033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext('location",{"_index":1039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setobservables",{"_index":232,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setoptions",{"_index":895,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.sidenavchanged.emit",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavmode",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":230,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sources",{"_index":807,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.suggestions",{"_index":899,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.temperature",{"_index":360,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.timezone",{"_index":775,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.type",{"_index":275,"title":{},"body":{"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/IAutoComplete.html":{}}}],["this.updatevalue(this.apptheme",{"_index":254,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.updatevalue(this.isloading",{"_index":248,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.updatevalue(this.userlocation",{"_index":251,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.weather.autocomplete(text.tolowercase",{"_index":903,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.weather.getconditions(value",{"_index":906,"title":{},"body":{"components/SearchComponent.html":{}}}],["this[tocamelcase(key",{"_index":289,"title":{},"body":{"classes/BaseModel.html":{}}}],["timezone",{"_index":761,"title":{"classes/TimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["toastmodule",{"_index":645,"title":{},"body":{"modules/FeatureModule.html":{}}}],["tocamelcase",{"_index":284,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglebuttonmodule",{"_index":647,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tooltipmodule",{"_index":649,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":397,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostring",{"_index":262,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["totitlecase",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":735,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":732,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":286,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorized",{"_index":533,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["unexpected",{"_index":549,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":784,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"index.html":{}}}],["unittype",{"_index":785,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{}}}],["unknown",{"_index":1021,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updated",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["updatevalue",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["updatevalue(original",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["uri",{"_index":546,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":301,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["use",{"_index":1161,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":465,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":170,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["usevalue",{"_index":467,"title":{},"body":{"modules/ContainerModule.html":{}}}],["valid:not(.ng",{"_index":939,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators",{"_index":892,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(180.0000000",{"_index":915,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(90.0000000",{"_index":911,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.min",{"_index":912,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.required",{"_index":910,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1197,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":263,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"index.html":{}}}],["via",{"_index":1174,"title":{},"body":{"index.html":{}}}],["void",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":100,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather(item",{"_index":666,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["weather.component.html",{"_index":981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":980,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather",{"_index":991,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.component",{"_index":992,"title":{},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["weathercomponent",{"_index":99,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":349,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["weathermodule",{"_index":984,"title":{"modules/WeatherModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherroutes",{"_index":994,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["weatherroutingmodule",{"_index":989,"title":{"modules/WeatherRoutingModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":436,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":350,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":594,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":418,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":674,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":416,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/WeatherService.html":{}}}],["y",{"_index":414,"title":{},"body":{"components/ContainerComponent.html":{}}}],["yes",{"_index":32,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":881,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":880,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdministrativeArea.html":{"url":"classes/AdministrativeArea.html","title":"class - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                englishType\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                localizedType\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAdministrativeArea)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAdministrativeArea\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorTheme              } from '@constants/color-theme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule          ,\n    BrowserAnimationsModule,\n    HttpClientModule       ,\n    AppRoutingModule       ,\n    ContainerModule.forRoot({\n      appTheme    : ColorTheme.Light,\n      sidenavMode : PanelMode .Push ,\n      sidenavState: PanelState.Hide ,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'weather', loadChildren: () => \"import('./weather/weather.module').then(m => m.WeatherModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'weather' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appTheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorTheme   } from '@constants/color-theme.enum'\nimport { PanelMode    } from '@constants/panel-mode.enum'\nimport { PanelState   } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public appTheme     ?: ColorTheme   ;\n  public sidenavMode  ?: PanelMode    ;\n  public sidenavState ?: PanelState   ;\n  public userLocation ?: IGeoPosition ;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appTheme\n                            \n                            \n                                    Public\n                                    Readonly\n                                appThemeChange$\n                            \n                            \n                                    Public\n                                appThemeState$\n                            \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                    Readonly\n                                loadingChange$\n                            \n                            \n                                    Public\n                                loadingState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                locationChange$\n                            \n                            \n                                    Public\n                                locationState$\n                            \n                            \n                                    Private\n                                setObservables\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(original: T, updated: T, subscriber: Subscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updated\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscriber\n                                    \n                                            Subscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            appThemeChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appThemeState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            loadingChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locationState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable      , Subject, Subscriber } from 'rxjs'\nimport { Injectable                            } from '@angular/core'\nimport { ColorTheme                            } from '@constants/color-theme.enum'\nimport { PanelMode                             } from '@constants/panel-mode.enum'\nimport { PanelState                            } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION                      } from '@env/environment'\nimport { AppSettings                           } from '@helpers/app-settings'\nimport { IGeoPosition                          } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly appThemeChange$: Subject = new Subject();\n  public readonly loadingChange$ : Subject = new Subject();\n  public readonly locationChange$: Subject = new Subject();\n  public appThemeState$: Observable;\n  public loadingState$ : Observable;\n  public locationState$: Observable;\n  public appTheme    : ColorTheme    ;\n  public isLoading   : boolean = true;\n  public sidenavMode : PanelMode     ;\n  public sidenavState: PanelState    ;\n  public userLocation: IGeoPosition  ;\n  constructor(private args?: AppSettings) {\n    this.appTheme     = this.args?.appTheme    ;\n    this.sidenavMode  = this.args?.sidenavMode ;\n    this.sidenavState = this.args?.sidenavState;\n    this.setObservables ();\n    this.getUserLocation();\n  }\n  private getUserLocation = () => navigator.geolocation\n    .getCurrentPosition(\n      (success) => this.locationChange$.next({ Latitude: success.coords.latitude, Longitude: success.coords.longitude }),\n      (failure) => this.locationChange$.next(DEFAULT_LOCATION));\n\n  private setObservables = () => {\n    this.loadingState$ = new Observable(subscriber => {\n      this.loadingChange$.subscribe({\n        next: value => this.updateValue(this.isLoading, value, subscriber)\n      })\n    });\n\n    this.locationState$ = new Observable(subscriber => {\n      this.locationChange$.subscribe({\n        next: value => this.updateValue(this.userLocation, value, subscriber)\n      })\n    });\n\n    this.appThemeState$ = new Observable(subscriber => {\n      this.appThemeChange$.subscribe({\n        next: value => this.updateValue(this.appTheme, value, subscriber)\n      })\n    });\n  }\n\n  private updateValue(original: T, updated: T, subscriber: Subscriber) {\n    if (original != updated) {\n      original = updated;\n      subscriber.next(updated);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoComplete.html":{"url":"classes/AutoComplete.html","title":"class - AutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                flagIcon\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                version\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAutoComplete)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAutoComplete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel                               } from '@models/base-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base-model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { toCamelCase } from '@helpers/formatters';\nimport { Guid } from 'guid-ts'\n\nexport abstract class BaseModel {\n  public created: Date;\n  public id: Guid | string;\n  public name: string;\n  public type: string;\n  constructor(args?: any) {\n    Object.keys(args)?.forEach(key => this[toCamelCase(key)] = this[toCamelCase(key)] ?? args[key]);\n    this.created = new Date();\n    this.id = this.id ?? Guid.newGuid();\n    this.type = this.type ?? this.constructor.name;\n    console.log(this);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheResult.html":{"url":"interfaces/CacheResult.html","title":"interface - CacheResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/cache-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        lastRead\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\n\nexport interface CacheResult {\n  lastRead?: number           ;\n  response?: HttpResponse;\n  url     ?: string           ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cached\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxAge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cached\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8.64e+7\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conditions.html":{"url":"classes/Conditions.html","title":"class - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading$\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router, message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MessageService             } from 'primeng/api'\nimport { Observable                 } from 'rxjs'\nimport { Component         , OnInit } from '@angular/core'\nimport { NavigationEnd     , Router } from '@angular/router'\nimport { PanelState                 } from '@constants/panel-state.enum'\nimport { ApplicationService         } from '@services/application.service'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string             ;\n  public isLoading$  : Observable;\n  public sidenavState: PanelState         ;\n  constructor(private application: ApplicationService, private router: Router, private message: MessageService) {\n    this.isLoading$   = this.application.loadingState$;\n    this.sidenavState = this.application.sidenavState ;\n    this.router.events.subscribe({\n      next: event => this.currentRoute = !(event instanceof NavigationEnd)\n        ? this.currentRoute\n        : `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n  }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nFavoritesComponent->ContainerModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nContainerModule->FavoritesComponent \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ExceptionInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MessageService                              } from 'primeng/api'\nimport { CommonModule                                } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule    } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule            } from '@angular/core'\nimport { ExceptionInterceptor                        } from '@common/interceptors/exception-interceptor'\nimport { RequestInterceptor                          } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                         } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                            } from '@common/resolvers/location.resolver'\nimport { ContainerRoutingModule                      } from '@container/container-routing.module'\nimport { ContainerComponent                          } from '@container/container.component'\nimport { FeatureModule                               } from '@container/feature.module'\nimport { HeaderModule                                } from '@container/header/header.module'\nimport { SidenavModule                               } from '@container/sidenav/sidenav.module'\nimport { AppSettings                                 } from '@helpers/app-settings'\nimport { SearchModule                                } from '@search/search.module'\nimport { ApplicationService                          } from '@services/application.service'\nimport { RequestCache          , CacheService } from '@services/cache.service'\nimport { WeatherService                              } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule, SearchModule, FeatureModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: RequestCache, useClass: CacheService },\n    { provide: HTTP_INTERCEPTORS, useClass: ExceptionInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor  , multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor , multi: true },\n    MessageService,\n    ApplicationService,\n    LocationResolver,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Day.html":{"url":"classes/Day.html","title":"class - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elevation.html":{"url":"classes/Elevation.html","title":"class - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IElevation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IElevation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ExceptionInterceptor.html":{"url":"interceptors/ExceptionInterceptor.html","title":"interceptor - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                failCount\n                            \n                            \n                                    Private\n                                failCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/exception-interceptor.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/exception-interceptor.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            failCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/common/interceptors/exception-interceptor.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            failCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : ExceptionInterceptor.failCount\n                        \n                    \n                        \n                            \n                                    Defined in src/common/interceptors/exception-interceptor.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { MessageService } from 'primeng/api'\nimport { Observable } from 'rxjs'\nimport { catchError, retry, tap } from 'rxjs/operators'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { decodeBase64 } from '@helpers/formatters'\n\nexport const stored = {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\nexport const errors = {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n@Injectable()\nexport class ExceptionInterceptor implements HttpInterceptor {\n  static failCount: number = 0;\n  private failCount: number = ExceptionInterceptor.failCount;\n  constructor(private message: MessageService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      retry(1),\n      catchError((error: HttpErrorResponse) => {\n        this.message.add({ closable: true, detail: errors[error.status], severity: 'error', summary: `${error.status} Error` });\n        if (req.url.includes(providers.weather.baseUrl) && error.status == 401) {\n          this.failCount++;\n          if (this.failCount == 1) {\n            return next\n              .handle(req.clone({\n                params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n              }))\n              .pipe(tap(() => ExceptionInterceptor.failCount = 0));\n          }\n        }\n        this.message.add({ closable: true, detail: 'Retrieving static data from local JSON', severity: 'info', summary: 'Static Response' });\n        return next.handle(req.clone({ url: stored[Object.keys(stored).find(key => req.url.includes(key))] }));\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_imports\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nFavoritesComponent->FavoritesModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nFavoritesModule->FavoritesComponent \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Forecast.html":{"url":"classes/Forecast.html","title":"class - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Headline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_ForecastModule_declarations\n\n\n\ncluster_ForecastModule_exports\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nFavoritesComponent->ForecastModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nForecastModule->FavoritesComponent \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForecastRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoPosition.html":{"url":"classes/GeoPosition.html","title":"class - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elevation\n                            \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IGeoPosition)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IGeoPosition\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elevation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Elevation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavChanged: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav = () => this.sidenavChanged.emit();\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_imports\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nFavoritesComponent->HeaderModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nHeaderModule->FavoritesComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Headline.html":{"url":"classes/Headline.html","title":"class - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                effectiveDate\n                            \n                            \n                                    Public\n                                effectiveEpochDate\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                endEpochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                severity\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IHeadline)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IHeadline\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        CountryId\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        EnglishType\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        Level\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        LocalizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CountryId\n                                    \n                                \n                                \n                                    \n                                        CountryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishType\n                                    \n                                \n                                \n                                    \n                                        EnglishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedType\n                                    \n                                \n                                \n                                    \n                                        LocalizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoComplete.html":{"url":"interfaces/IAutoComplete.html","title":"interface - IAutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel                               } from '@models/base-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EpochTime\n                                \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        IsDayTime\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        LocalObservationDateTime\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                                \n                                            Optional\n                                        WeatherIcon\n                                \n                                \n                                            Optional\n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        Icon\n                                \n                                \n                                            Optional\n                                        IconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconPhrase\n                                    \n                                \n                                \n                                    \n                                        IconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DailyForecasts\n                                \n                                \n                                            Optional\n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Elevation\n                                \n                                \n                                            Optional\n                                        Latitude\n                                \n                                \n                                            Optional\n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Elevation\n                                    \n                                \n                                \n                                    \n                                        Elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Category\n                                \n                                \n                                            Optional\n                                        EffectiveDate\n                                \n                                \n                                            Optional\n                                        EffectiveEpochDate\n                                \n                                \n                                            Optional\n                                        EndDate\n                                \n                                \n                                            Optional\n                                        EndEpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Severity\n                                \n                                \n                                            Optional\n                                        Text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndDate\n                                    \n                                \n                                \n                                    \n                                        EndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndEpochDate\n                                    \n                                \n                                \n                                    \n                                        EndEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Severity\n                                    \n                                \n                                \n                                    \n                                        Severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        AdministrativeArea\n                                \n                                \n                                            Optional\n                                        Country\n                                \n                                \n                                            Optional\n                                        DataSets\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        GeoPosition\n                                \n                                \n                                            Optional\n                                        IsAlias\n                                \n                                \n                                            Optional\n                                        Key\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        Rank\n                                \n                                \n                                            Optional\n                                        Region\n                                \n                                \n                                            Optional\n                                        TimeZone\n                                \n                                \n                                            Optional\n                                        Type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DataSets\n                                    \n                                \n                                \n                                    \n                                        DataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GeoPosition\n                                    \n                                \n                                \n                                    \n                                        GeoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsAlias\n                                    \n                                \n                                \n                                    \n                                        IsAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                    \n                                \n                                \n                                    \n                                        Region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TimeZone\n                                    \n                                \n                                \n                                    \n                                        TimeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuEvent.html":{"url":"interfaces/IMenuEvent.html","title":"interface - IMenuEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/menu-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                                \n                                        originalEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     PointerEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PointerEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MenuItem } from 'primeng/api';\n\nexport interface IMenuEvent {\n  item         : MenuItem    ;\n  originalEvent: PointerEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Unit\n                                \n                                \n                                            Optional\n                                        UnitType\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Unit\n                                    \n                                \n                                \n                                    \n                                        Unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UnitType\n                                    \n                                \n                                \n                                    \n                                        UnitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Maximum\n                                \n                                \n                                            Optional\n                                        Minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Maximum\n                                    \n                                \n                                \n                                    \n                                        Maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Minimum\n                                    \n                                \n                                \n                                    \n                                        Minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Code\n                                \n                                \n                                            Optional\n                                        GmtOffset\n                                \n                                \n                                            Optional\n                                        IsDaylightSaving\n                                \n                                \n                                            Optional\n                                        Name\n                                \n                                \n                                            Optional\n                                        NextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Code\n                                    \n                                \n                                \n                                    \n                                        Code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GmtOffset\n                                    \n                                \n                                \n                                    \n                                        GmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        IsDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        NextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Date\n                                \n                                \n                                            Optional\n                                        Day\n                                \n                                \n                                            Optional\n                                        EpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Night\n                                \n                                \n                                            Optional\n                                        Sources\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Sources\n                                    \n                                \n                                \n                                    \n                                        Sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Forecast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable, of } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    return of(null);\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                unitType\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IMetric)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IMetric\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { delay, tap } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { decodeBase64 } from '@helpers/formatters'\nimport { ApplicationService } from '@services/application.service'\nimport { RequestCache } from '@services/cache.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService, private cache: RequestCache) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.application.loadingChange$.next(true);\n    req = req.url.includes(providers.weather.baseUrl)\n      ? req.clone({\n        params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n      }) : req;\n    const cachedResponse = this.cache.get(req);\n    return (!cachedResponse ? next.handle(req) : of(cachedResponse))\n      .pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            this.cache.put(req, event);\n            this.application.loadingChange$.next(false);\n          }\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coordinatesForm\n                            \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                currentOption\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                searchOptions\n                            \n                            \n                                    Public\n                                searchPattern\n                            \n                            \n                                    Private\n                                    Optional\n                                searchSubject$\n                            \n                            \n                                    Private\n                                setOptions\n                            \n                            \n                                    Public\n                                    Optional\n                                suggestions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            coordinatesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[a-zA-Z ]/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            searchSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            suggestions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable, Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component, OnInit } from '@angular/core'\nimport { ISearchEvent } from '@helpers/search-event'\nimport { AutoComplete } from '@models/autoComplete-model'\nimport { WeatherService } from '@services/weather.service'\nimport { MenuItem } from 'primeng/api'\nimport { IMenuEvent } from '@helpers/menu-event'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  private searchSubject$?: Subject;\n  public coordinatesForm: FormGroup;\n  public searchOptions: MenuItem[];\n  public currentOption: MenuItem;\n  public searchPattern: RegExp = /[a-zA-Z ]/;\n  public suggestions$?: Observable;\n  constructor(private weather: WeatherService) { }\n  ngOnInit() {\n    this.createForm();\n    this.setOptions();\n    this.currentOption = this.searchOptions[1];\n    this.searchSubject$ = new Subject();\n    this.suggestions$ = this.searchSubject$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text.toLowerCase())));\n  }\n  public onSearch = (event: ISearchEvent) =>\n    event.query ? this.searchSubject$.next(event.query) : {};\n  public onSelect = (value: AutoComplete) => {\n    // this.weather.getConditions(value);\n  };\n  public onSubmit = ($event) => { }\n  public createForm = () => this.coordinatesForm =\n    new FormGroup({\n      lat: new FormControl(undefined, [Validators.required, Validators.max(90.0000000), Validators.min(-90.0000000)]),\n      lng: new FormControl(undefined, [Validators.required, Validators.max(180.0000000), Validators.min(-180.0000000)]),\n    });\n  private setOptions = () => {\n    this.searchOptions = [\n      { label: 'Location', icon: 'fa fa-map-marker', command: (e: IMenuEvent) => this.currentOption = e.item },\n      {\n        label: 'Coordinates',\n        icon: 'fa fa-compass',\n        command: (e: IMenuEvent) => {\n          this.currentOption = e.item;\n          this.createForm();\n        }\n      },\n    ];\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Search\n    \n    \n      \n    \n  \n  \n    \n      Location\n      \n        \n          \n            \n            {{result.toString()}}\n          \n        \n      \n    \n    \n      \n        Latitude\n        \n        \n        \n      \n      \n        Longitude\n        \n        \n        \n      \n      \n        \n          \n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                @import \"common.scss\";\n\n.app-search {\n  border-radius: 25px;\n  padding: 35px;\n  margin-bottom: 15px;\n  @extend .shadow;\n  .search-header {\n    padding: 5px;\n    align-items: center;\n    color: $font-color;\n    display: flex;\n    font-size: 32px;\n    justify-content: space-between;\n    .header-title {\n      display: flex;\n      align-items: center;\n      padding-right: 10px;\n      .fa {\n        font-size: smaller;\n        margin-right: 10px;\n      }\n    }\n    .search-options {\n      padding-left: 10px;\n      flex: auto;\n    }\n  }\n  .search-form {\n    padding: 10px 0px;\n    .form-autocomplete {\n      display: flex;\n      flex-direction: column;\n      padding: 0px 2.5px;\n    }\n    .form-coordinates {\n      margin-bottom: 0px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n}\nlabel {\n  margin: 0px;\n  color: $font-color;\n}\ninput:focus {\n  @extend .shadow;\n}\n.form-control.ng-invalid:not(.ng-pristine) {\n  border: 2px solid red;\n  color: red;\n}\n.form-control.ng-valid:not(.ng-pristine) {\n  border: 2px solid $teal;\n  color: $teal;\n}\n.input-col {\n  flex: auto;\n  padding: 0px 2.5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search                                Location                                                {{result.toString()}}                                              Latitude                                            Longitude                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nFavoritesComponent->SearchModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nSearchModule->FavoritesComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FeatureModule, SearchRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component         , Input, OnInit } from '@angular/core'\nimport { PanelState                        } from '@constants/panel-state.enum'\nimport { ApplicationService                } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_imports\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nFavoritesComponent->SidenavModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nSidenavModule->FavoritesComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Temperature.html":{"url":"classes/Temperature.html","title":"class - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                maximum\n                            \n                            \n                                    Public\n                                minimum\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITemperature)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITemperature\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maximum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minimum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeZone.html":{"url":"classes/TimeZone.html","title":"class - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                gmtOffset\n                            \n                            \n                                    Public\n                                isDaylightSaving\n                            \n                            \n                                    Public\n                                nextOffsetChange\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITimeZone)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITimeZone\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gmtOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDaylightSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nextOffsetChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nFavoritesComponent->WeatherModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nWeatherModule->FavoritesComponent \n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WeatherRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FavoritesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { WeatherRoutingModule } from '@weather/weather-routing.module'\nimport { WeatherComponent     } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, WeatherRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherRoutingModule.html":{"url":"modules/WeatherRoutingModule.html","title":"module - WeatherRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                 } from '@angular/core'\nimport { RouterModule    , Routes } from '@angular/router'\nimport { WeatherComponent         } from '@weather/weather.component'\n\nexport const WeatherRoutes: Routes = [\n  { path: '', component: WeatherComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(WeatherRoutes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                createContext\n                            \n                            \n                                    Public\n                                getConditions\n                            \n                            \n                                    Private\n                                getContext\n                            \n                            \n                                    Public\n                                getForecast\n                            \n                            \n                                    Public\n                                getGeoPosition\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Private\n                                setContext\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGeoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable  , of            } from 'rxjs'\nimport { map                         } from 'rxjs/operators'\nimport { HttpClient                  } from '@angular/common/http'\nimport { Injectable                  } from '@angular/core'\nimport { providers                   } from '@env/environment'\nimport { AppSettings                 } from '@helpers/app-settings'\nimport { AutoComplete, IAutoComplete } from '@models/autoComplete-model'\nimport { BaseModel                   } from '@models/base-model'\nimport { Conditions  , IConditions   } from '@models/conditions-model'\nimport { Forecast    , IForecast     } from '@models/forecast-model'\nimport { ILocation   , Location      } from '@models/location-model'\n\n@Injectable()\nexport class WeatherService {\n  private readonly context: Map = new Map();\n  constructor(private http: HttpClient, private args?: AppSettings) { this.createContext(); }\n\n  private setContext = (dataSet: string, value: any): any | null => {\n    !this.getContext(null, dataSet, x => x == value)\n      ? this.context.get(dataSet).unshift(value) : {};\n    return value;\n  }\n  private getContext = (key?: string, dataSet: string = 'Location', predicate?: (value: any) => unknown): any | null =>\n    this.context.get(dataSet).some(predicate ?? ((item: Location) => item.key == key))\n      ? this.context.get(dataSet).slice().find((item: Location) => item.key == key) : null;\n\n  public autoComplete = (search: string): Observable => this.http\n    .get(providers.weather.autocomplete, { params: { q: search } })\n    .pipe(map(result => result.map(item => new AutoComplete(item))));\n\n  public getConditions = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.conditions}/${locationKey}`)\n    .pipe(map(result => this.setContext('Conditions', new Conditions(result))));\n\n  public getForecast = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.forecasts}/${locationKey}`)\n    .pipe(map(result => new Forecast(result)));\n\n  public getGeoPosition = (lat: number, lng: number): Observable => this.http\n    .get(providers.weather.geoposition, { params: { q: `${lat},${lng}` } })\n    .pipe(map(result => this.setContext('Location', new Location(result))));\n\n  public getLocation = (key: string): Observable =>\n    this.getContext(key)\n      ? of(this.getContext(key))\n      : this.http\n        .get(`${providers.weather.locations}/${key}`)\n        .pipe(map(result => this.setContext('Location', new Location(result))));\n\n  private createContext = () => this.context\n    .set('Conditions', new Array())\n    .set('Forecast'  , new Array())\n    .set('Location'  , new Array());\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            encodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            toCamelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            toTitleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/menu-event.ts\n            \n            interface\n            IMenuEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            interceptor\n            ExceptionInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            stored\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            class\n            AdministrativeArea\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            class\n            AutoComplete\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            IAutoComplete\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/cache-model.ts\n            \n            interface\n            CacheResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            Conditions\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            Day\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            class\n            Elevation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            Forecast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            class\n            GeoPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            class\n            Headline\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            class\n            Temperature\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            class\n            TimeZone\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            animate.css : ^4.1.1\n        \n            bootstrap : ^4.6.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorTheme   (src/.../color-theme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorTheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SidenavModule\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nFavoritesComponent \n\nFavoritesComponent \n\nFavoritesComponent  -->\n\nContainerModule->FavoritesComponent \n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nContainerModule -->\n\nFavoritesComponent->ContainerModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nFavoritesComponent->FavoritesModule\n\n\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nFavoritesComponent->ForecastModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nFavoritesComponent->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nFavoritesComponent->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nFavoritesComponent->SidenavModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nFavoritesComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nFavoritesComponent  -->\n\nFavoritesModule->FavoritesComponent \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\nFavoritesComponent  -->\n\nForecastModule->FavoritesComponent \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\nFavoritesComponent  -->\n\nHeaderModule->FavoritesComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\nFavoritesComponent  -->\n\nSearchModule->FavoritesComponent \n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nFavoritesComponent  -->\n\nSidenavModule->FavoritesComponent \n\n\n\nFavoritesComponent  -->\n\nWeatherModule->FavoritesComponent \n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            decodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            encodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errors   (src/.../exception-interceptor.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            stored   (src/.../exception-interceptor.ts)\n                        \n                        \n                            toCamelCase   (src/.../formatters.ts)\n                        \n                        \n                            toTitleCase   (src/.../formatters.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule, SearchModule, FeatureModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/common/helpers/formatters.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => atob(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => btoa(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toCamelCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string => original[0].toLowerCase() +\n  (original.substring(1).length \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTitleCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original.split(' ')\n    .map(item => item[0].toUpperCase() + item.substring(1))\n    .join(' ')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                              ,\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl     : 'https://dataservice.accuweather.com'                                       ,\n    conditions  : 'https://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts   : 'https://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons'                           ,\n    locations   : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather     : {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete',\n    baseUrl     : 'https://dataservice.accuweather.com',\n    conditions  : 'https://dataservice.accuweather.comcurrentconditions/v1',\n    forecasts   : 'https://dataservice.accuweather.comforecasts/v1/daily/5day',\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons',\n    locations   : 'https://dataservice.accuweather.com/locations/v1',\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/interceptors/exception-interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stored\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
