var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.015,1,1.654]],["body/components/AppComponent.html",[0,1.615,1,2.82,2,1.689,3,0.15,4,0.131,5,2.003,6,2.003,7,2.003,8,2.003,9,0.131,10,3.404,11,2.003,12,3.817,13,3.616,14,5.335,15,2.711,16,6.049,17,2.711,18,5.335,19,0.43,20,1.008,21,6.049,22,1.615,23,1.253,24,5.335,25,0.534,26,0.016,27,1.008,28,1.361,29,1.248,30,4.609,31,0.249,32,0.744,33,0.15,34,0.15,35,1.361,36,2.711,37,2.711,38,2.003,39,3.294,40,2.003,41,1.308,42,2.003,43,1.634,44,2.003,45,1.559,46,2.003,47,1.195,48,2.003,49,1.634,50,2.003,51,1.559,52,2.003,53,1.634,54,2.003,55,1.634,56,2.003,57,1.634,58,1.802,59,2.003,60,2.003,61,0.008,62,0.011,63,0.008]],["title/modules/AppModule.html",[64,1.015,65,2.943]],["body/modules/AppModule.html",[1,3.268,3,0.143,4,0.125,9,0.125,26,0.017,31,0.466,32,0.711,33,0.143,34,0.143,35,1.3,61,0.008,62,0.011,63,0.008,64,1.004,65,5.767,66,1.141,67,1.812,68,3.176,69,3.001,70,2.249,71,1.421,72,3.762,73,3.762,74,3.762,75,3.762,76,4.871,77,4.714,78,2.78,79,2.023,80,1.72,81,3.762,82,1.953,83,4.466,84,2.149,85,1.953,86,5.169,87,4.466,88,2.913,89,5.169,90,3.762,91,3.762,92,2.292,93,3.762,94,3.656,95,2.913,96,2.913,97,2.661,98,3.38,99,2.913,100,2.292,101,2.46,102,3.762,103,3.762,104,3.25,105,2.913,106,3.25,107,2.46,108,2.913]],["title/modules/AppRoutingModule.html",[64,1.015,76,2.689]],["body/modules/AppRoutingModule.html",[3,0.181,4,0.158,9,0.158,26,0.017,31,0.381,32,0.899,33,0.229,34,0.181,61,0.01,62,0.013,63,0.01,66,1.444,71,1.798,76,4.271,82,1.798,85,2.281,109,4.759,110,2.9,111,3.679,112,3.069,113,2.419,114,1.719,115,4.759,116,4.691,117,4.675,118,6.038,119,4.759,120,4.759,121,3.685,122,4.759,123,4.759,124,4.759,125,4.759,126,4.759,127,4.759]],["title/classes/AppSettings.html",[34,0.144,128,2.316]],["body/classes/AppSettings.html",[3,0.154,4,0.135,9,0.135,19,0.443,20,1.028,22,1.639,23,1.608,25,0.889,26,0.017,31,0.414,33,0.154,34,0.154,61,0.008,62,0.011,63,0.008,94,4.982,95,3.144,96,3.144,97,4.344,98,3.56,99,3.144,100,3.742,101,2.655,105,4.755,107,4.016,128,3.317,129,1.956,130,6.086,131,3.508,132,2.117,133,1.32,134,4.755,135,5.444,136,4.061,137,4.061,138,4.061,139,3.508,140,2.872,141,1.18]],["title/injectables/ApplicationService.html",[142,1.831,143,2.171]],["body/injectables/ApplicationService.html",[3,0.106,4,0.093,9,0.093,19,0.306,20,0.79,22,0.748,23,1.595,25,0.899,26,0.017,28,1.73,29,1.586,31,0.429,32,0.529,33,0.106,34,0.106,41,1.026,61,0.006,62,0.009,63,0.006,84,1.601,94,3.542,95,2.169,96,2.169,97,3.542,98,2.736,99,2.169,100,3.051,101,1.832,104,2.421,105,3.877,106,2.421,107,3.274,128,3.384,132,2.075,133,0.755,134,4.827,139,3.561,140,1.982,141,0.814,142,2.015,143,2.39,144,1.982,145,2.421,146,5.008,147,3.937,148,5.008,149,5.386,150,4.326,151,1.655,152,4.184,153,2.421,154,4.3,155,2.411,156,4.184,157,1.446,158,3.24,159,1.281,160,4.184,161,2.802,162,4.184,163,1.108,164,1.349,165,2.802,166,2.802,167,5.256,168,2.417,169,2.802,170,2.802,171,2.802,172,2.802,173,1.507,174,2.169,175,1.982,176,2.169,177,1.982,178,1.601,179,2.802,180,2.802,181,2.421,182,2.802,183,2.802,184,2.802,185,2.802,186,2.802,187,2.802,188,2.169,189,2.802,190,2.169,191,2.802,192,2.802,193,2.802,194,2.802,195,2.802]],["title/classes/BaseModel.html",[34,0.144,196,1.373]],["body/classes/BaseModel.html",[3,0.145,4,0.127,9,0.127,19,0.416,20,0.986,22,1.019,23,1.574,25,0.806,26,0.017,27,1.636,28,1.803,29,1.653,31,0.329,33,0.145,34,0.145,41,0.936,61,0.008,62,0.011,63,0.008,70,1.66,129,1.838,132,2.096,133,0.689,155,1.838,157,1.318,159,1.745,168,1.66,175,2.699,196,1.885,197,5.975,198,1.063,199,3.398,200,3.398,201,3.398,202,3.398,203,2.164,204,5.22,205,2.589,206,3.816,207,3.816,208,3.816,209,3.44,210,3.297,211,3.816,212,5.949,213,3.816,214,3.816,215,3.816,216,3.816,217,4.042,218,3.297,219,3.816,220,1.442,221,3.816]],["title/classes/ConditionsModel.html",[34,0.144,222,2.316]],["body/classes/ConditionsModel.html",[3,0.103,4,0.09,9,0.09,19,0.296,20,0.772,22,0.725,23,1.693,25,0.956,26,0.017,27,1.755,28,1.412,29,1.294,31,0.258,33,0.155,34,0.103,41,0.666,61,0.006,62,0.009,63,0.006,129,1.308,132,2.173,133,0.49,141,1.188,155,1.308,157,0.938,159,1.242,196,2.309,198,0.756,199,2.335,200,2.335,201,2.335,202,2.335,203,1.695,205,2.379,209,1.461,220,2.328,222,2.491,223,5.393,224,1.779,225,4.724,226,3.868,227,4.724,228,3.575,229,4.724,230,3.575,231,3.868,232,4.724,233,4.724,234,3.868,235,3.531,236,2.346,237,3.314,238,2.346,239,2.346,240,2.346,241,2.346,242,2.346,243,3.124,244,2.346,245,2.346,246,3.332,247,1.655,248,1.655,249,1.655,250,1.655,251,1.126,252,1.921,253,0.349,254,1.182]],["title/components/ContainerComponent.html",[0,1.015,43,1.576]],["body/components/ContainerComponent.html",[0,1.212,1,1.039,2,1.173,3,0.091,4,0.079,5,1.214,6,1.214,7,1.214,8,1.214,9,0.079,11,1.214,12,3.431,13,3.301,15,1.883,17,1.883,19,0.261,20,0.7,22,0.638,23,1.376,25,0.693,26,0.017,27,0.948,28,1.28,29,1.62,31,0.349,32,0.451,33,0.091,34,0.091,35,0.825,36,1.883,37,1.883,38,1.214,39,2.6,40,1.214,41,1.113,42,1.214,43,2.121,44,1.214,45,0.945,46,1.214,47,0.725,48,1.214,49,0.99,50,1.214,51,0.945,52,1.214,53,0.99,54,1.214,55,0.99,56,1.214,57,0.99,58,1.695,59,1.214,60,1.214,61,0.005,62,0.008,63,0.005,98,1.562,100,2.766,101,1.562,107,2.968,108,2.869,113,1.214,132,1.909,133,0.431,143,2.922,147,1.456,150,3.922,151,1.466,157,0.825,163,0.945,164,1.15,178,1.365,181,3.922,237,1.993,255,2.064,256,1.695,257,2.442,258,5.859,259,4.54,260,3.706,261,4.54,262,4.54,263,2.752,264,2.064,265,6.112,266,3.706,267,2.869,268,2.389,269,2.389,270,3.201,271,2.389,272,2.389,273,3.706,274,2.064,275,2.389,276,2.389,277,2.621,278,2.869,279,3.706,280,2.064,281,2.389,282,2.389,283,2.389,284,2.389,285,2.389,286,1.69,287,1.85,288,2.064,289,2.064,290,2.389,291,3.922,292,3.201,293,3.201,294,2.064,295,2.064,296,2.621,297,4.287,298,3.916,299,2.064,300,3.201,301,4.287,302,3.201,303,3.201,304,2.064,305,3.201,306,3.706,307,3.201,308,2.389,309,2.869,310,3.211,311,2.389,312,2.064,313,2.389,314,2.389,315,4.54,316,3.201,317,2.064,318,3.201]],["title/modules/ContainerModule.html",[64,1.015,77,2.689]],["body/modules/ContainerModule.html",[2,1.598,3,0.108,4,0.094,9,0.094,23,0.667,25,0.384,26,0.017,31,0.459,32,0.536,33,0.108,34,0.108,35,0.98,41,0.696,43,1.751,47,2.066,61,0.006,62,0.009,63,0.006,64,0.758,66,1.695,67,1.367,68,2.714,69,1.442,70,2.432,71,1.906,77,5.331,78,2.272,79,1.526,80,1.298,82,1.596,83,3.649,84,1.621,85,1.906,92,1.729,114,1.526,128,3.641,133,0.512,143,3.578,151,1.123,155,2.034,157,0.98,159,1.298,163,1.123,176,2.197,177,2.007,274,2.452,319,2.838,320,2.838,321,2.838,322,2.838,323,2.838,324,4.43,325,4.43,326,4.43,327,4.43,328,4.096,329,2.197,330,3.649,331,2.838,332,4.224,333,2.838,334,5.046,335,2.272,336,1.442,337,5.046,338,2.838,339,2.988,340,2.838,341,2.988,342,2.838,343,2.838,344,2.838,345,2.762,346,2.838,347,2.762,348,2.838,349,2.838,350,2.452,351,5.046,352,4.224,353,4.224,354,3.271,355,1.856,356,2.838]],["title/modules/ContainerRoutingModule.html",[64,1.015,324,2.689]],["body/modules/ContainerRoutingModule.html",[3,0.202,4,0.176,9,0.176,26,0.016,31,0.408,32,1.003,33,0.245,34,0.202,61,0.011,62,0.014,63,0.011,66,1.611,71,2.006,82,2.006,85,2.442,110,3.236,111,3.939,112,3.285,113,2.699,114,1.918,324,4.572,357,5.311,358,5.311,359,5.311]],["title/injectables/ContextService.html",[142,1.831,325,2.689]],["body/injectables/ContextService.html",[3,0.154,4,0.135,9,0.135,19,0.443,20,1.028,22,1.639,23,1.542,25,0.737,26,0.017,28,2.122,29,1.945,31,0.414,32,0.767,33,0.154,34,0.154,61,0.008,62,0.011,63,0.008,132,1.711,142,2.622,144,2.872,147,4.292,149,6.086,167,5.298,168,2.672,173,2.184,325,3.851,360,3.508,361,4.755,362,6.142,363,5.306,364,5.444,365,4.344,366,4.061,367,4.061,368,2.872,369,4.061,370,4.061,371,4.061,372,4.061,373,4.061,374,4.061,375,4.061,376,2.655]],["title/classes/CountryModel.html",[34,0.144,377,2.316]],["body/classes/CountryModel.html",[3,0.138,4,0.121,9,0.121,19,0.397,20,0.954,22,0.971,23,1.674,25,0.923,26,0.017,27,1.874,28,1.745,29,1.599,31,0.23,33,0.192,34,0.138,41,0.892,61,0.008,62,0.011,63,0.008,129,1.752,132,2.14,133,0.657,141,1.057,155,1.752,157,1.257,159,1.664,196,2.524,198,1.013,199,2.885,200,2.885,201,2.885,202,2.885,203,2.094,205,1.583,209,1.957,224,2.198,246,3.819,247,2.217,248,2.217,249,2.217,250,2.217,251,1.509,253,0.468,254,1.583,377,3.078,378,5.099,379,4.098,380,4.853,381,3.819,382,3.819,383,3.911,384,3.143,385,2.817]],["title/classes/DayModel.html",[34,0.144,386,2.689]],["body/classes/DayModel.html",[3,0.137,4,0.12,9,0.12,19,0.393,20,0.947,22,0.961,23,1.67,25,0.92,26,0.017,27,1.596,28,1.732,29,1.587,31,0.227,33,0.19,34,0.137,41,0.882,61,0.008,62,0.01,63,0.008,129,1.733,132,2.137,133,0.65,141,1.046,155,1.733,157,1.243,159,1.646,196,2.517,198,1.002,199,2.863,200,2.863,201,2.863,202,2.863,203,2.078,205,1.566,209,1.936,220,2.179,224,2.181,226,4.413,237,3.103,246,3.801,247,2.193,248,2.193,249,2.193,250,2.193,251,1.492,253,0.463,254,1.566,383,3.881,384,3.109,385,2.787,386,3.546,387,5.079,388,5.39,389,5.39,390,3.801]],["title/classes/Encoding.html",[34,0.144,391,2.943]],["body/classes/Encoding.html",[3,0.113,4,0.098,9,0.098,19,0.323,20,0.824,23,1.495,25,0.914,26,0.017,27,1.947,28,1.972,29,2.276,31,0.275,33,0.113,34,0.113,41,1.07,61,0.006,62,0.009,63,0.006,114,1.87,129,1.428,132,1.772,133,0.788,151,1.726,157,1.972,159,1.356,163,1.726,164,1.428,168,1.29,175,2.097,330,6.49,355,2.853,391,3.378,392,2.561,393,5.177,394,5.177,395,5.177,396,5.177,397,4.363,398,4.363,399,2.965,400,2.965,401,2.965,402,2.965,403,4.363,404,2.965,405,6.751,406,3.733,407,4.363,408,2.965,409,2.295,410,5.177,411,2.965,412,2.965,413,2.561,414,2.561,415,2.965,416,2.965,417,2.965,418,2.965,419,2.965,420,2.965,421,2.965,422,4.363,423,2.965,424,2.965,425,2.965,426,4.363,427,2.965,428,2.965,429,2.965,430,2.295,431,2.965,432,2.965,433,2.965,434,2.965]],["title/components/FavoritesComponent.html",[0,1.015,45,1.504]],["body/components/FavoritesComponent.html",[0,1.426,1,1.363,2,1.438,3,0.119,4,0.104,5,1.592,6,1.592,7,1.592,8,1.592,9,0.104,11,1.592,12,3.653,13,3.462,15,2.308,17,2.308,19,0.342,22,1.426,23,1.067,26,0.016,31,0.287,32,0.592,33,0.119,34,0.119,35,1.082,36,2.308,37,2.308,38,1.592,39,2.978,40,1.592,41,1.113,42,1.592,43,1.299,44,1.592,45,2.318,46,1.592,47,0.95,48,1.592,49,1.299,50,1.592,51,1.239,52,1.592,53,1.299,54,1.592,55,1.299,56,1.592,57,1.299,58,1.432,59,1.592,60,1.592,61,0.007,62,0.009,63,0.007,121,3.517,151,1.797,163,1.239,164,1.508,256,2.077,257,2.874,263,3.152,277,3.212,286,2.215,287,2.425,298,2.215,301,5.024,309,2.425,310,2.215,435,2.706,436,5.343,437,4.542,438,3.132,439,3.132,440,5.86,441,7.267,442,6.488,443,6.488,444,6.488,445,5.86,446,5.86,447,4.542,448,5.343,449,2.706,450,2.706,451,3.132,452,3.132,453,3.132,454,3.132,455,3.132,456,3.132,457,3.132,458,3.132,459,4.137,460,3.132,461,3.132,462,2.706,463,3.132]],["title/modules/FavoritesModule.html",[64,1.015,464,2.943]],["body/modules/FavoritesModule.html",[2,1.991,3,0.162,4,0.141,9,0.141,26,0.017,31,0.422,32,0.804,33,0.162,34,0.162,35,1.47,45,2.222,47,2.268,61,0.009,62,0.012,63,0.009,64,1.136,66,2.028,67,2.05,68,3.382,69,2.163,70,2.444,71,2.375,78,3.021,79,2.289,80,1.946,82,2.122,85,2.122,92,2.593,114,2.029,335,3.021,336,2.163,464,5.789,465,4.256,466,4.256,467,4.256,468,4.256,469,5.049,470,3.295,471,4.256,472,3.677]],["title/modules/FavoritesRoutingModule.html",[64,1.015,469,2.689]],["body/modules/FavoritesRoutingModule.html",[0,1.337,3,0.19,4,0.166,9,0.166,26,0.017,31,0.429,32,0.946,33,0.237,34,0.19,45,2.467,61,0.01,62,0.013,63,0.01,66,1.52,71,1.893,82,1.893,85,2.356,110,3.053,111,3.8,112,3.17,113,2.546,114,1.81,116,3.544,469,4.411,472,4.329,473,5.01,474,5.01,475,3.879,476,5.01]],["title/modules/FeatureModule.html",[64,1.015,477,2.316]],["body/modules/FeatureModule.html",[3,0.144,4,0.126,9,0.126,26,0.017,31,0.487,32,0.715,33,0.144,34,0.144,61,0.008,62,0.011,63,0.008,66,1.148,71,1.429,82,1.429,85,1.961,178,2.161,335,2.791,336,1.923,354,2.929,477,3.162,478,3.783,479,5.923,480,3.783,481,5.189,482,3.783,483,5.189,484,3.783,485,5.189,486,3.783,487,5.189,488,3.783,489,5.189,490,3.783,491,5.189,492,3.783,493,5.189,494,3.783,495,5.189,496,3.783,497,5.189,498,3.783,499,5.189,500,3.783,501,4.483,502,3.269,503,5.189,504,3.783,505,5.189,506,3.783,507,5.189,508,3.783,509,3.783]],["title/components/ForecastComponent.html",[0,1.015,47,1.153]],["body/components/ForecastComponent.html",[0,1.6,1,1.685,2,1.669,3,0.147,4,0.129,5,1.968,6,1.968,7,1.968,8,1.968,9,0.129,11,1.968,12,3.805,13,3.605,15,2.679,17,2.679,19,0.422,22,1.6,23,1.238,26,0.016,31,0.244,32,0.731,33,0.147,34,0.147,35,1.338,36,2.679,37,2.679,38,1.968,39,3.27,40,1.968,41,1.292,42,1.968,43,1.605,44,1.968,45,1.532,46,1.968,47,1.952,48,1.968,49,1.605,50,1.968,51,1.532,52,1.968,53,1.605,54,1.968,55,1.605,56,1.968,57,1.605,58,1.771,59,1.968,60,1.968,61,0.008,62,0.011,63,0.008,151,2.085,163,1.532,164,1.864,256,2.411,257,3.224,263,3.461,510,3.345,511,4.552,512,5.994,513,5.272,514,3.872,515,3.872,516,4.082]],["title/classes/ForecastModel.html",[34,0.144,517,2.316]],["body/classes/ForecastModel.html",[3,0.136,4,0.119,9,0.119,19,0.391,20,0.945,22,0.958,23,1.636,25,0.887,26,0.017,27,0.918,28,1.729,29,1.584,31,0.364,33,0.19,34,0.136,41,0.88,61,0.008,62,0.01,63,0.008,129,1.728,132,2.104,133,0.648,141,1.674,155,1.728,157,1.24,159,1.641,168,1.562,196,2.515,198,1,199,2.858,200,2.858,201,2.858,202,2.858,203,2.075,205,1.562,209,1.931,224,2.177,246,3.797,247,2.187,248,2.187,249,2.187,250,2.187,251,1.488,253,0.461,254,1.562,376,2.347,383,3.874,385,2.779,517,3.049,518,4.825,519,5.383,520,5.383,521,4.407,522,3.797,523,4.074,524,3.101,525,3.101,526,4.323]],["title/modules/ForecastModule.html",[64,1.015,527,2.943]],["body/modules/ForecastModule.html",[2,1.991,3,0.162,4,0.141,9,0.141,26,0.017,31,0.422,32,0.804,33,0.162,34,0.162,35,1.47,47,2.307,61,0.009,62,0.012,63,0.009,64,1.136,66,2.028,67,2.05,68,3.382,69,2.163,70,2.444,71,2.375,78,3.021,79,2.289,80,1.946,82,2.122,85,2.122,92,2.593,114,2.029,335,3.021,336,2.163,527,5.789,528,4.256,529,4.256,530,4.256,531,4.256,532,5.049,533,3.295,534,4.256,535,3.677]],["title/modules/ForecastRoutingModule.html",[64,1.015,532,2.689]],["body/modules/ForecastRoutingModule.html",[0,1.337,3,0.19,4,0.166,9,0.166,26,0.017,31,0.429,32,0.946,33,0.237,34,0.19,47,1.892,61,0.01,62,0.013,63,0.01,66,1.52,71,1.893,82,1.893,85,2.356,110,3.053,111,3.8,112,3.17,113,2.546,114,1.81,116,3.544,475,3.879,532,4.411,535,4.329,536,5.01,537,5.01,538,5.01]],["title/components/HeaderComponent.html",[0,1.015,49,1.576]],["body/components/HeaderComponent.html",[0,1.162,1,0.973,2,1.114,3,0.085,4,0.074,5,1.136,6,1.136,7,1.136,8,1.136,9,0.074,11,1.136,12,3.371,13,3.248,15,1.789,17,1.789,19,0.244,20,0.665,22,1.162,23,1.261,25,0.477,26,0.017,28,1.216,29,1.114,31,0.222,32,0.422,33,0.085,34,0.085,35,0.773,36,1.789,37,1.789,38,1.136,39,2.508,40,1.136,41,0.863,42,1.136,43,0.927,44,1.136,45,0.885,46,1.136,47,0.678,48,1.136,49,2.046,50,1.136,51,0.885,52,1.136,53,0.927,54,1.136,55,0.927,56,1.136,57,0.927,58,1.023,59,1.136,60,1.136,61,0.005,62,0.007,63,0.005,80,1.609,121,2.725,132,1.661,151,1.392,163,0.885,164,1.077,168,1.893,205,2.595,218,1.932,256,1.609,257,2.341,263,2.654,286,1.582,287,1.731,288,1.932,289,1.932,291,3.759,292,3.759,293,3.759,294,1.932,295,1.932,296,4.218,297,4.155,298,4.37,300,4.264,301,3.821,302,1.932,303,1.932,304,3.04,307,3.04,309,1.731,310,4.031,312,3.04,316,3.759,317,3.759,363,3.759,449,3.04,450,1.932,459,3.821,462,1.932,539,1.932,540,5.963,541,4.352,542,3.519,543,4.352,544,4.352,545,3.519,546,3.519,547,4.935,548,2.236,549,2.236,550,2.236,551,3.519,552,2.236,553,3.519,554,3.519,555,3.519,556,3.519,557,3.04,558,3.04,559,4.352,560,5.367,561,5.7,562,6.178,563,2.236,564,2.236,565,2.236,566,3.519,567,2.236,568,4.935,569,4.935,570,4.935,571,3.519,572,4.352,573,2.236,574,2.236,575,2.236,576,1.932,577,2.236,578,1.932,579,3.519,580,3.519,581,2.236,582,2.236,583,2.236,584,3.04,585,3.04,586,3.519,587,2.236]],["title/modules/HeaderModule.html",[64,1.015,345,2.485]],["body/modules/HeaderModule.html",[2,1.96,3,0.157,4,0.137,9,0.137,26,0.017,31,0.434,32,0.779,33,0.157,34,0.157,35,1.425,47,2.254,49,2.281,61,0.009,62,0.011,63,0.009,64,1.101,66,2.003,67,1.986,68,3.329,69,2.096,70,2.393,71,2.338,78,2.959,79,2.218,80,1.886,82,2.078,85,2.078,92,2.513,114,1.987,335,2.959,336,2.096,345,4.948,477,4.311,588,4.124,589,4.124,590,4.124,591,4.124,592,5.005,593,3.193,594,3.193,595,4.124,596,4.124]],["title/modules/HeaderRoutingModule.html",[64,1.015,592,2.689]],["body/modules/HeaderRoutingModule.html",[3,0.202,4,0.176,9,0.176,26,0.016,31,0.408,32,1.003,33,0.245,34,0.202,61,0.011,62,0.014,63,0.011,66,1.611,71,2.006,82,2.006,85,2.442,110,3.236,111,3.939,112,3.285,113,2.699,114,1.918,592,4.572,597,5.311,598,5.311,599,5.311]],["title/interfaces/IAdministrativeArea.html",[253,0.489,600,2.316]],["body/interfaces/IAdministrativeArea.html",[3,0.164,4,0.144,9,0.144,19,0.472,20,1.072,25,0.99,26,0.016,27,2.011,33,0.164,61,0.009,62,0.012,63,0.009,133,1.4,198,1.205,220,2.394,253,0.556,379,4.399,380,5.21,381,4.1,600,3.459,601,1.494,602,3.737,603,6.728,604,6.728,605,6.728,606,6.728]],["title/interfaces/IConditions.html",[234,2.689,253,0.489]],["body/interfaces/IConditions.html",[3,0.122,4,0.107,9,0.107,19,0.352,20,0.876,25,0.953,26,0.017,27,1.869,31,0.293,33,0.176,34,0.122,61,0.007,62,0.01,63,0.007,132,1.96,133,1.372,141,1.348,196,1.675,198,0.898,203,1.336,205,2.584,220,2.61,222,1.964,223,2.496,224,1.403,225,5.436,226,4.451,227,5.436,228,4.114,229,5.436,230,4.114,231,4.451,232,5.436,233,5.436,234,3.841,237,3.716,243,3.594,251,1.336,252,2.28,253,0.414,254,1.403,601,1.114]],["title/interfaces/ICountry.html",[253,0.489,382,2.316]],["body/interfaces/ICountry.html",[3,0.171,4,0.15,9,0.15,19,0.493,20,1.103,25,0.876,26,0.016,27,1.976,31,0.285,33,0.222,34,0.171,61,0.009,62,0.012,63,0.009,132,1.802,133,1.31,141,1.313,196,2.109,198,1.258,203,1.873,224,1.965,251,1.873,253,0.581,254,1.965,377,2.752,378,3.497,379,4.632,380,5.485,381,4.317,382,3.943,601,1.56]],["title/interfaces/IDay.html",[253,0.489,390,2.316]],["body/interfaces/IDay.html",[3,0.169,4,0.148,9,0.148,19,0.486,20,1.093,25,0.871,26,0.017,27,1.741,31,0.281,33,0.22,34,0.169,61,0.009,62,0.012,63,0.009,132,1.791,133,1.305,141,1.295,196,2.09,198,1.241,203,1.847,220,2.571,224,1.939,226,4.989,237,3.661,251,1.847,253,0.573,254,1.939,386,3.152,387,3.45,388,6.094,389,6.094,390,3.918,601,1.539]],["title/interfaces/IDictionary.html",[253,0.489,365,2.689]],["body/interfaces/IDictionary.html",[3,0.209,4,0.183,9,0.183,23,1.294,26,0.016,27,1.691,31,0.348,33,0.209,61,0.012,62,0.014,63,0.012,141,1.601,196,2.557,251,2.284,253,0.708,365,4.675,406,4.321,601,1.903,607,4.759,608,5.509,609,5.509]],["title/interfaces/IElevation.html",[253,0.489,610,2.689]],["body/interfaces/IElevation.html",[3,0.195,4,0.17,9,0.17,19,0.559,20,1.195,25,0.857,26,0.016,31,0.324,33,0.195,61,0.011,62,0.013,63,0.011,133,1.293,141,1.49,198,1.428,253,0.659,601,1.771,610,4.474,611,4.429,612,7.164,613,7.164,614,4.966,615,4.429]],["title/interfaces/IForecast.html",[253,0.489,521,2.689]],["body/interfaces/IForecast.html",[3,0.168,4,0.147,9,0.147,19,0.483,20,1.088,25,0.78,26,0.017,31,0.404,33,0.219,34,0.168,61,0.009,62,0.012,63,0.009,132,1.605,133,1.226,141,1.862,168,1.926,196,2.081,198,1.233,203,1.835,224,1.926,251,1.835,253,0.569,254,1.926,376,2.894,517,2.697,518,3.427,519,6.081,520,6.081,521,4.533,522,4.289,523,4.602,524,3.824,525,3.824,526,4.979,601,1.529]],["title/interfaces/IGeoPosition.html",[139,2.171,253,0.489]],["body/interfaces/IGeoPosition.html",[3,0.185,4,0.162,9,0.162,19,0.532,20,1.159,25,0.909,26,0.016,31,0.308,33,0.185,61,0.01,62,0.013,63,0.01,133,1.337,139,3.505,141,1.419,188,5.451,190,5.451,198,1.36,220,2.797,253,0.628,601,1.686,610,4.98,616,4.217,617,7.04,618,4.882]],["title/interfaces/IHeadline.html",[253,0.489,523,2.485]],["body/interfaces/IHeadline.html",[3,0.149,4,0.13,9,0.13,19,0.427,20,1.004,25,0.996,26,0.016,27,1.934,33,0.149,61,0.008,62,0.011,63,0.008,133,1.404,198,1.091,205,3.033,220,2.778,228,4.228,230,4.228,253,0.504,523,3.474,578,5.586,601,1.353,619,3.384,620,6.466,621,6.466,622,6.466,623,6.466,624,6.466,625,6.466]],["title/interfaces/ILocation.html",[253,0.489,626,2.689]],["body/interfaces/ILocation.html",[3,0.096,4,0.084,9,0.084,19,0.276,20,0.733,25,0.987,26,0.017,27,1.907,31,0.394,33,0.147,34,0.096,61,0.005,62,0.008,63,0.005,132,2.015,133,1.363,139,3.249,140,1.793,141,1.815,168,1.103,196,1.401,198,0.706,203,1.051,220,1.994,222,2.363,224,1.103,237,3.06,251,1.051,253,0.326,254,1.103,368,4.024,376,1.657,377,2.871,379,3.72,381,3.466,382,3.804,406,3.72,511,1.793,517,2.363,600,3.466,601,0.876,626,3.333,627,1.963,628,4.405,629,4.024,630,4.405,631,4.915,632,4.405,633,4.915,634,4.915,635,3.72,636,1.963,637,2.19,638,2.19,639,2.19,640,2.19,641,1.793,642,1.963,643,1.963,644,2.19,645,3.351]],["title/interfaces/IMetric.html",[253,0.489,614,2.485]],["body/interfaces/IMetric.html",[3,0.19,4,0.166,9,0.166,19,0.546,20,1.178,25,0.919,26,0.016,27,1.737,29,2.25,33,0.19,61,0.01,62,0.013,63,0.01,133,1.345,198,1.395,220,2.816,253,0.644,601,1.731,614,4.078,646,4.329,647,6.139,648,7.106]],["title/interfaces/ISearchEvent.html",[253,0.489,649,2.689]],["body/interfaces/ISearchEvent.html",[3,0.197,4,0.172,9,0.172,19,0.566,20,1.203,25,0.863,26,0.016,27,1.764,33,0.197,61,0.011,62,0.013,63,0.011,253,0.667,601,1.792,649,4.506,650,4.481,651,4.481,652,7.193,653,7.193,654,6.896,655,6.896]],["title/interfaces/ISearchResult.html",[253,0.489,656,2.485]],["body/interfaces/ISearchResult.html",[3,0.156,4,0.136,9,0.136,19,0.447,20,1.035,25,1.024,26,0.017,27,1.898,31,0.259,33,0.156,61,0.009,62,0.011,63,0.009,133,1.39,141,1.191,198,1.141,220,2.668,253,0.527,381,4.013,406,4.307,600,4.395,601,1.416,628,5.1,629,4.659,632,5.1,636,3.173,656,3.582,657,3.541,658,5.69]],["title/interfaces/ITemperature.html",[243,2.171,253,0.489]],["body/interfaces/ITemperature.html",[3,0.195,4,0.171,9,0.171,19,0.561,20,1.198,25,0.859,26,0.016,31,0.325,33,0.195,61,0.011,62,0.013,63,0.011,133,1.295,141,1.496,198,1.433,243,3.622,253,0.662,601,1.778,614,4.97,615,4.446,659,4.446,660,7.173,661,7.173]],["title/interfaces/ITimeZone.html",[253,0.489,635,2.485]],["body/interfaces/ITimeZone.html",[3,0.173,4,0.151,9,0.151,19,0.496,20,1.108,25,0.961,26,0.016,27,1.86,33,0.173,41,1.681,61,0.01,62,0.012,63,0.01,133,1.378,198,1.267,205,2.825,217,5.31,220,2.453,237,3.492,253,0.585,601,1.571,635,3.835,662,3.929,663,6.859,664,6.859,665,6.859]],["title/interfaces/IWeather.html",[253,0.489,522,2.316]],["body/interfaces/IWeather.html",[3,0.126,4,0.11,9,0.11,19,0.362,20,0.894,25,0.943,26,0.017,27,1.88,31,0.348,33,0.18,34,0.126,61,0.007,62,0.01,63,0.007,132,1.939,133,1.364,141,1.604,196,1.71,198,0.925,203,1.377,205,3.083,220,2.274,224,1.445,228,4.161,230,4.161,231,4.502,243,3.636,251,1.377,252,2.348,253,0.427,254,1.445,390,4.318,522,3.364,601,1.147,666,2.571,667,5.498,668,5.498,669,5.498,670,5.498,671,2.868,672,2.348]],["title/classes/LocationModel.html",[34,0.144,641,2.689]],["body/classes/LocationModel.html",[3,0.078,4,0.068,9,0.068,19,0.225,20,0.623,22,0.551,23,1.697,25,0.989,26,0.017,27,1.81,28,1.14,29,1.045,31,0.365,33,0.125,34,0.078,41,0.506,61,0.004,62,0.007,63,0.004,129,0.993,132,2.183,133,0.372,139,2.694,140,1.459,141,1.679,155,0.993,157,0.713,159,0.943,168,0.897,196,2.087,198,0.574,199,1.885,200,1.885,201,1.885,202,1.885,203,1.368,205,0.897,209,1.109,220,1.559,222,2.514,224,1.436,235,1.782,237,2.775,246,2.874,247,1.257,248,1.257,249,1.257,250,1.257,251,0.855,253,0.265,254,0.897,368,3.336,376,1.349,377,3.143,379,3.084,381,2.874,382,2.514,406,3.084,511,2.919,517,2.514,600,2.874,626,3.336,627,5.479,628,3.652,629,3.336,630,3.652,631,4.074,632,3.652,633,4.074,634,4.074,635,3.084,636,1.597,637,1.782,638,1.782,639,1.782,640,1.782,641,2.335,642,3.195,643,3.195,644,3.565,645,2.851,673,3.301,674,2.063,675,2.063,676,2.063,677,2.063,678,2.063,679,2.063,680,2.063,681,2.063,682,2.063,683,2.063,684,2.063,685,2.063,686,2.063,687,2.063]],["title/guards/LocationResolver.html",[341,2.689,688,2.943]],["body/guards/LocationResolver.html",[3,0.151,4,0.132,9,0.132,19,0.434,22,1.061,23,1.261,25,0.727,26,0.017,31,0.442,32,0.751,33,0.151,34,0.151,41,1.316,61,0.008,62,0.011,63,0.008,84,2.271,113,2.021,133,0.969,134,3.078,142,2.585,143,3.716,147,2.423,151,2.123,154,5.037,157,1.854,158,4.705,163,1.573,173,2.138,178,2.271,256,1.818,264,3.435,267,4.156,341,3.796,355,3.509,430,4.156,689,3.976,690,3.435,691,6.506,692,3.976,693,5.367,694,6.506,695,3.976,696,3.976,697,3.973,698,5.367,699,3.435,700,3.078,701,3.435,702,3.976,703,3.976,704,3.976,705,3.976,706,3.976,707,3.976,708,3.976,709,3.976]],["title/interceptors/RequestInterceptor.html",[326,2.689,339,2.689]],["body/interceptors/RequestInterceptor.html",[3,0.167,4,0.146,9,0.146,19,0.48,22,1.705,23,1.348,25,0.777,26,0.016,31,0.403,32,0.83,33,0.167,34,0.167,41,1.078,61,0.009,62,0.012,63,0.009,84,2.512,114,2.072,133,0.794,142,2.763,151,2.27,157,1.519,163,1.739,173,2.365,256,2.011,277,4.518,326,4.059,355,2.875,697,4.177,710,3.799,711,5.519,712,3.404,713,4.957,714,4.397,715,4.957,716,5.85,717,5.85,718,4.397,719,3.799,720,3.799,721,4.957,722,5.738,723,4.397,724,4.397,725,4.397,726,4.397,727,4.397,728,4.397]],["title/interceptors/ResponseInterceptor.html",[327,2.689,339,2.689]],["body/interceptors/ResponseInterceptor.html",[3,0.157,4,0.137,9,0.137,19,0.451,22,1.655,23,1.295,25,0.56,26,0.017,31,0.417,32,0.781,33,0.157,34,0.157,41,1.014,61,0.009,62,0.012,63,0.009,84,2.363,114,1.991,133,0.747,142,2.654,151,2.18,157,1.429,163,1.636,173,2.225,256,1.892,277,4.385,278,4.268,280,3.574,327,3.899,355,3.604,697,4.053,699,3.574,700,3.203,710,3.574,712,3.203,713,4.762,715,4.762,716,5.711,717,5.711,719,3.574,720,3.574,721,4.762,729,5.356,730,4.137,731,4.137,732,5.512,733,4.762,734,5.512,735,4.137,736,4.137,737,5.512,738,4.137,739,4.137,740,4.137,741,4.137]],["title/components/SearchComponent.html",[0,1.015,51,1.504]],["body/components/SearchComponent.html",[0,1.343,1,1.23,2,1.333,3,0.107,4,0.094,5,1.436,6,1.436,7,1.436,8,1.436,9,0.094,11,1.436,12,3.572,13,3.428,15,2.14,17,2.14,19,0.308,20,0.795,22,0.754,23,1.469,25,0.681,26,0.017,28,1.455,29,1.594,31,0.395,32,0.534,33,0.107,34,0.107,35,0.976,36,2.14,37,2.14,38,1.436,39,2.835,40,1.436,41,1.234,42,1.436,43,1.172,44,1.436,45,1.118,46,1.436,47,0.857,48,1.436,49,1.172,50,1.436,51,2.206,52,1.436,53,1.172,54,1.436,55,1.172,56,1.436,57,1.172,58,2.302,59,1.436,60,1.436,61,0.011,62,0.009,63,0.006,117,3.897,132,1.895,133,1.077,141,0.821,147,3.067,151,1.666,157,0.976,163,1.118,164,1.361,167,4.318,168,1.23,173,1.52,178,1.614,256,1.926,257,2.707,263,3,278,3.26,328,3.647,350,2.441,430,2.188,649,3.56,656,1.848,697,3.291,700,2.188,742,2.441,743,5.033,744,4.211,745,5.033,746,5.033,747,5.033,748,5.033,749,2.826,750,4.211,751,2.826,752,2.826,753,2.826,754,2.826,755,2.826,756,4.211,757,2.826,758,2.826,759,2.441,760,2.826,761,2.826,762,2.826,763,2.826,764,2.826,765,2.826,766,2.826]],["title/modules/SearchModule.html",[64,1.015,767,2.943]],["body/modules/SearchModule.html",[2,1.904,3,0.148,4,0.129,9,0.129,26,0.017,31,0.449,32,0.736,33,0.148,34,0.148,35,1.345,47,2.227,51,2.094,61,0.008,62,0.011,63,0.008,64,1.039,66,1.957,67,1.875,68,3.234,69,1.979,70,2.303,71,2.271,78,2.847,79,2.095,80,1.781,82,2,85,2,92,2.373,114,1.911,335,2.847,336,1.979,477,4.24,594,3.015,767,5.886,768,3.894,769,3.894,770,3.894,771,3.894,772,4.922,773,4.922,774,3.015,775,5.293,776,3.364,777,3.894,778,3.364,779,3.894]],["title/modules/SearchRoutingModule.html",[64,1.015,772,2.689]],["body/modules/SearchRoutingModule.html",[0,1.337,3,0.19,4,0.166,9,0.166,26,0.017,31,0.429,32,0.946,33,0.237,34,0.19,51,2.467,61,0.01,62,0.013,63,0.01,66,1.52,71,1.893,82,1.893,85,2.356,110,3.053,111,3.8,112,3.17,113,2.546,114,1.81,116,3.544,475,3.879,772,4.411,778,4.329,780,5.01,781,5.01,782,5.01]],["title/components/SettingsComponent.html",[0,1.015,53,1.576]],["body/components/SettingsComponent.html",[0,1.6,1,1.685,2,1.669,3,0.147,4,0.129,5,1.968,6,1.968,7,1.968,8,1.968,9,0.129,11,1.968,12,3.805,13,3.605,15,2.679,17,2.679,19,0.422,22,1.6,23,1.238,26,0.016,31,0.244,32,0.731,33,0.147,34,0.147,35,1.338,36,2.679,37,2.679,38,1.968,39,3.27,40,1.968,41,1.292,42,1.968,43,1.605,44,1.968,45,1.532,46,1.968,47,1.174,48,1.968,49,1.605,50,1.968,51,1.532,52,1.968,53,2.668,54,1.968,55,1.605,56,1.968,57,1.605,58,1.771,59,1.968,60,1.968,61,0.008,62,0.011,63,0.008,151,2.085,163,1.532,164,1.864,177,4.552,256,2.411,257,3.224,263,3.461,516,4.082,783,3.345,784,5.994,785,5.272,786,3.872,787,3.872]],["title/components/SidenavComponent.html",[0,1.015,55,1.576]],["body/components/SidenavComponent.html",[0,1.45,1,1.403,2,1.468,3,0.122,4,0.107,5,1.638,6,1.638,7,1.638,8,1.638,9,0.107,11,1.638,12,3.675,13,3.577,15,2.357,17,2.357,19,0.352,22,0.86,23,1.276,25,0.628,26,0.016,28,1.114,29,1.021,31,0.375,32,0.609,33,0.122,34,0.122,35,1.114,36,2.357,37,2.357,38,1.638,39,3.018,40,1.638,41,1.331,42,1.638,43,1.336,44,1.638,45,1.275,46,1.638,47,0.978,48,1.638,49,1.336,50,1.638,51,1.275,52,1.638,53,1.336,54,1.638,55,2.462,56,1.638,57,1.336,58,1.474,59,1.638,60,1.638,61,0.007,62,0.01,63,0.007,80,2.121,98,2.108,100,3.309,101,2.108,107,3.551,108,3.59,132,0.898,133,0.582,143,3.392,151,1.834,157,1.114,163,1.275,164,1.552,178,1.841,256,2.121,257,2.921,263,3.194,286,2.28,296,2.28,297,2.496,298,2.28,299,2.785,310,3.28,318,4.692,459,2.496,557,2.785,558,2.785,584,4.006,585,4.006,701,2.785,788,2.785,789,5.431,790,4.637,791,4.637,792,3.224,793,4.637,794,4.637,795,3.224,796,4.637,797,3.224,798,4.637,799,3.224,800,3.224]],["title/modules/SidenavModule.html",[64,1.015,347,2.485]],["body/modules/SidenavModule.html",[2,1.966,3,0.158,4,0.138,9,0.138,26,0.017,31,0.447,32,0.784,33,0.158,34,0.158,35,1.434,47,2.256,53,2.29,55,2.29,61,0.009,62,0.012,63,0.009,64,1.108,66,2.008,67,1.998,68,3.34,69,2.109,70,2.403,71,2.346,78,2.971,79,2.232,80,1.898,82,2.087,85,2.087,114,1.995,335,2.971,336,2.109,347,4.864,477,4.319,501,4.772,502,3.585,594,3.213,801,4.15,802,4.15,803,4.15,804,4.15,805,3.213,806,4.15,807,4.15]],["title/components/WeatherComponent.html",[0,1.015,57,1.576]],["body/components/WeatherComponent.html",[0,1.6,1,1.685,2,1.669,3,0.147,4,0.129,5,1.968,6,1.968,7,1.968,8,1.968,9,0.129,11,1.968,12,3.805,13,3.605,15,2.679,17,2.679,19,0.422,22,1.6,23,1.238,26,0.016,31,0.244,32,0.731,33,0.147,34,0.147,35,1.338,36,2.679,37,2.679,38,1.968,39,3.27,40,1.968,41,1.292,42,1.968,43,1.605,44,1.968,45,1.532,46,1.968,47,1.174,48,1.968,49,1.605,50,1.968,51,1.532,52,1.968,53,1.605,54,1.968,55,1.605,56,1.968,57,2.668,58,3.079,59,1.968,60,1.968,61,0.008,62,0.011,63,0.008,151,2.085,163,1.532,164,1.864,256,2.411,257,3.224,263,3.461,516,4.082,808,3.345,809,5.994,810,5.272,811,3.872,812,3.872]],["title/classes/WeatherModel.html",[34,0.144,672,2.689]],["body/classes/WeatherModel.html",[3,0.106,4,0.093,9,0.093,19,0.304,20,0.788,22,0.745,23,1.686,25,0.949,26,0.017,27,1.766,28,1.441,29,1.321,31,0.315,33,0.158,34,0.106,41,0.684,61,0.006,62,0.009,63,0.006,129,1.344,132,2.167,133,0.504,141,1.452,155,1.344,157,0.964,159,1.276,196,2.33,198,0.777,199,2.383,200,2.383,201,2.383,202,2.383,203,1.729,205,2.886,209,1.501,220,1.887,224,1.815,228,3.624,230,3.624,231,3.92,236,2.411,238,2.411,239,2.411,240,2.411,241,2.411,242,2.411,243,3.166,244,2.411,245,3.603,246,3.377,247,1.7,248,1.7,249,1.7,250,1.7,251,1.157,252,1.974,253,0.359,254,1.214,390,3.931,522,3.377,666,5.346,667,4.788,668,4.788,669,4.788,670,4.788,671,2.411,672,2.95]],["title/modules/WeatherModule.html",[64,1.015,773,2.689]],["body/modules/WeatherModule.html",[2,2.039,3,0.17,4,0.148,9,0.148,26,0.017,31,0.406,32,0.844,33,0.17,34,0.17,35,1.545,47,2.289,57,2.405,61,0.009,62,0.012,63,0.009,64,1.193,66,2.067,67,2.153,68,3.464,69,2.272,70,2.524,71,2.433,78,3.12,79,2.405,80,2.045,82,1.689,85,2.192,114,2.095,335,3.12,336,2.272,773,5.21,813,4.471,814,4.471,815,4.471,816,3.462,817,4.471]],["title/injectables/WeatherService.html",[142,1.831,328,2.485]],["body/injectables/WeatherService.html",[3,0.161,4,0.14,9,0.14,19,0.461,20,1.056,22,1.129,23,1.314,25,0.573,26,0.017,27,1.082,28,1.461,29,1.339,31,0.45,32,0.799,33,0.161,34,0.161,41,1.037,61,0.009,62,0.012,63,0.009,70,1.84,84,2.416,117,4.331,128,4.064,132,1.746,133,0.764,141,1.229,142,2.694,144,2.991,147,2.577,153,3.653,154,5.164,155,3.018,157,1.461,158,4.331,159,1.934,173,2.275,175,2.991,176,3.274,177,2.991,178,2.416,328,3.657,656,2.765,697,3.657,759,3.653,818,3.653,819,4.853,820,4.229,821,4.229,822,4.229,823,4.229,824,4.229]],["title/coverage.html",[825,4.497]],["body/coverage.html",[0,1.662,1,0.913,2,1.842,9,0.07,10,1.813,25,0.284,26,0.017,34,0.236,43,0.87,45,0.83,47,0.636,49,0.87,51,0.83,53,0.87,55,0.87,57,0.87,61,0.004,62,0.007,63,0.004,66,1.765,70,1.456,128,1.279,130,1.813,131,1.813,139,1.199,142,2.01,143,1.199,145,1.813,168,0.913,174,2.591,196,0.758,197,1.813,198,2.018,222,1.279,223,2.591,234,1.484,243,1.199,253,0.897,255,1.813,305,6.821,325,1.484,326,1.484,327,1.484,328,1.372,329,2.591,339,2.367,341,1.484,360,1.813,361,1.625,365,1.484,377,1.279,378,2.591,382,1.279,386,1.484,387,2.591,390,1.279,391,1.625,392,1.813,409,2.591,435,1.813,470,2.591,510,1.813,517,1.279,518,2.591,521,1.484,522,1.279,523,1.372,533,2.591,539,1.813,593,2.591,600,1.279,602,1.813,607,1.813,610,1.484,611,1.813,614,1.372,616,1.813,619,1.813,626,1.484,627,2.591,635,1.372,641,1.484,646,1.813,649,1.484,650,1.813,651,1.813,656,1.372,657,1.813,659,1.813,662,1.813,666,2.591,672,1.484,688,1.625,690,1.813,711,1.813,712,2.591,729,1.813,742,1.813,774,2.591,783,1.813,788,1.813,805,2.591,808,1.813,816,2.591,818,1.813,825,1.813,826,2.098,827,2.098,828,2.098,829,6.737,830,4.174,831,7.358,832,7.39,833,4.763,834,5.203,835,4.174,836,2.098,837,4.174,838,4.174,839,2.098,840,2.098,841,2.098,842,2.098,843,4.114,844,2.891,845,4.114,846,2.891,847,1.813,848,2.098,849,2.098]],["title/dependencies.html",[67,2.204,850,3.166]],["body/dependencies.html",[26,0.017,32,0.871,61,0.01,62,0.012,63,0.01,67,2.22,69,2.343,87,5.112,88,4.582,113,2.343,173,2.48,209,2.48,210,3.983,336,2.343,413,3.983,414,3.983,576,3.983,776,3.983,851,4.611,852,6.557,853,4.611,854,4.611,855,4.611,856,4.611,857,4.611,858,4.611,859,4.611,860,4.611,861,4.611,862,4.611,863,4.611,864,4.611,865,4.611,866,4.611,867,4.611,868,5.917,869,4.611,870,4.611,871,4.611,872,4.611,873,4.611,874,4.611,875,4.611,876,4.611]],["title/miscellaneous/enumerations.html",[877,2.239,878,3.954]],["body/miscellaneous/enumerations.html",[19,0.453,26,0.016,29,2.471,58,2.526,61,0.009,62,0.012,63,0.009,94,3.907,97,3.907,100,3.366,368,3.907,629,3.907,642,4.277,819,4.277,877,2.935,878,3.585,879,4.15,880,5.524,881,4.15,882,5.524,883,5.524,884,4.15,885,5.524,886,5.524,887,4.15,888,5.524,889,5.524,890,5.524,891,4.15,892,5.524,893,5.524,894,4.15,895,5.524,896,4.772,897,5.524,898,4.772,899,4.15,900,5.524,901,4.15,902,5.524,903,5.524,904,5.524,905,5.524,906,5.524,907,5.524,908,5.524]],["title/index.html",[19,0.345,733,2.735,909,3.166]],["body/index.html",[0,1.655,4,0.137,13,1.992,26,0.012,30,5.356,41,1.014,61,0.009,62,0.012,63,0.009,80,1.892,168,1.8,217,3.203,267,3.203,296,2.926,511,2.926,643,3.203,647,4.762,658,3.574,852,3.574,910,5.512,911,4.137,912,6.199,913,6.199,914,7.082,915,4.137,916,4.137,917,4.137,918,4.137,919,4.137,920,4.137,921,5.512,922,7.229,923,4.137,924,4.137,925,4.137,926,4.137,927,4.137,928,4.137,929,4.137,930,4.137,931,4.137,932,6.199,933,6.199,934,4.137,935,6.886,936,4.137,937,4.137,938,4.137,939,4.137,940,4.137,941,3.574,942,5.512,943,6.611,944,4.137,945,5.512,946,5.512,947,4.137,948,6.611,949,4.137,950,4.137,951,4.137,952,6.199,953,4.137,954,4.137,955,4.137,956,3.203,957,4.137,958,4.137,959,4.137]],["title/modules.html",[66,1.579]],["body/modules.html",[26,0.012,61,0.01,62,0.012,63,0.01,65,3.62,66,1.418,76,3.307,77,3.307,88,5.835,324,3.307,345,3.057,347,3.057,464,3.62,469,3.307,477,2.849,527,3.62,532,3.307,592,3.307,767,3.62,772,3.307,773,3.307,960,7.536,961,7.536,962,7.856,963,7.443,964,7.443]],["title/overview.html",[956,4.031]],["body/overview.html",[2,1.828,26,0.014,61,0.012,62,0.014,63,0.012,66,1.751,112,2.934,129,2.78,144,4.083,601,1.994,688,4.469,956,4.469,965,5.772,966,6.795,967,5.772,968,5.772,969,5.772,970,5.772]],["title/routes.html",[112,2.646]],["body/routes.html",[26,0.015,61,0.013,62,0.015,63,0.013,112,3.124]],["title/miscellaneous/variables.html",[877,2.239,971,3.954]],["body/miscellaneous/variables.html",[2,2.207,19,0.251,25,1.009,26,0.017,27,0.921,28,2.564,29,2.35,43,0.954,45,0.911,47,0.698,49,0.954,51,0.911,53,0.954,55,0.954,57,0.954,58,1.647,61,0.005,62,0.008,63,0.005,66,2.114,70,2.182,174,3.882,188,2.788,190,2.788,270,1.989,329,1.782,345,1.505,347,1.505,354,2.788,361,2.788,409,3.882,470,1.782,533,1.782,593,1.782,630,2.788,774,1.782,805,1.782,816,1.782,819,2.788,843,1.989,844,4.332,845,1.989,846,1.989,847,3.11,877,1.628,896,3.11,898,3.11,941,3.11,971,1.989,972,5.014,973,5.014,974,3.6,975,3.6,976,3.6,977,3.6,978,3.6,979,3.6,980,3.6,981,3.6,982,3.6,983,3.6,984,3.6,985,3.6,986,3.6,987,5.77,988,3.6,989,3.6,990,3.6,991,3.6,992,3.6,993,5.014,994,3.6,995,3.6,996,3.6,997,3.6,998,3.6,999,3.6,1000,3.6,1001,3.6,1002,3.6,1003,3.6,1004,3.6,1005,3.6,1006,2.302,1007,2.302,1008,2.302]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":305,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":583,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":459,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":968,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":294,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":457,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":299,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":311,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":579,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11.0.0",{"_index":852,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":965,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":317,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["16",{"_index":969,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":295,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":799,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":458,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["3",{"_index":967,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":798,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.855499",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":456,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400px",{"_index":452,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["4c87",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6.6.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":970,"title":{},"body":{"overview.html":{}}}],["868c",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":966,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":461,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["action",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":694,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":628,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["aes",{"_index":411,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.decrypt(cipher",{"_index":417,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.encrypt(value",{"_index":420,"title":{},"body":{"classes/Encoding.html":{}}}],["afa5425d",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afd9",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["amount",{"_index":293,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":912,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":336,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":776,"title":{},"body":{"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["application",{"_index":267,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"index.html":{}}}],["application/json",{"_index":725,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["applicationservice",{"_index":143,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["appmodule",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["approutes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":76,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}}}],["appsettings",{"_index":128,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["args",{"_index":155,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["args[key",{"_index":213,"title":{},"body":{"classes/BaseModel.html":{}}}],["array",{"_index":376,"title":{},"body":{"injectables/ContextService.html":{},"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["artifacts",{"_index":936,"title":{},"body":{"index.html":{}}}],["atob(value",{"_index":415,"title":{},"body":{"classes/Encoding.html":{}}}],["authreq",{"_index":726,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["auto",{"_index":315,"title":{},"body":{"components/ContainerComponent.html":{}}}],["autocomplete",{"_index":819,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocompletemodule",{"_index":481,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":927,"title":{},"body":{"index.html":{}}}],["available",{"_index":964,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":287,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["basemodel",{"_index":196,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["basemodel:12",{"_index":248,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["basemodel:13",{"_index":249,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["basemodel:5",{"_index":247,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["basemodel:6",{"_index":250,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["baseurl",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":303,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["black",{"_index":454,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":237,"title":{},"body":{"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"classes/DayModel.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{}}}],["bootstrap",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["border",{"_index":580,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bottom",{"_index":463,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["browse",{"_index":962,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":419,"title":{},"body":{"classes/Encoding.html":{}}}],["build",{"_index":935,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":483,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["calc(#{$navbar",{"_index":566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caption",{"_index":453,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":448,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":485,"title":{},"body":{"modules/FeatureModule.html":{}}}],["category",{"_index":620,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["center",{"_index":562,"title":{},"body":{"components/HeaderComponent.html":{}}}],["change",{"_index":929,"title":{},"body":{"index.html":{}}}],["check",{"_index":955,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":487,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":475,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["cipher",{"_index":416,"title":{},"body":{"classes/Encoding.html":{}}}],["city",{"_index":900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":34,"title":{"classes/AppSettings.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":129,"title":{},"body":{"classes/AppSettings.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"overview.html":{}}}],["cli",{"_index":913,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["client_id",{"_index":409,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule_imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_containermodule",{"_index":319,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_declarations",{"_index":323,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_exports",{"_index":322,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_imports",{"_index":321,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_providers",{"_index":320,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_favoritesmodule",{"_index":465,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":468,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":466,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":467,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_forecastmodule",{"_index":528,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_declarations",{"_index":529,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":530,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":531,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_headermodule",{"_index":588,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_declarations",{"_index":590,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":589,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":591,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_searchmodule",{"_index":768,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_declarations",{"_index":771,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":770,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":769,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_sidenavmodule",{"_index":801,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":804,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":803,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":802,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":813,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_declarations",{"_index":814,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":815,"title":{},"body":{"modules/WeatherModule.html":{}}}],["code",{"_index":217,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/ITimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":918,"title":{},"body":{"index.html":{}}}],["color",{"_index":449,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["colorscheme",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colorscheme.light",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{}}}],["colortheme",{"_index":146,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["column",{"_index":314,"title":{},"body":{"components/ContainerComponent.html":{}}}],["command",{"_index":957,"title":{},"body":{"index.html":{}}}],["common.scss",{"_index":286,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/request",{"_index":338,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":340,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":342,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/services/application.service",{"_index":274,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":335,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":642,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["conditionsmodel",{"_index":222,"title":{"classes/ConditionsModel.html":{}},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["config",{"_index":794,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(`request",{"_index":738,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["const",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Encoding.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["constants/color",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/data",{"_index":369,"title":{},"body":{"injectables/ContextService.html":{}}}],["constants/panel",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":264,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{}}}],["constructor(args",{"_index":203,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["constructor(config",{"_index":792,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":153,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":178,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":749,"title":{},"body":{"components/SearchComponent.html":{}}}],["container",{"_index":258,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":260,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":259,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":343,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":344,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":594,"title":{},"body":{"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":595,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":596,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":346,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":806,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":807,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":348,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":43,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":77,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{}}}],["containermodule.forroot",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":358,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":324,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{}}}],["content",{"_index":301,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["context",{"_index":361,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextservice",{"_index":325,"title":{"injectables/ContextService.html":{}},"body":{"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"coverage.html":{}}}],["countries",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":629,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":603,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["countrymodel",{"_index":377,"title":{"classes/CountryModel.html":{}},"body":{"classes/CountryModel.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["coverage",{"_index":825,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":199,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["crypto",{"_index":413,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["currentconditions",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentdate",{"_index":543,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentroute",{"_index":261,"title":{},"body":{"components/ContainerComponent.html":{}}}],["d",{"_index":556,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dailyforecasts",{"_index":519,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["datasets",{"_index":368,"title":{},"body":{"injectables/ContextService.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":205,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["date.now",{"_index":734,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["day",{"_index":667,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["daymodel",{"_index":386,"title":{"classes/DayModel.html":{}},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["debouncetime",{"_index":755,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":763,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["decodebase64",{"_index":393,"title":{},"body":{"classes/Encoding.html":{}}}],["decoded",{"_index":426,"title":{},"body":{"classes/Encoding.html":{}}}],["decryptaes",{"_index":394,"title":{},"body":{"classes/Encoding.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":174,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IDictionary.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":67,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["dev",{"_index":924,"title":{},"body":{"index.html":{}}}],["development",{"_index":920,"title":{},"body":{"index.html":{}}}],["df144bdb3b49",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":313,"title":{},"body":{"components/ContainerComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":934,"title":{},"body":{"index.html":{}}}],["directory",{"_index":939,"title":{},"body":{"index.html":{}}}],["display",{"_index":296,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":938,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":756,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":489,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":949,"title":{},"body":{"index.html":{}}}],["ease",{"_index":585,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["eeee",{"_index":554,"title":{},"body":{"components/HeaderComponent.html":{}}}],["effectivedate",{"_index":621,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":622,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["elapsed",{"_index":737,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":617,"title":{},"body":{"interfaces/IGeoPosition.html":{}}}],["enc",{"_index":412,"title":{},"body":{"classes/Encoding.html":{}}}],["encodebase64",{"_index":395,"title":{},"body":{"classes/Encoding.html":{}}}],["encoded",{"_index":424,"title":{},"body":{"classes/Encoding.html":{}}}],["encoding",{"_index":391,"title":{"classes/Encoding.html":{}},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["encryptaes",{"_index":396,"title":{},"body":{"classes/Encoding.html":{}}}],["encrypted",{"_index":422,"title":{},"body":{"classes/Encoding.html":{}}}],["end",{"_index":948,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":623,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":624,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["englishname",{"_index":379,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["englishtype",{"_index":604,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["enumerations",{"_index":878,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":175,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Encoding.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":668,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["epochtime",{"_index":225,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["event",{"_index":278,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.ts",{"_index":651,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":281,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":547,"title":{},"body":{"components/HeaderComponent.html":{}}}],["execute",{"_index":945,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["extend",{"_index":557,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":224,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["f",{"_index":902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["failure",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":270,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["favorites",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":437,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":436,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":471,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":472,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":45,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":464,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{}}}],["favoritesroutes",{"_index":474,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":469,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{}}}],["featuremodule",{"_index":477,"title":{"modules/FeatureModule.html":{}},"body":{"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules.html":{}}}],["fieldsetmodule",{"_index":491,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":930,"title":{},"body":{"index.html":{}}}],["first",{"_index":440,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":643,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"index.html":{}}}],["flex",{"_index":297,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":655,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["foreach(key",{"_index":374,"title":{},"body":{"injectables/ContextService.html":{}}}],["forecast",{"_index":511,"title":{},"body":{"components/ForecastComponent.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast.component.html",{"_index":513,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":512,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":917,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":919,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":534,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":535,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":47,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodel",{"_index":517,"title":{"classes/ForecastModel.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["forecastmodule",{"_index":527,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{}}}],["forecastroutes",{"_index":537,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":532,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{}}}],["forecasts",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":775,"title":{},"body":{"modules/SearchModule.html":{}}}],["forroot",{"_index":331,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":332,"title":{},"body":{"modules/ContainerModule.html":{}}}],["fromstorage",{"_index":397,"title":{},"body":{"classes/Encoding.html":{}}}],["fromstorage(key",{"_index":403,"title":{},"body":{"classes/Encoding.html":{}}}],["fsevents",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":951,"title":{},"body":{"index.html":{}}}],["generate",{"_index":932,"title":{},"body":{"index.html":{}}}],["generated",{"_index":911,"title":{},"body":{"index.html":{}}}],["geoposition",{"_index":630,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/variables.html":{}}}],["getcurrentposition",{"_index":185,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getflag",{"_index":200,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["geticon",{"_index":201,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["getting",{"_index":909,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":148,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["gmtoffset",{"_index":663,"title":{},"body":{"interfaces/ITimeZone.html":{}}}],["go",{"_index":954,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":289,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":963,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":688,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":689,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":209,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"dependencies.html":{}}}],["guid.newguid",{"_index":216,"title":{},"body":{"classes/BaseModel.html":{}}}],["hasprecipitation",{"_index":226,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/DayModel.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["header",{"_index":540,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":542,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":541,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":49,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":345,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":598,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":592,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{}}}],["headers",{"_index":722,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["headline",{"_index":520,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":298,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":952,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":176,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/dictionary",{"_index":371,"title":{},"body":{"injectables/ContextService.html":{}}}],["helpers/search",{"_index":758,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":308,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":158,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://dataservice.accuweather.com",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.com/locations/v1",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.comcurrentconditions/v1",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://dataservice.accuweather.comforecasts/v1/daily/5day",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":926,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":337,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":154,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httpevent",{"_index":720,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":717,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":721,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":716,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":732,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":600,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"interfaces/IAdministrativeArea.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["icon",{"_index":388,"title":{},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{}}}],["iconditions",{"_index":234,"title":{"interfaces/IConditions.html":{}},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["iconphrase",{"_index":389,"title":{},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":382,"title":{"interfaces/ICountry.html":{}},"body":{"classes/CountryModel.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["id",{"_index":380,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{}}}],["iday",{"_index":390,"title":{"interfaces/IDay.html":{}},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["identifier",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["idictionary",{"_index":365,"title":{"interfaces/IDictionary.html":{}},"body":{"injectables/ContextService.html":{},"interfaces/IDictionary.html":{},"coverage.html":{}}}],["ielevation",{"_index":610,"title":{"interfaces/IElevation.html":{}},"body":{"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":521,"title":{"interfaces/IForecast.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["igeoposition",{"_index":139,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["iheadline",{"_index":523,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":626,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["image",{"_index":565,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imetric",{"_index":614,"title":{"interfaces/IMetric.html":{}},"body":{"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"coverage.html":{}}}],["imperial",{"_index":612,"title":{},"body":{"interfaces/IElevation.html":{}}}],["implements",{"_index":256,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./search/search.module').then(m",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":608,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":246,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["initcontext",{"_index":362,"title":{},"body":{"injectables/ContextService.html":{}}}],["injectable",{"_index":142,"title":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":796,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputevent",{"_index":654,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":791,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":493,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":280,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept",{"_index":713,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":715,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":339,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":712,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:10",{"_index":731,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:6",{"_index":714,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:7",{"_index":730,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:9",{"_index":718,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptors",{"_index":710,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":253,"title":{"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":601,"title":{},"body":{"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["isalias",{"_index":631,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["isdaylightsaving",{"_index":664,"title":{},"body":{"interfaces/ITimeZone.html":{}}}],["isdaytime",{"_index":227,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":649,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isearchresult",{"_index":656,"title":{"interfaces/ISearchResult.html":{}},"body":{"interfaces/ISearchResult.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["isfavorite",{"_index":644,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["isloading",{"_index":150,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":451,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["itemperature",{"_index":243,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["items",{"_index":561,"title":{},"body":{"components/HeaderComponent.html":{}}}],["itimezone",{"_index":635,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["iweather",{"_index":522,"title":{"interfaces/IWeather.html":{}},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["jquery",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":414,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["json.parse(decoded",{"_index":429,"title":{},"body":{"classes/Encoding.html":{}}}],["json.stringify(value",{"_index":434,"title":{},"body":{"classes/Encoding.html":{}}}],["justify",{"_index":300,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["karma",{"_index":947,"title":{},"body":{"index.html":{}}}],["key",{"_index":406,"title":{},"body":{"classes/Encoding.html":{},"interfaces/IDictionary.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["key).tostring",{"_index":421,"title":{},"body":{"classes/Encoding.html":{}}}],["key).tostring(enc.utf8",{"_index":418,"title":{},"body":{"classes/Encoding.html":{}}}],["keyfiltermodule",{"_index":495,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":442,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["languages",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["latitude",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/IGeoPosition.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":462,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{}}}],["level",{"_index":605,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":292,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":288,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":228,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["literal",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":915,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localizedname",{"_index":381,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["localizedtype",{"_index":606,"title":{},"body":{"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":229,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["localstorage.getitem(key",{"_index":423,"title":{},"body":{"classes/Encoding.html":{}}}],["localstorage.setitem(key",{"_index":431,"title":{},"body":{"classes/Encoding.html":{}}}],["location",{"_index":162,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationmodel",{"_index":641,"title":{"classes/LocationModel.html":{}},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["locationresolver",{"_index":341,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationtype",{"_index":883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/IGeoPosition.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.searchmodule",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":312,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":699,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{}}}],["map(event",{"_index":736,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["map(x",{"_index":706,"title":{},"body":{"guards/LocationResolver.html":{}}}],["margin",{"_index":304,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["matching",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":316,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maximum",{"_index":660,"title":{},"body":{"interfaces/ITemperature.html":{}}}],["measure",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":151,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":613,"title":{},"body":{"interfaces/IElevation.html":{}}}],["min",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":661,"title":{},"body":{"interfaces/ITemperature.html":{}}}],["miscellaneous",{"_index":877,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":555,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mobilelink",{"_index":230,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["mode.enum",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":141,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":198,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":385,"title":{},"body":{"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{}}}],["model.ts:11",{"_index":383,"title":{},"body":{"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{}}}],["model.ts:12",{"_index":207,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:13",{"_index":208,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:16",{"_index":236,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:17",{"_index":238,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:18",{"_index":239,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:19",{"_index":240,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:20",{"_index":241,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:21",{"_index":242,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:22",{"_index":244,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:23",{"_index":245,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/WeatherModel.html":{}}}],["model.ts:24",{"_index":235,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/LocationModel.html":{}}}],["model.ts:25",{"_index":674,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:26",{"_index":675,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:27",{"_index":676,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:28",{"_index":677,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:29",{"_index":678,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:30",{"_index":679,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:31",{"_index":680,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:32",{"_index":681,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:33",{"_index":682,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:34",{"_index":683,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:35",{"_index":684,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:36",{"_index":685,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:37",{"_index":686,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:38",{"_index":687,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:39",{"_index":673,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:5",{"_index":206,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:6",{"_index":204,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:9",{"_index":384,"title":{},"body":{"classes/CountryModel.html":{},"classes/DayModel.html":{}}}],["models/administrativearea",{"_index":636,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["models/autocomplete",{"_index":759,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/base",{"_index":251,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["models/conditions",{"_index":637,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/country",{"_index":638,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/day",{"_index":671,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["models/elevation",{"_index":618,"title":{},"body":{"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":639,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/geoposition",{"_index":140,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/headline",{"_index":524,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["models/metric",{"_index":615,"title":{},"body":{"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{}}}],["models/temperature",{"_index":252,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["models/timezone",{"_index":640,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/weather",{"_index":525,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":64,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["modules",{"_index":66,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":334,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":953,"title":{},"body":{"index.html":{}}}],["ms",{"_index":741,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["multi",{"_index":353,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":925,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":273,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":184,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":168,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":277,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(authreq",{"_index":728,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":735,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["nextoffsetchange",{"_index":665,"title":{},"body":{"interfaces/ITimeZone.html":{}}}],["ng",{"_index":922,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["ngoninit",{"_index":263,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":669,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["none",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":430,"title":{},"body":{"classes/Encoding.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{}}}],["number",{"_index":220,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/DayModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["object",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args)?.foreach(key",{"_index":211,"title":{},"body":{"classes/BaseModel.html":{}}}],["object.keys(datasets",{"_index":373,"title":{},"body":{"injectables/ContextService.html":{}}}],["observable",{"_index":697,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["of(null",{"_index":709,"title":{},"body":{"guards/LocationResolver.html":{}}}],["onchange",{"_index":363,"title":{},"body":{"injectables/ContextService.html":{},"components/HeaderComponent.html":{}}}],["oninit",{"_index":257,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":745,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":746,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":262,"title":{},"body":{"components/ContainerComponent.html":{}}}],["opacity",{"_index":455,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":133,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["originalevent",{"_index":652,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["out",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["output",{"_index":551,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":545,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":306,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":956,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":850,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":309,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":959,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelmode.push",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{}}}],["panelstate",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":285,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":157,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["params",{"_index":823,"title":{},"body":{"injectables/WeatherService.html":{}}}],["path",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["pathmatch",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":705,"title":{},"body":{"guards/LocationResolver.html":{}}}],["placeholder",{"_index":444,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["popper.js",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":460,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["preview",{"_index":916,"title":{},"body":{"index.html":{}}}],["previous",{"_index":447,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":291,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":480,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/autocomplete",{"_index":482,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":484,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":486,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":488,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":490,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":492,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":494,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":496,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":498,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":500,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":502,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":504,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":506,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":508,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":479,"title":{},"body":{"modules/FeatureModule.html":{}}}],["private",{"_index":147,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":940,"title":{},"body":{"index.html":{}}}],["production",{"_index":941,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":910,"title":{},"body":{"index.html":{}}}],["promise",{"_index":698,"title":{},"body":{"guards/LocationResolver.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":950,"title":{},"body":{"index.html":{}}}],["provide",{"_index":351,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseModel.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${code}/shiny/${size}.png",{"_index":219,"title":{},"body":{"classes/BaseModel.html":{}}}],["providers.weather.icons}/${code}.svg",{"_index":221,"title":{},"body":{"classes/BaseModel.html":{}}}],["public",{"_index":132,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["q",{"_index":824,"title":{},"body":{"injectables/WeatherService.html":{}}}],["query",{"_index":653,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":497,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":582,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rank",{"_index":632,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{}}}],["readonly",{"_index":149,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{}}}],["redirectto",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":958,"title":{},"body":{"index.html":{}}}],["region",{"_index":633,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["reload",{"_index":928,"title":{},"body":{"index.html":{}}}],["representative",{"_index":443,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":719,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":727,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.headers",{"_index":723,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":739,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["requestinterceptor",{"_index":326,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["require",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["resolve",{"_index":691,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":693,"title":{},"body":{"guards/LocationResolver.html":{}}}],["responseinterceptor",{"_index":327,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["result",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":355,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["returns",{"_index":163,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":563,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ripplemodule",{"_index":499,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":696,"title":{},"body":{"guards/LocationResolver.html":{}}}],["router",{"_index":265,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":359,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":476,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":538,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":599,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":782,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":112,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{}}}],["routing.module.ts",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["run",{"_index":914,"title":{},"body":{"index.html":{}}}],["running",{"_index":942,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":173,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":700,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["scaffolding",{"_index":931,"title":{},"body":{"index.html":{}}}],["scheme.enum",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["scheme.enum.ts",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["screen",{"_index":569,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":744,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":743,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":777,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":778,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["searchcomponent",{"_index":51,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":767,"title":{"modules/SearchModule.html":{}},"body":{"modules/SearchModule.html":{},"modules.html":{}}}],["searchroutes",{"_index":781,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":772,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{}}}],["searchtext",{"_index":747,"title":{},"body":{"components/SearchComponent.html":{}}}],["second",{"_index":445,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["secret",{"_index":410,"title":{},"body":{"classes/Encoding.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":923,"title":{},"body":{"index.html":{}}}],["server",{"_index":921,"title":{},"body":{"index.html":{}}}],["services/application.service",{"_index":701,"title":{},"body":{"guards/LocationResolver.html":{},"components/SidenavComponent.html":{}}}],["services/context.service",{"_index":349,"title":{},"body":{"modules/ContainerModule.html":{}}}],["services/weather.service",{"_index":350,"title":{},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{}}}],["set('content",{"_index":724,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["sets.enum",{"_index":370,"title":{},"body":{"injectables/ContextService.html":{}}}],["sets.enum.ts",{"_index":882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":177,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":785,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":784,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":131,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":135,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":136,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":137,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":138,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":53,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":152,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setuserlocation(location",{"_index":160,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["severity",{"_index":625,"title":{},"body":{"interfaces/IHeadline.html":{}}}],["shadow",{"_index":558,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":318,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":790,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":789,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":800,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":797,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":55,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":347,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/SidenavModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["size",{"_index":218,"title":{},"body":{"classes/BaseModel.html":{},"components/HeaderComponent.html":{}}}],["slide",{"_index":441,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"classes/ForecastModel.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"classes/WeatherModel.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":670,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["space",{"_index":302,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["spec\\.ts",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast.module.ts",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":357,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":255,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:12",{"_index":269,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:13",{"_index":271,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:14",{"_index":266,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:25",{"_index":268,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":272,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":329,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:38",{"_index":333,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":478,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":597,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":539,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":546,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":549,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":550,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":593,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":783,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":787,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":786,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":788,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":793,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":795,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":805,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":473,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":435,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":439,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":438,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":470,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":536,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":510,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":515,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":514,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":533,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":780,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":742,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:14",{"_index":754,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:15",{"_index":750,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:17",{"_index":751,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:25",{"_index":752,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:27",{"_index":753,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":774,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather.component.ts",{"_index":808,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":812,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":811,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":816,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":130,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts",{"_index":607,"title":{},"body":{"interfaces/IDictionary.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts:3",{"_index":609,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["src/common/helpers/encoding.ts",{"_index":392,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["src/common/helpers/encoding.ts:18",{"_index":408,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:5",{"_index":399,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:6",{"_index":400,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:7",{"_index":401,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:8",{"_index":402,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:9",{"_index":404,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/search",{"_index":650,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/request",{"_index":711,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":729,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":602,"title":{},"body":{"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":657,"title":{},"body":{"interfaces/ISearchResult.html":{},"coverage.html":{}}}],["src/common/models/base",{"_index":197,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":223,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":378,"title":{},"body":{"classes/CountryModel.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":387,"title":{},"body":{"classes/DayModel.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":611,"title":{},"body":{"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":518,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":616,"title":{},"body":{"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":619,"title":{},"body":{"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":627,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":646,"title":{},"body":{"interfaces/IMetric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":659,"title":{},"body":{"interfaces/ITemperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":662,"title":{},"body":{"interfaces/ITimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":666,"title":{},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":690,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:11",{"_index":695,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:9",{"_index":692,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":145,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:13",{"_index":172,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":169,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":165,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":170,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":171,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":156,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:25",{"_index":166,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:30",{"_index":161,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/context.service.ts",{"_index":360,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{}}}],["src/common/services/context.service.ts:11",{"_index":367,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:8",{"_index":366,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:9",{"_index":364,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/weather.service.ts",{"_index":818,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:11",{"_index":821,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:9",{"_index":820,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":733,"title":{"index.html":{}},"body":{"interceptors/ResponseInterceptor.html":{}}}],["state.enum",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":330,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{}}}],["stored",{"_index":937,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":167,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"components/SearchComponent.html":{}}}],["subscribe",{"_index":283,"title":{},"body":{"components/ContainerComponent.html":{}}}],["success",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":748,"title":{},"body":{"components/SearchComponent.html":{}}}],["super(args",{"_index":254,"title":{},"body":{"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["support",{"_index":960,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":961,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":757,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":764,"title":{},"body":{"components/SearchComponent.html":{}}}],["t",{"_index":405,"title":{},"body":{"classes/Encoding.html":{}}}],["table",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":501,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tel",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":231,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/WeatherModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":944,"title":{},"body":{"index.html":{}}}],["tests",{"_index":943,"title":{},"body":{"index.html":{}}}],["text",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IHeadline.html":{}}}],["third",{"_index":446,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.application",{"_index":704,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.isloading",{"_index":282,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.isloading$.next(true",{"_index":702,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.sidenavstate",{"_index":275,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.userlocation",{"_index":703,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.args.sidenavstate",{"_index":182,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.colortheme",{"_index":179,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.context[key",{"_index":375,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.created",{"_index":214,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.currentdate",{"_index":553,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.currentroute",{"_index":279,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.dailyforecasts",{"_index":526,"title":{},"body":{"classes/ForecastModel.html":{},"interfaces/IForecast.html":{}}}],["this.datasets",{"_index":645,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["this.decodebase64(encoded",{"_index":427,"title":{},"body":{"classes/Encoding.html":{}}}],["this.decryptaes(encrypted",{"_index":425,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encodebase64(typeof",{"_index":433,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encryptaes",{"_index":432,"title":{},"body":{"classes/Encoding.html":{}}}],["this.getuserlocation",{"_index":183,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.http.get(providers.weather.autocomplete",{"_index":822,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(providers.weather.endpoints.locations",{"_index":707,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.initcontext",{"_index":372,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.isloading",{"_index":284,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.onchange.emit",{"_index":552,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.primengconfig.ripple",{"_index":509,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.router.events.subscribe",{"_index":276,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchtext",{"_index":760,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext$.next(event.query",{"_index":766,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext$.pipe",{"_index":762,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setuserlocation",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setuserlocation(default_location",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavmode",{"_index":180,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":181,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.suggestions",{"_index":761,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.uid",{"_index":215,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.userlocation",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.userlocation$.next(location",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.weather.autocomplete(text",{"_index":765,"title":{},"body":{"components/SearchComponent.html":{}}}],["this[key",{"_index":212,"title":{},"body":{"classes/BaseModel.html":{}}}],["timezone",{"_index":634,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmodule",{"_index":503,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglebuttonmodule",{"_index":505,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":544,"title":{},"body":{"components/HeaderComponent.html":{}}}],["took",{"_index":740,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["tooltipmodule",{"_index":507,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":290,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostorage",{"_index":398,"title":{},"body":{"classes/Encoding.html":{}}}],["tostorage(key",{"_index":407,"title":{},"body":{"classes/Encoding.html":{}}}],["transition",{"_index":584,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":581,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":354,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":210,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":428,"title":{},"body":{"classes/Encoding.html":{}}}],["uid",{"_index":202,"title":{},"body":{"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{}}}],["unit",{"_index":647,"title":{},"body":{"interfaces/IMetric.html":{},"index.html":{}}}],["unittype",{"_index":648,"title":{},"body":{"interfaces/IMetric.html":{}}}],["use",{"_index":933,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":352,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":134,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["usevalue",{"_index":356,"title":{},"body":{"modules/ContainerModule.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/LocationModel.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":971,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":658,"title":{},"body":{"interfaces/ISearchResult.html":{},"index.html":{}}}],["via",{"_index":946,"title":{},"body":{"index.html":{}}}],["void",{"_index":164,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather.component.html",{"_index":810,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":809,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather.component",{"_index":817,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.module",{"_index":779,"title":{},"body":{"modules/SearchModule.html":{}}}],["weathercomponent",{"_index":57,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":232,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["weathermodel",{"_index":672,"title":{"classes/WeatherModel.html":{}},"body":{"interfaces/IWeather.html":{},"classes/WeatherModel.html":{},"coverage.html":{}}}],["weathermodule",{"_index":773,"title":{"modules/WeatherModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}}}],["weatherservice",{"_index":328,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weathertext",{"_index":233,"title":{},"body":{"classes/ConditionsModel.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":450,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":310,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":516,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":708,"title":{},"body":{"guards/LocationResolver.html":{}}}],["y",{"_index":307,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["yes",{"_index":159,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/ConditionsModel.html":{},"modules/ContainerModule.html":{},"classes/CountryModel.html":{},"classes/DayModel.html":{},"classes/Encoding.html":{},"classes/ForecastModel.html":{},"classes/LocationModel.html":{},"classes/WeatherModel.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorScheme             } from '@constants/color-scheme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ContainerModule.forRoot({\n      colorScheme: ColorScheme.Light,\n      sidenavMode: PanelMode.Push,\n      sidenavState: PanelState.Hide,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'search', loadChildren: () => \"import('./search/search.module').then(m => m.SearchModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'search' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                colorScheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorScheme  } from '@constants/color-scheme.enum'\nimport { PanelMode    } from '@constants/panel-mode.enum'\nimport { PanelState   } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public colorScheme ?: ColorScheme ;\n  public sidenavMode ?: PanelMode   ;\n  public sidenavState?: PanelState  ;\n  public userLocation?: IGeoPosition;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colorTheme\n                            \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                isLoading$\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(location: IGeoPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                IGeoPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colorTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject          } from 'rxjs'\nimport { HttpClient       } from '@angular/common/http'\nimport { Injectable       } from '@angular/core'\nimport { ColorScheme       } from '@constants/color-scheme.enum'\nimport { PanelMode        } from '@constants/panel-mode.enum'\nimport { PanelState       } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION } from '@env/environment'\nimport { AppSettings      } from '@helpers/app-settings'\nimport { IGeoPosition      } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly userLocation$: Subject = new Subject();\n  public readonly isLoading$: Subject = new Subject();\n  public colorTheme  : ColorScheme ;\n  public sidenavMode : PanelMode  ;\n  public sidenavState: PanelState ;\n  public userLocation: IGeoPosition;\n  constructor(private http: HttpClient, private args?: AppSettings) {\n    this.colorTheme = ColorScheme.Light;\n    this.sidenavMode = PanelMode.Push;\n    this.sidenavState = this.args.sidenavState;\n    this.getUserLocation();\n  }\n  private getUserLocation = () => navigator.geolocation\n    .getCurrentPosition(\n      (success) => this.setUserLocation({ latitude: success.coords.latitude, longitude: success.coords.longitude }),\n      (failure) => this.setUserLocation(DEFAULT_LOCATION)\n    );\n  private setUserLocation(location: IGeoPosition) {\n    this.userLocation = location;\n    this.userLocation$.next(location);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Guid      } from 'guid-ts'\nimport { providers } from '@env/environment'\n\nexport class BaseModel {\n  public created: Date         ;\n  public uid    : Guid | string;\n  constructor(args?: any) {\n    Object.keys(args)?.forEach(key => this[key] ? this[key] = this[key] ?? args[key] : {});\n    this.created = new Date();\n    this.uid = Guid.newGuid();\n  }\n  public getFlag = (code: string, size: string) => `${providers.countryFlags.baseUrl}/${code}/shiny/${size}.png`;\n  public getIcon = (code: number) => `${providers.weather.icons}/${code}.svg`;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConditionsModel.html":{"url":"classes/ConditionsModel.html","title":"class - ConditionsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConditionsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITemperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel   } from '@models/base-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  epochTime               ?: number     ;\n  hasPrecipitation        ?: boolean    ;\n  isDayTime               ?: boolean    ;\n  link                    ?: string     ;\n  localObservationDateTime?: Date       ;\n  mobileLink              ?: string     ;\n  temperature             ?: ITemperature;\n  weatherIcon             ?: number     ;\n  weatherText             ?: string     ;\n}\nexport class ConditionsModel extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : ITemperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component         , OnInit } from '@angular/core'\nimport { NavigationEnd     , Router } from '@angular/router'                     ;\nimport { ApplicationService         } from '@common/services/application.service'\nimport { PanelState                 } from '@constants/panel-state.enum'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string         ;\n  public isLoading   : boolean = false;\n  public sidenavState: PanelState     ;\n  constructor(private application: ApplicationService, private router: Router) {\n    this.sidenavState = this.application.sidenavState;\n    this.router.events.subscribe({\n      next: event =>\n        this.currentRoute = !(event instanceof NavigationEnd) ? this.currentRoute :\n          `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n    this.application.isLoading$\n      .subscribe({ next: value => this.isLoading = value });\n  }\n  ngOnInit() { }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_declarations\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nForecastComponent->ContainerModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nContainerModule->ForecastComponent \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ContextService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                             } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule         } from '@angular/core'\nimport { RequestInterceptor                       } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                      } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                         } from '@common/resolvers/location.resolver'\nimport { ApplicationService                       } from '@common/services/application.service'\nimport { ContainerRoutingModule                   } from '@container/container-routing.module'\nimport { ContainerComponent                       } from '@container/container.component'\nimport { HeaderModule                             } from '@container/header/header.module'\nimport { SidenavModule                            } from '@container/sidenav/sidenav.module'\nimport { AppSettings                              } from '@helpers/app-settings'\nimport { ContextService                           } from '@services/context.service'\nimport { WeatherService                           } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor, multi: true },\n    ApplicationService,\n    LocationResolver  ,\n    ContextService    ,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContextService.html":{"url":"injectables/ContextService.html","title":"injectable - ContextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/context.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                initContext\n                            \n                            \n                                    Public\n                                    Readonly\n                                onChange$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            onChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject     } from 'rxjs'\nimport { Injectable  } from '@angular/core'\nimport { DataSets    } from '@constants/data-sets.enum'\nimport { IDictionary } from '@helpers/dictionary'\n\n@Injectable()\nexport class ContextService {\n  private readonly context: IDictionary = {};\n  public readonly onChange$: Subject = new Subject();\n  constructor() { this.initContext(); }\n  private initContext = () =>\n    Object.keys(DataSets)\n      .forEach(key => this.context[key] = new Array());\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountryModel.html":{"url":"classes/CountryModel.html","title":"class - CountryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  englishName  ?: string;\n  id           ?: string;\n  localizedName?: string;\n}\nexport class CountryModel extends BaseModel {\n  public englishName  : string;\n  public id           : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DayModel.html":{"url":"classes/DayModel.html","title":"class - DayModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DayModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  hasPrecipitation?: boolean;\n  icon            ?: number ;\n  iconPhrase      ?: string ;\n}\nexport class DayModel extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encoding.html":{"url":"classes/Encoding.html","title":"class - Encoding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encoding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/encoding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decodeBase64\n                            \n                            \n                                    Static\n                                decryptAES\n                            \n                            \n                                    Static\n                                encodeBase64\n                            \n                            \n                                    Static\n                                encryptAES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromStorage\n                            \n                            \n                                    Static\n                                toStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decryptAES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encryptAES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromStorage(key: string, type?)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:9\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toStorage(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CLIENT_ID as secret } from '@env/environment';\nimport { AES, enc } from 'crypto-js';\n\nexport class Encoding {\n  public static decodeBase64 = (value: string): string => atob(value);\n  public static decryptAES = (cipher: string, key: string = secret): string => AES.decrypt(cipher, key).toString(enc.Utf8);\n  public static encodeBase64 = (value: string): string => btoa(value);\n  public static encryptAES = (value: string, key: string = secret): string => AES.encrypt(value, key).toString();\n  public static fromStorage(key: string, type?: new () => T): T {\n    const encrypted: string = localStorage.getItem(key);\n    if (encrypted) {\n      const encoded: string = this.decryptAES(encrypted);\n      const decoded: string = this.decodeBase64(encoded);\n      return typeof (type) == 'string' ? decoded : JSON.parse(decoded);\n    }\n    return null;\n  }\n  public static toStorage(key: string, value: T) {\n    localStorage.setItem(key, this.encryptAES(\n      this.encodeBase64(typeof (value) == 'string'\n        ? value\n        : JSON.stringify(value))));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nForecastComponent->FavoritesModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nFavoritesModule->ForecastComponent \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForecastModel.html":{"url":"classes/ForecastModel.html","title":"class - ForecastModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForecastModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dailyForecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dailyForecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IWeather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IHeadline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IHeadline } from '@models/headline-model'\nimport { IWeather  } from '@models/weather-model'\n\nexport interface IForecast {\n  dailyForecasts?: IWeather [];\n  headline      ?: IHeadline  ;\n}\nexport class ForecastModel extends BaseModel {\n  public dailyForecasts: IWeather [];\n  public headline      : IHeadline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.dailyForecasts = this.dailyForecasts ?? new Array();\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_declarations\n\n\n\ncluster_ForecastModule_exports\n\n\n\ncluster_ForecastModule_imports\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nForecastComponent->ForecastModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nForecastModule->ForecastComponent \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForecastRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public onChange: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav = () => this.onChange.emit();\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  {{this.currentDate | date: 'EEEE MMMM d, y'}}\n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-date {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      display: flex;\n      align-items: center;\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites        {{this.currentDate | date: \\'EEEE MMMM d, y\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nForecastComponent->HeaderModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nHeaderModule->ForecastComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        countryId\n                                \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        englishType\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        level\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        localizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryId\n                                    \n                                \n                                \n                                    \n                                        countryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishType\n                                    \n                                \n                                \n                                    \n                                        englishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedType\n                                    \n                                \n                                \n                                    \n                                        localizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAdministrativeArea {\n  countryId?:     string;\n  englishName?:   string;\n  englishType?:   string;\n  id?:            string;\n  level?:         number;\n  localizedName?: string;\n  localizedType?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        epochTime\n                                \n                                \n                                            Optional\n                                        hasPrecipitation\n                                \n                                \n                                            Optional\n                                        isDayTime\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        localObservationDateTime\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        temperature\n                                \n                                \n                                            Optional\n                                        weatherIcon\n                                \n                                \n                                            Optional\n                                        weatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        epochTime\n                                    \n                                \n                                \n                                    \n                                        epochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        hasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDayTime\n                                    \n                                \n                                \n                                    \n                                        isDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        localObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherText\n                                    \n                                \n                                \n                                    \n                                        weatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel   } from '@models/base-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  epochTime               ?: number     ;\n  hasPrecipitation        ?: boolean    ;\n  isDayTime               ?: boolean    ;\n  link                    ?: string     ;\n  localObservationDateTime?: Date       ;\n  mobileLink              ?: string     ;\n  temperature             ?: ITemperature;\n  weatherIcon             ?: number     ;\n  weatherText             ?: string     ;\n}\nexport class ConditionsModel extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : ITemperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  englishName  ?: string;\n  id           ?: string;\n  localizedName?: string;\n}\nexport class CountryModel extends BaseModel {\n  public englishName  : string;\n  public id           : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasPrecipitation\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        iconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        hasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconPhrase\n                                    \n                                \n                                \n                                    \n                                        iconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  hasPrecipitation?: boolean;\n  icon            ?: number ;\n  iconPhrase      ?: string ;\n}\nexport class DayModel extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDictionary.html":{"url":"interfaces/IDictionary.html","title":"interface - IDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/dictionary.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BaseModel[]\n\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/dictionary.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model';\n\nexport interface IDictionary {\n  [key: string]: BaseModel[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imperial\n                                \n                                \n                                            Optional\n                                        metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imperial\n                                    \n                                \n                                \n                                    \n                                        imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metric\n                                    \n                                \n                                \n                                    \n                                        metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMetric } from '@models/metric-model'\n\nexport interface IElevation {\n  imperial?: IMetric;\n  metric  ?: IMetric;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dailyForecasts\n                                \n                                \n                                            Optional\n                                        headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dailyForecasts\n                                    \n                                \n                                \n                                    \n                                        dailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headline\n                                    \n                                \n                                \n                                    \n                                        headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IHeadline } from '@models/headline-model'\nimport { IWeather  } from '@models/weather-model'\n\nexport interface IForecast {\n  dailyForecasts?: IWeather [];\n  headline      ?: IHeadline  ;\n}\nexport class ForecastModel extends BaseModel {\n  public dailyForecasts: IWeather [];\n  public headline      : IHeadline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.dailyForecasts = this.dailyForecasts ?? new Array();\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        elevation\n                                \n                                \n                                            Optional\n                                        latitude\n                                \n                                \n                                            Optional\n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        elevation\n                                    \n                                \n                                \n                                    \n                                        elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  elevation?: IElevation;\n  latitude ?: number    ;\n  longitude?: number    ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        category\n                                \n                                \n                                            Optional\n                                        effectiveDate\n                                \n                                \n                                            Optional\n                                        effectiveEpochDate\n                                \n                                \n                                            Optional\n                                        endDate\n                                \n                                \n                                            Optional\n                                        endEpochDate\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        severity\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        effectiveDate\n                                    \n                                \n                                \n                                    \n                                        effectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        effectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        effectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endEpochDate\n                                    \n                                \n                                \n                                    \n                                        endEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        severity\n                                    \n                                \n                                \n                                    \n                                        severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHeadline {\n  category          ?: string;\n  effectiveDate     ?: Date  ;\n  effectiveEpochDate?: number;\n  endDate           ?: Date  ;\n  endEpochDate      ?: number;\n  link              ?: string;\n  mobileLink        ?: string;\n  severity          ?: number;\n  text              ?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        administrativeArea\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        dataSets\n                                \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        geoPosition\n                                \n                                \n                                            Optional\n                                        isAlias\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        rank\n                                \n                                \n                                            Optional\n                                        region\n                                \n                                \n                                            Optional\n                                        timeZone\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        administrativeArea\n                                    \n                                \n                                \n                                    \n                                        administrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataSets\n                                    \n                                \n                                \n                                    \n                                        dataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoPosition\n                                    \n                                \n                                \n                                    \n                                        geoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAlias\n                                    \n                                \n                                \n                                    \n                                        isAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeZone\n                                    \n                                \n                                \n                                    \n                                        timeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAdministrativeArea               } from '@models/administrativeArea-model'\nimport { BaseModel                         } from '@models/base-model'\nimport { ConditionsModel                   } from '@models/conditions-model'\nimport { ICountry           , CountryModel } from '@models/country-model'\nimport { ForecastModel                     } from '@models/forecast-model'\nimport { IGeoPosition                      } from '@models/geoPosition-model'\nimport { ITimeZone                         } from '@models/timeZone-model'\n\nexport interface ILocation {\n  administrativeArea?: IAdministrativeArea;\n  country           ?: ICountry           ;\n  dataSets          ?: string[]           ;\n  englishName       ?: string             ;\n  geoPosition       ?: IGeoPosition       ;\n  isAlias           ?: boolean            ;\n  key               ?: string             ;\n  localizedName     ?: string             ;\n  rank              ?: number             ;\n  region            ?: ICountry           ;\n  timeZone          ?: ITimeZone          ;\n  type              ?: string             ;\n}\nexport class LocationModel extends BaseModel {\n  public administrativeArea: IAdministrativeArea;\n  public conditions        : ConditionsModel    ;\n  public country           : CountryModel       ;\n  public dataSets          : string[]           ;\n  public englishName       : string             ;\n  public flag              : string             ;\n  public forecast          : ForecastModel      ;\n  public geoPosition       : IGeoPosition       ;\n  public isAlias           : boolean            ;\n  public isFavorite        : boolean            ;\n  public key               : string             ;\n  public localizedName     : string             ;\n  public rank              : number             ;\n  public region            : CountryModel       ;\n  public timeZone          : ITimeZone          ;\n  public type              : string             ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitType\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitType\n                                    \n                                \n                                \n                                    \n                                        unitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMetric {\n  unit    ?: string;\n  unitType?: number;\n  value   ?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchResult.html":{"url":"interfaces/ISearchResult.html","title":"interface - ISearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        administrativeArea\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        rank\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        administrativeArea\n                                    \n                                \n                                \n                                    \n                                        administrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAdministrativeArea } from '@models/administrativeArea-model'\n\nexport interface ISearchResult {\n  administrativeArea?: IAdministrativeArea;\n  country           ?: IAdministrativeArea;\n  key               ?: string             ;\n  localizedName     ?: string             ;\n  rank              ?: number             ;\n  type              ?: string             ;\n  version           ?: number             ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        maximum\n                                \n                                \n                                            Optional\n                                        minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maximum\n                                    \n                                \n                                \n                                    \n                                        maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimum\n                                    \n                                \n                                \n                                    \n                                        minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IMetric } from '@models/metric-model'\n\nexport interface ITemperature {\n  maximum?: IMetric;\n  minimum?: IMetric;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        code\n                                \n                                \n                                            Optional\n                                        gmtOffset\n                                \n                                \n                                            Optional\n                                        isDaylightSaving\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gmtOffset\n                                    \n                                \n                                \n                                    \n                                        gmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        isDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        nextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITimeZone {\n  code            ?: string ;\n  gmtOffset       ?: number ;\n  isDaylightSaving?: boolean;\n  name            ?: string ;\n  nextOffsetChange?: Date   ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        day\n                                \n                                \n                                            Optional\n                                        epochDate\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        night\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        epochDate\n                                    \n                                \n                                \n                                    \n                                        epochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                    \n                                \n                                \n                                    \n                                        night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel    } from '@models/base-model'\nimport { IDay         } from '@models/day-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  date       ?: Date        ;\n  day        ?: IDay        ;\n  epochDate  ?: number      ;\n  link       ?: string      ;\n  mobileLink ?: string      ;\n  night      ?: IDay        ;\n  sources    ?: string[]    ;\n  temperature?: ITemperature;\n}\nexport class WeatherModel extends BaseModel {\n  public date       : Date        ;\n  public day        : IDay        ;\n  public epochDate  : number      ;\n  public link       : string      ;\n  public mobileLink : string      ;\n  public night      : IDay        ;\n  public sources    : string[]    ;\n  public temperature: ITemperature;\n  constructor(args?: IWeather) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationModel.html":{"url":"classes/LocationModel.html","title":"class - LocationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                flag\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConditionsModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CountryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ForecastModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CountryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IAdministrativeArea               } from '@models/administrativeArea-model'\nimport { BaseModel                         } from '@models/base-model'\nimport { ConditionsModel                   } from '@models/conditions-model'\nimport { ICountry           , CountryModel } from '@models/country-model'\nimport { ForecastModel                     } from '@models/forecast-model'\nimport { IGeoPosition                      } from '@models/geoPosition-model'\nimport { ITimeZone                         } from '@models/timeZone-model'\n\nexport interface ILocation {\n  administrativeArea?: IAdministrativeArea;\n  country           ?: ICountry           ;\n  dataSets          ?: string[]           ;\n  englishName       ?: string             ;\n  geoPosition       ?: IGeoPosition       ;\n  isAlias           ?: boolean            ;\n  key               ?: string             ;\n  localizedName     ?: string             ;\n  rank              ?: number             ;\n  region            ?: ICountry           ;\n  timeZone          ?: ITimeZone          ;\n  type              ?: string             ;\n}\nexport class LocationModel extends BaseModel {\n  public administrativeArea: IAdministrativeArea;\n  public conditions        : ConditionsModel    ;\n  public country           : CountryModel       ;\n  public dataSets          : string[]           ;\n  public englishName       : string             ;\n  public flag              : string             ;\n  public forecast          : ForecastModel      ;\n  public geoPosition       : IGeoPosition       ;\n  public isAlias           : boolean            ;\n  public isFavorite        : boolean            ;\n  public key               : string             ;\n  public localizedName     : string             ;\n  public rank              : number             ;\n  public region            : CountryModel       ;\n  public timeZone          : ITimeZone          ;\n  public type              : string             ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable            , of      } from 'rxjs'\nimport { map                             } from 'rxjs/operators'\nimport { HttpClient                      } from '@angular/common/http'\nimport { Injectable                      } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ApplicationService              } from '@services/application.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    this.application.isLoading$.next(true);\n\n    return !this.application.userLocation\n      ? this.application\n        .userLocation$\n        .pipe(\n          map(x => {\n            // this.http.get(providers.weather.endpoints.locations)\n            return x;\n          })) : of(null);\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const headers = req.headers\n      .set('Content-Type', 'application/json');\n    const authReq = req.clone({ headers });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n          const elapsed = Date.now() - started;\n          console.log(`Request for ${req.urlWithParams} took ${elapsed} ms.`);\n        }\n        return event;\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Private\n                                    Optional\n                                searchText$\n                            \n                            \n                                    Public\n                                    Optional\n                                suggestions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            suggestions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable        , Subject                         } from 'rxjs'\nimport { debounceTime      , distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component         , OnInit                          } from '@angular/core'\nimport { ISearchEvent                                        } from '@helpers/search-event'\nimport { ISearchResult                                       } from '@models/autoComplete-model'\nimport { WeatherService                                      } from '@services/weather.service'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  private searchText$?: Subject;\n  public suggestions$?: Observable;\n  constructor(private weather: WeatherService) { }\n  ngOnInit() {\n    this.searchText$ = new Subject();\n    this.suggestions$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text))\n    );\n  }\n  public onSearch = (event: ISearchEvent) =>\n    this.searchText$.next(event.query);\n  public onSelect = (value: ISearchEvent) => null;\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{result}}\n        \n      \n    \n  \n  \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .app-search {\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{result}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SearchModule_declarations\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nForecastComponent->SearchModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nSearchModule->ForecastComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FormsModule         } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\nimport { WeatherModule       } from '@weather/weather.module'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, SearchRoutingModule, FormsModule, WeatherModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { ApplicationService } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_imports\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_declarations\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nForecastComponent->SidenavModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nSidenavModule->ForecastComponent \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherModel.html":{"url":"classes/WeatherModel.html","title":"class - WeatherModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDay\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITemperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel    } from '@models/base-model'\nimport { IDay         } from '@models/day-model'\nimport { ITemperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  date       ?: Date        ;\n  day        ?: IDay        ;\n  epochDate  ?: number      ;\n  link       ?: string      ;\n  mobileLink ?: string      ;\n  night      ?: IDay        ;\n  sources    ?: string[]    ;\n  temperature?: ITemperature;\n}\nexport class WeatherModel extends BaseModel {\n  public date       : Date        ;\n  public day        : IDay        ;\n  public epochDate  : number      ;\n  public link       : string      ;\n  public mobileLink : string      ;\n  public night      : IDay        ;\n  public sources    : string[]    ;\n  public temperature: ITemperature;\n  constructor(args?: IWeather) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nForecastComponent\n\nForecastComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nForecastComponent->WeatherModule\n\n\n\n\n\nForecastComponent \n\nForecastComponent \n\nForecastComponent  -->\n\nWeatherModule->ForecastComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ForecastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule     } from '@angular/common'\nimport { NgModule         } from '@angular/core'\nimport { WeatherComponent } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable    } from 'rxjs'\nimport { HttpClient    } from '@angular/common/http'\nimport { Injectable    } from '@angular/core'\nimport { providers     } from '@env/environment'\nimport { AppSettings   } from '@helpers/app-settings'\nimport { ISearchResult } from '@models/autoComplete-model'\n\n@Injectable()\nexport class WeatherService {\n  constructor(private http: HttpClient, private args?: AppSettings) { }\n  public autoComplete = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } });\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/dictionary.ts\n            \n            interface\n            IDictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/encoding.ts\n            \n            class\n            Encoding\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            ISearchResult\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            ConditionsModel\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            CountryModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            DayModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            ForecastModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            LocationModel\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            WeatherModel\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/services/context.service.ts\n            \n            injectable\n            ContextService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.6.0\n        \n            crypto-js : ^4.0.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorScheme   (src/.../color-scheme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-scheme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorScheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CLIENT_ID   (src/.../environment.prod.ts)\n                        \n                        \n                            CLIENT_ID   (src/.../environment.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude: 32.109333,\n  longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey           : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                             ,\n    autocomplete     : 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl          : 'http://dataservice.accuweather.com'                                       ,\n    currentconditions: 'http://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts        : 'http://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition      : 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons            : 'https://www.accuweather.com/images/weathericons'                          ,\n    locations        : 'http://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  latitude: 32.109333,\n  longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey           : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                             ,\n    autocomplete     : 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl          : 'http://dataservice.accuweather.com'                                       ,\n    currentconditions: 'http://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts        : 'http://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition      : 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons            : 'https://www.accuweather.com/images/weathericons'                          ,\n    locations        : 'http://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
