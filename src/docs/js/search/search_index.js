var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdministrativeArea.html",[0,0.098,1,2.201]],["body/classes/AdministrativeArea.html",[0,0.091,1,2.873,2,1.269,3,0.113,4,0.099,5,0.099,6,5.778,7,0.817,8,1.277,9,1.545,10,0.318,11,0.781,12,1.395,13,5.61,14,4.034,15,5.61,16,5.61,17,3.592,18,5.61,19,2.08,20,2.216,21,1.139,22,0.829,23,0.732,24,1.231,25,3.592,26,1.413,27,3.447,28,0.945,29,0.014,30,0.535,31,1.319,32,1.269,33,1.537,34,3.204,35,3.204,36,2.887,37,1.703,38,2.462,39,2.462,40,1.222,41,2.711,42,1.548,43,1.427,44,1.548,45,1.548,46,1.548,47,0.128,48,0.879,49,0.759,50,0.159,51,0.354,52,0.912,53,0.006,54,0.009,55,0.006]],["title/components/AppComponent.html",[56,1.173,57,1.733]],["body/components/AppComponent.html",[0,0.107,3,0.133,4,0.117,5,0.117,10,0.374,11,0.872,21,1.102,22,0.46,23,1.286,26,1.061,29,0.014,33,0.828,47,0.15,50,0.133,53,0.007,54,0.01,55,0.007,56,1.921,57,3.026,58,1.985,59,2.288,60,2.288,61,2.288,62,2.288,63,3.767,64,2.288,65,4.172,66,3.969,67,5.764,68,3.044,69,6.477,70,3.044,71,5.764,72,6.477,73,5.764,74,1.82,75,1.612,76,5.011,77,0.86,78,1.55,79,3.044,80,3.044,81,2.288,82,3.646,83,2.288,84,2.288,85,1.436,86,2.288,87,1.82,88,2.288,89,1.82,90,2.288,91,1.899,92,2.288,93,1.82,94,2.288,95,1.899,96,2.288,97,1.899,98,2.288,99,1.899,100,1.612,101,2.288,102,2.288]],["title/modules/AppModule.html",[103,1.131,104,2.844]],["body/modules/AppModule.html",[0,0.103,3,0.128,4,0.112,5,0.112,29,0.014,47,0.269,50,0.128,53,0.007,54,0.01,55,0.007,57,3.463,77,0.824,78,1.486,103,1.188,104,5.64,105,1.377,106,1.991,107,3.349,108,3.186,109,1.929,110,1.607,111,3.611,112,3.611,113,3.611,114,3.611,115,4.877,116,4.733,117,2.959,118,2.194,119,1.902,120,4.153,121,2.258,122,4.871,123,2.087,124,2.258,125,5.603,126,4.871,127,3.254,128,5.603,129,4.153,130,4.153,131,2.596,132,4.153,133,4.029,134,3.254,135,3.254,136,2.987,137,3.742,138,3.254,139,2.596,140,2.774,141,4.153,142,4.153,143,4.153,144,3.254,145,4.153,146,2.774,147,3.254]],["title/modules/AppRoutingModule.html",[103,1.131,115,2.641]],["body/modules/AppRoutingModule.html",[0,0.127,3,0.158,4,0.138,5,0.138,29,0.014,47,0.223,50,0.198,53,0.009,54,0.011,55,0.009,77,1.02,105,1.703,110,1.988,115,4.297,121,2.07,124,2.593,148,5.137,149,3.211,150,4.022,151,3.398,152,2.713,153,1.703,154,5.137,155,5.052,156,5.04,157,6.434,158,5.137,159,5.137,160,4.024,161,5.137,162,5.137,163,5.137,164,5.137,165,5.137,166,5.137]],["title/classes/AppSettings.html",[0,0.098,167,2.472]],["body/classes/AppSettings.html",[0,0.11,2,1.533,3,0.137,4,0.12,5,0.12,10,0.384,11,0.888,12,1.361,22,0.741,23,1.303,26,1.335,29,0.014,30,1.119,47,0.242,49,0.917,50,0.137,53,0.008,54,0.01,55,0.008,133,5.357,134,3.488,135,3.488,136,4.721,137,3.92,138,3.488,139,4.104,140,2.974,144,5.143,146,4.385,167,3.669,168,6.476,169,3.871,170,5.143,171,5.869,172,4.453,173,4.453,174,4.453,175,3.654,176,3.202]],["title/injectables/ApplicationService.html",[177,1.661,178,2.201]],["body/injectables/ApplicationService.html",[0,0.078,3,0.097,4,0.085,5,0.085,10,0.273,11,0.699,12,1.339,21,0.883,22,0.752,23,0.627,26,1.329,28,1.185,29,0.014,30,0.671,31,1.954,32,1.087,47,0.25,49,0.65,50,0.097,53,0.005,54,0.008,55,0.005,74,2.295,75,2.032,77,0.627,123,1.586,133,4.806,134,2.473,135,2.473,136,3.929,137,3.085,138,2.473,139,3.415,140,2.108,144,4.279,146,3.648,167,3.758,170,5.236,175,3.72,176,2.27,177,1.94,178,2.571,179,2.108,180,2.744,181,4.316,182,5.463,183,5.811,184,4.749,185,1.788,186,4.619,187,2.744,188,4.71,189,4.619,190,3.619,191,4.619,192,3.156,193,4.619,194,1.222,195,1.384,196,3.156,197,3.156,198,5.657,199,1.487,200,3.156,201,3.156,202,3.156,203,3.156,204,1.667,205,2.473,206,1.513,207,2.473,208,2.27,209,1.757,210,3.156,211,3.156,212,3.156,213,3.156,214,2.744,215,3.156,216,3.156,217,3.156,218,3.156,219,3.156,220,3.156,221,2.27,222,3.156,223,2.27,224,3.156,225,3.156,226,3.156,227,3.156,228,3.156]],["title/classes/BaseModel.html",[0,0.098,9,0.845]],["body/classes/BaseModel.html",[0,0.101,2,1.405,3,0.125,4,0.11,5,0.11,7,0.905,9,1.183,10,0.352,11,0.837,12,1.343,19,2.532,20,2.337,21,1.288,22,0.803,23,0.81,24,1.32,26,1.297,28,1.046,29,0.014,30,0.592,31,1.46,32,1.405,33,1.481,40,2.083,43,2.608,47,0.141,50,0.193,53,0.007,54,0.009,55,0.007,153,1.835,199,1.009,229,5.69,230,5.535,231,4.079,232,4.079,233,4.079,234,3.547,235,2.934,236,4.079,237,3.547,238,5.535,239,3.547,240,5.535,241,4.079,242,4.079,243,4.079,244,4.336,245,4.079,246,3.196,247,4.812,248,3.547,249,3.547,250,3.196,251,3.547,252,3.547,253,3.547,254,3.547]],["title/interfaces/CacheModel.html",[51,0.38,255,2.641]],["body/interfaces/CacheModel.html",[0,0.134,3,0.122,4,0.107,5,0.107,10,0.342,11,0.82,22,0.657,23,0.786,29,0.014,30,1.045,33,1.183,37,1.769,47,0.188,50,0.19,51,0.38,53,0.007,54,0.009,55,0.007,77,0.786,123,1.989,153,2.444,177,2.278,195,2.377,199,0.979,235,4.448,255,3.622,256,1.416,257,2.644,258,2.644,259,5.46,260,5.774,261,5.774,262,5.397,263,4.444,264,3.192,265,4.248,266,4.846,267,3.101,268,3.622,269,2.847,270,2.644,271,4.448,272,3.101,273,3.101,274,2.475,275,1.663,276,2.475,277,4.248,278,4.248,279,3.101,280,2.203,281,3.101,282,3.101,283,4.248,284,3.9,285,3.101,286,3.101,287,4.248,288,3.101,289,3.101,290,3.101]],["title/classes/Conditions.html",[0,0.098,291,2.328]],["body/classes/Conditions.html",[0,0.073,2,1.013,3,0.09,4,0.079,5,0.079,7,0.652,8,1.085,9,1.443,10,0.254,11,0.663,12,1.396,19,1.767,20,1.631,21,1.002,22,0.816,23,0.584,24,1.046,26,1.404,27,1.965,28,0.755,29,0.014,30,0.427,31,1.053,32,1.013,33,1.418,37,1.864,39,1.965,40,1.926,41,2.441,42,1.236,43,1.139,44,1.236,45,1.236,46,1.236,47,0.181,48,0.702,49,0.903,50,0.135,51,0.283,52,0.728,53,0.005,54,0.007,55,0.005,74,1.236,75,1.095,109,1.013,199,0.728,206,1.41,291,2.581,292,5.81,293,5.052,294,3.77,295,4.179,296,5.052,297,3.632,298,5.052,299,3.632,300,3.757,301,5.052,302,5.052,303,4.179,304,3.813,305,2.558,306,3.627,307,2.116,308,2.116,309,2.305,310,2.305,311,2.305,312,2.558,313,2.441,314,2.116,315,2.116,316,2.116,317,2.558]],["title/components/ContainerComponent.html",[56,1.173,85,1.311]],["body/components/ContainerComponent.html",[0,0.068,3,0.085,4,0.074,5,0.074,10,0.238,11,0.631,12,1.246,21,0.964,22,0.597,23,0.547,26,1.17,28,0.707,29,0.014,30,0.4,33,0.798,47,0.229,50,0.085,53,0.005,54,0.007,55,0.005,56,1.495,57,1.208,58,1.437,59,1.455,60,1.455,61,1.455,62,1.455,64,1.455,65,3.81,66,3.675,68,2.205,70,2.205,74,1.157,75,1.025,77,0.547,78,0.986,79,2.205,80,2.205,81,1.455,82,2.969,83,1.455,84,1.455,85,1.864,86,1.455,87,1.157,88,1.455,89,1.157,90,1.455,91,1.208,92,1.455,93,1.157,94,1.455,95,1.208,96,1.455,97,1.208,98,1.455,99,1.208,100,1.553,101,1.455,102,1.455,137,1.84,139,3.15,140,1.84,146,3.366,147,3.27,152,1.455,178,3.129,181,1.723,184,4.381,185,1.616,194,1.066,195,1.208,204,1.455,206,1.321,209,1.534,214,4.381,275,1.754,318,2.396,319,2.805,320,6.357,321,5.039,322,4.174,323,5.039,324,5.039,325,3.129,326,2.396,327,6.603,328,4.174,329,3.27,330,2.755,331,2.755,332,3.15,333,2.755,334,2.755,335,2.755,336,4.174,337,1.982,338,2.159,339,2.755,340,2.755,341,2.755,342,2.755,343,1.982,344,3.27,345,4.174,346,2.396,347,2.755,348,2.755,349,1.982,350,2.159,351,2.396,352,2.396,353,2.755,354,4.381,355,3.629,356,3.629,357,2.396,358,2.396,359,3.002,360,4.733,361,4.344,362,2.396,363,3.629,364,4.733,365,3.629,366,3.629,367,2.396,368,3.629,369,4.174,370,3.629,371,2.755,372,3.27,373,3.624,374,2.755,375,2.396,376,2.755,377,2.755,378,5.039,379,3.629,380,2.396,381,3.629]],["title/modules/ContainerModule.html",[103,1.131,116,2.641]],["body/modules/ContainerModule.html",[0,0.073,3,0.091,4,0.08,5,0.08,21,0.567,22,0.315,26,0.546,28,0.76,29,0.014,30,0.43,31,1.578,32,1.021,47,0.264,50,0.091,53,0.005,54,0.008,55,0.005,58,1.813,77,0.588,78,1.061,85,2.433,103,0.848,105,1.933,106,1.421,107,2.781,108,1.49,109,2.008,110,2.038,116,5.356,117,2.329,118,1.566,119,1.358,121,1.777,122,3.834,123,1.49,124,2.122,131,1.853,153,1.462,167,3.897,178,3.637,185,1.147,194,1.147,207,2.322,208,2.132,264,2.595,274,2.757,280,1.65,337,2.132,382,2.577,383,2.577,384,2.577,385,2.577,386,2.577,387,3.517,388,3.517,389,4.364,390,4.364,391,4.364,392,4.364,393,4.085,394,2.322,395,3.834,396,2.964,397,4.41,398,2.964,399,5.265,400,2.454,401,1.566,402,5.265,403,2.964,404,3.171,405,2.964,406,3.171,407,2.964,408,2.964,409,2.964,410,2.964,411,2.964,412,2.964,413,2.577,414,2.577,415,2.577,416,5.831,417,5.265,418,4.41,419,3.454,420,2.964]],["title/modules/ContainerRoutingModule.html",[103,1.131,389,2.641]],["body/modules/ContainerRoutingModule.html",[0,0.14,3,0.174,4,0.153,5,0.153,29,0.014,47,0.236,50,0.21,53,0.01,54,0.012,55,0.01,77,1.124,105,1.877,110,2.192,121,2.282,124,2.753,149,3.54,150,4.27,151,3.608,152,2.991,153,1.877,389,4.562,421,5.663,422,5.663,423,5.663]],["title/injectables/ContextService.html",[177,1.661,390,2.641]],["body/injectables/ContextService.html",[0,0.11,3,0.137,4,0.12,5,0.12,10,0.384,11,0.888,12,1.119,22,0.623,23,1.303,26,1.285,29,0.014,47,0.242,50,0.137,53,0.008,54,0.01,55,0.008,74,2.758,75,2.442,77,0.884,177,2.465,179,2.974,181,4.657,183,6.476,198,5.682,199,1.624,204,2.352,390,3.92,424,3.871,425,5.143,426,6.565,427,6.565,428,5.869,429,4.721,430,4.453,431,4.453,432,3.202,433,4.453,434,4.453,435,4.453,436,4.453,437,4.453,438,4.453,439,4.453,440,2.621]],["title/classes/Country.html",[0,0.098,441,2.089]],["body/classes/Country.html",[0,0.105,2,1.46,3,0.13,4,0.114,5,0.114,7,0.94,8,1.405,9,1.604,10,0.366,11,0.86,12,1.367,14,4.279,17,3.81,19,2.29,20,2.384,21,1.225,22,0.82,23,0.842,24,1.355,26,1.381,28,1.088,29,0.014,30,0.616,31,1.517,32,1.46,33,1.492,40,1.406,41,2.875,42,1.781,43,1.641,44,1.781,45,1.781,46,1.781,47,0.147,48,1.012,49,0.874,50,0.175,51,0.408,52,1.049,53,0.007,54,0.01,55,0.007,441,3.001,442,5.362,443,4.279,444,3.344,445,3.05]],["title/classes/Day.html",[0,0.098,446,2.472]],["body/classes/Day.html",[0,0.095,2,1.314,3,0.117,4,0.103,5,0.103,7,0.846,8,1.308,9,1.56,10,0.33,11,0.8,12,1.38,19,2.131,20,1.967,21,1.16,22,0.812,23,0.758,24,1.261,26,1.391,28,0.979,29,0.014,30,0.554,31,1.366,32,1.314,33,1.361,37,1.736,38,2.549,40,1.266,41,2.752,42,1.604,43,1.477,44,1.604,45,1.604,46,1.604,47,0.183,48,0.91,49,0.786,50,0.163,51,0.367,52,0.944,53,0.007,54,0.009,55,0.007,74,1.604,75,1.42,109,1.314,206,1.83,294,4.364,295,4.712,306,3.378,444,2.247,446,3.306,447,5.576,448,5.696,449,5.696,450,4.096,451,4.143,452,2.549,453,3.319]],["title/classes/Elevation.html",[0,0.098,454,2.472]],["body/classes/Elevation.html",[0,0.102,2,1.412,3,0.126,4,0.11,5,0.11,7,0.909,8,1.374,9,1.59,10,0.354,11,0.84,12,1.36,19,2.238,20,2.066,21,1.204,22,0.815,23,0.814,24,1.325,26,1.369,28,1.052,29,0.014,30,0.595,31,1.467,32,1.412,33,1.204,40,1.359,41,2.836,42,1.722,43,1.587,44,1.722,45,1.722,46,1.722,47,0.192,48,0.978,49,1.144,50,0.171,51,0.394,52,1.014,53,0.007,54,0.009,55,0.007,199,1.374,444,3.269,445,2.949,454,3.472,455,5.289,456,5.87,457,4.269,458,4.221,459,3.506,460,2.949,461,3.565,462,3.565,463,3.565,464,3.565]],["title/classes/Encoding.html",[0,0.098,465,2.844]],["body/classes/Encoding.html",[0,0.083,2,1.148,3,0.102,4,0.09,5,0.09,10,0.288,11,0.727,12,1.161,21,0.919,22,0.763,26,1.254,28,1.582,29,0.014,30,0.698,32,1.148,33,1.53,47,0.166,50,0.102,53,0.006,54,0.008,55,0.006,74,2.591,75,2.829,153,1.868,185,1.86,194,1.86,195,1.461,199,0.824,206,1.598,237,2.898,280,2.675,395,6.878,465,3.456,466,2.898,467,5.635,468,5.635,469,5.635,470,5.635,471,4.806,472,4.806,473,3.334,474,3.334,475,3.334,476,3.334,477,4.806,478,3.334,479,7.186,480,3.856,481,4.806,482,3.334,483,3.334,484,3.334,485,2.898,486,2.898,487,2.612,488,5.635,489,3.334,490,3.334,491,3.334,492,3.334,493,3.334,494,3.334,495,3.334,496,4.806,497,3.334,498,3.334,499,3.334,500,4.806,501,3.334,502,3.334,503,2.898,504,3.334,505,3.334,506,3.334,507,3.334]],["title/components/FavoritesComponent.html",[56,1.173,87,1.661]],["body/components/FavoritesComponent.html",[0,0.087,3,0.108,4,0.094,5,0.094,10,0.303,21,0.953,23,1.151,26,0.918,29,0.014,47,0.173,50,0.108,53,0.006,54,0.009,55,0.006,56,1.72,57,1.538,58,1.716,59,1.853,60,1.853,61,1.853,62,1.853,64,1.853,65,4.015,66,3.821,68,2.633,70,2.633,77,0.696,78,1.255,79,2.633,80,2.633,81,1.853,82,3.334,83,1.853,84,1.853,85,1.163,86,1.853,87,2.652,88,1.853,89,1.474,90,1.853,91,1.538,92,1.853,93,1.474,94,1.853,95,1.538,96,1.853,97,1.538,98,1.853,99,1.538,100,1.305,101,1.853,102,1.853,160,3.905,185,1.929,194,1.358,195,1.538,275,2.094,319,3.227,325,3.514,343,3.585,349,2.523,350,2.749,361,2.523,364,5.428,372,2.749,373,2.523,508,3.05,509,5.798,510,4.985,511,3.508,512,3.508,513,6.313,514,7.677,515,6.929,516,6.929,517,6.929,518,6.313,519,6.313,520,4.985,521,5.798,522,3.05,523,3.05,524,3.508,525,3.508,526,3.508,527,3.508,528,3.508,529,3.508,530,3.508,531,3.508,532,4.542,533,3.508,534,3.508,535,3.05,536,3.508]],["title/modules/FavoritesModule.html",[103,1.131,537,2.844]],["body/modules/FavoritesModule.html",[0,0.106,3,0.132,4,0.116,5,0.116,29,0.014,47,0.238,50,0.132,53,0.007,54,0.01,55,0.007,58,2.221,77,0.853,78,1.538,85,2.568,87,2.408,103,1.229,105,2.282,106,2.06,107,3.407,108,2.16,109,1.974,110,2.497,117,3.028,118,2.27,119,1.968,121,2.31,124,2.31,131,2.687,153,1.901,387,3.712,388,3.712,400,3.191,401,2.27,537,5.802,538,3.737,539,4.298,540,4.298,541,3.737,542,4.925,543,3.367,544,4.298,545,3.737]],["title/modules/FavoritesRoutingModule.html",[103,1.131,542,2.641]],["body/modules/FavoritesRoutingModule.html",[0,0.133,3,0.165,4,0.145,5,0.145,29,0.014,47,0.248,50,0.204,53,0.009,54,0.011,55,0.009,56,1.595,77,1.068,87,2.781,105,1.783,110,2.081,121,2.167,124,2.668,149,3.362,150,4.138,151,3.496,152,2.84,153,1.783,155,3.868,542,4.421,545,4.676,546,5.378,547,5.378,548,4.213,549,5.378]],["title/modules/FeatureModule.html",[103,1.131,550,2.328]],["body/modules/FeatureModule.html",[0,0.103,3,0.128,4,0.112,5,0.112,29,0.014,47,0.28,50,0.128,53,0.007,54,0.01,55,0.007,77,0.829,105,1.384,110,1.616,121,1.683,124,2.266,209,2.324,400,3.129,401,2.205,419,3.271,550,3.309,551,4.175,552,6.357,553,4.175,554,5.622,555,4.175,556,5.622,557,4.175,558,5.622,559,4.175,560,5.622,561,4.175,562,5.622,563,4.175,564,5.622,565,4.175,566,5.622,567,4.175,568,5.622,569,4.175,570,5.622,571,4.175,572,5.622,573,4.175,574,4.888,575,3.63,576,5.622,577,4.175,578,5.622,579,4.175,580,5.622,581,4.175,582,4.175]],["title/classes/Forecast.html",[0,0.098,583,2.201]],["body/classes/Forecast.html",[0,0.097,2,1.353,3,0.121,4,0.106,5,0.106,7,0.871,8,1.334,9,1.572,10,0.339,11,0.816,12,1.352,19,2.174,20,2.007,21,1.178,22,0.807,23,0.78,24,1.287,26,1.354,28,1.008,29,0.014,30,0.571,31,1.406,32,1.353,33,1.178,40,1.303,41,2.786,42,1.651,43,1.521,44,1.651,45,1.651,46,1.651,47,0.213,48,0.937,49,1.269,50,0.166,51,0.378,52,0.972,53,0.007,54,0.009,55,0.007,100,2.292,199,1.524,440,2.313,444,2.313,452,3.603,583,3.003,584,5.196,585,4.431,586,4.599,587,4.77,588,3.373,589,3.416,590,3.373,591,3.416,592,3.416,593,3.416,594,3.416,595,3.416,596,3.416,597,3.416,598,3.416]],["title/components/ForecastComponent.html",[56,1.173,89,1.661]],["body/components/ForecastComponent.html",[0,0.106,3,0.131,4,0.115,5,0.115,10,0.368,21,1.09,23,1.275,26,1.05,29,0.014,47,0.148,50,0.131,53,0.007,54,0.01,55,0.007,56,1.906,57,1.869,58,1.963,59,2.252,60,2.252,61,2.252,62,2.252,64,2.252,65,4.16,66,3.959,68,3.012,70,3.012,77,0.846,78,1.525,79,3.012,80,3.012,81,2.252,82,3.623,83,2.252,84,2.252,85,1.414,86,2.252,87,1.791,88,2.252,89,2.882,90,2.252,91,1.869,92,2.252,93,1.791,94,2.252,95,1.869,96,2.252,97,1.869,98,2.252,99,1.869,100,1.586,101,2.252,102,2.252,185,2.207,194,1.65,195,1.869,275,2.395,319,3.576,325,3.818,583,3.818,599,3.707,600,6.425,601,5.702,602,4.263,603,4.263,604,4.467]],["title/modules/ForecastModule.html",[103,1.131,605,2.844]],["body/modules/ForecastModule.html",[0,0.106,3,0.132,4,0.116,5,0.116,29,0.014,47,0.238,50,0.132,53,0.007,54,0.01,55,0.007,58,2.221,77,0.853,78,1.538,85,2.568,89,2.408,103,1.229,105,2.282,106,2.06,107,3.407,108,2.16,109,1.974,110,2.497,117,3.028,118,2.27,119,1.968,121,2.31,124,2.31,131,2.687,153,1.901,387,3.712,388,3.712,400,3.191,401,2.27,605,5.802,606,3.737,607,4.298,608,4.298,609,3.737,610,4.925,611,3.367,612,4.298,613,3.737]],["title/modules/ForecastRoutingModule.html",[103,1.131,610,2.641]],["body/modules/ForecastRoutingModule.html",[0,0.133,3,0.165,4,0.145,5,0.145,29,0.014,47,0.248,50,0.204,53,0.009,54,0.011,55,0.009,56,1.595,77,1.068,89,2.781,105,1.783,110,2.081,121,2.167,124,2.668,149,3.362,150,4.138,151,3.496,152,2.84,153,1.783,155,3.868,548,4.213,610,4.421,613,4.676,614,5.378,615,5.378,616,5.378]],["title/classes/GeoPosition.html",[0,0.098,617,2.328]],["body/classes/GeoPosition.html",[0,0.098,2,1.363,3,0.122,4,0.107,5,0.107,7,0.878,8,1.341,9,1.575,10,0.342,11,0.82,12,1.372,19,2.186,20,2.017,21,1.183,22,0.818,23,0.786,24,1.293,26,1.382,28,1.015,29,0.014,30,0.575,31,1.416,32,1.363,33,1.183,37,2.059,40,1.312,41,2.795,42,1.663,43,1.532,44,1.663,45,1.663,46,1.663,47,0.188,48,0.944,49,1.117,50,0.167,51,0.38,52,0.979,53,0.007,54,0.009,55,0.007,175,3.703,199,0.979,221,4.785,223,4.785,444,2.33,451,4.248,452,2.644,454,4.608,458,3.39,617,3.192,618,5.46,619,3.442,620,3.442,621,3.442]],["title/components/HeaderComponent.html",[56,1.173,91,1.733]],["body/components/HeaderComponent.html",[0,0.063,3,0.079,4,0.069,5,0.069,10,0.221,11,0.597,12,1.097,21,0.754,22,0.419,23,0.955,26,1.076,29,0.014,40,2.133,47,0.137,50,0.079,53,0.004,54,0.007,55,0.004,56,1.428,57,1.121,58,1.358,59,1.351,60,1.351,61,1.351,62,1.351,64,1.351,65,3.741,66,3.613,68,2.083,70,2.083,74,1.657,75,1.467,77,0.508,78,0.915,79,2.083,80,2.083,81,1.351,82,2.857,83,1.351,84,1.351,85,0.848,86,1.351,87,1.074,88,1.351,89,1.074,90,1.351,91,2.371,92,1.351,93,1.074,94,1.351,95,1.121,96,1.351,97,1.121,98,1.351,99,1.121,100,0.952,101,1.351,102,1.351,119,1.806,160,3.089,185,1.526,194,0.99,195,1.121,199,1.19,275,1.657,319,2.679,325,3.011,349,1.839,350,2.004,351,2.224,352,2.224,354,4.184,355,4.184,356,4.184,357,2.224,358,2.224,359,4.627,360,4.577,361,4.777,363,4.702,364,4.237,365,2.224,366,2.224,367,3.429,370,3.429,372,2.004,373,4.44,375,3.429,379,4.184,380,4.184,522,3.429,523,2.224,532,4.237,535,2.224,622,2.224,623,6.433,624,4.813,625,3.944,626,4.813,627,4.813,628,3.944,629,4.813,630,3.944,631,5.409,632,2.558,633,2.558,634,2.558,635,3.944,636,2.558,637,3.944,638,3.944,639,3.944,640,3.944,641,3.429,642,3.429,643,4.813,644,5.843,645,6.173,646,6.643,647,2.558,648,2.558,649,2.558,650,3.944,651,2.558,652,5.409,653,5.409,654,5.409,655,3.944,656,4.813,657,2.558,658,2.558,659,2.558,660,2.224,661,2.558,662,2.558,663,2.004,664,3.944,665,3.944,666,2.558,667,2.558,668,2.558,669,3.429,670,3.429,671,3.944,672,2.558]],["title/modules/HeaderModule.html",[103,1.131,387,1.896]],["body/modules/HeaderModule.html",[0,0.104,3,0.129,4,0.113,5,0.113,29,0.014,47,0.246,50,0.129,53,0.007,54,0.01,55,0.007,58,2.198,77,0.835,78,1.505,85,2.557,91,2.477,103,1.203,105,2.262,106,2.017,107,3.371,108,2.115,109,1.946,110,2.47,117,2.985,118,2.222,119,1.927,121,2.278,124,2.278,131,2.63,153,1.874,387,3.953,388,3.696,400,3.146,401,2.222,550,4.314,673,3.658,674,4.208,675,4.208,676,3.658,677,4.895,678,3.296,679,3.296,680,4.208,681,4.208]],["title/modules/HeaderRoutingModule.html",[103,1.131,677,2.641]],["body/modules/HeaderRoutingModule.html",[0,0.14,3,0.174,4,0.153,5,0.153,29,0.014,47,0.236,50,0.21,53,0.01,54,0.012,55,0.01,77,1.124,105,1.877,110,2.192,121,2.282,124,2.753,149,3.54,150,4.27,151,3.608,152,2.991,153,1.877,677,4.562,682,5.663,683,5.663,684,5.663]],["title/classes/Headline.html",[0,0.098,586,2.472]],["body/classes/Headline.html",[0,0.08,2,1.109,3,0.099,4,0.087,5,0.087,7,0.714,8,1.159,9,1.485,10,0.278,11,0.709,12,1.4,19,1.889,20,1.743,21,1.056,22,0.828,23,0.639,24,1.118,26,1.415,27,2.15,28,0.826,29,0.014,30,0.467,31,1.152,32,1.109,33,1.48,36,2.522,37,2.076,38,2.15,39,2.15,40,2.303,41,2.549,42,1.353,43,1.246,44,1.353,45,1.353,46,1.353,47,0.111,48,0.768,49,0.663,50,0.144,51,0.309,52,0.796,53,0.006,54,0.008,55,0.006,297,3.794,299,3.794,307,2.316,308,2.316,309,2.522,310,2.522,311,3.671,586,2.93,588,3.794,663,4.754,685,5.852,686,5.276,687,5.276,688,5.276,689,5.276,690,5.276,691,5.276]],["title/interfaces/IAdministrativeArea.html",[25,2.201,51,0.38]],["body/interfaces/IAdministrativeArea.html",[0,0.106,1,2.373,3,0.131,4,0.115,5,0.115,6,3.34,7,0.945,8,1.055,9,1.219,10,0.368,11,0.863,12,1.254,13,6.216,14,4.47,15,6.216,16,6.216,17,3.98,18,6.216,20,2.552,22,0.798,24,1.017,25,3.576,29,0.014,30,1.165,33,1.576,37,1.962,47,0.148,48,1.017,49,0.878,50,0.175,51,0.41,52,1.055,53,0.007,54,0.01,55,0.007,256,1.525]],["title/interfaces/IConditions.html",[51,0.38,303,2.844]],["body/interfaces/IConditions.html",[0,0.086,3,0.107,4,0.094,5,0.094,7,0.771,8,0.86,9,1.059,10,0.3,11,0.749,12,1.279,22,0.785,24,0.83,29,0.014,30,1.155,33,1.465,37,2.078,40,2.085,47,0.2,48,0.83,49,1.021,50,0.152,51,0.334,52,0.86,53,0.006,54,0.008,55,0.006,109,1.198,199,0.86,206,1.667,256,1.244,291,2.047,292,2.725,293,5.779,294,2.501,295,4.78,296,5.779,297,4.155,298,5.779,299,4.155,300,3.957,301,5.779,302,5.779,303,4.15,306,4.045,313,3.5,314,2.501,315,2.501,316,2.501,317,3.024]],["title/interfaces/ICountry.html",[51,0.38,443,2.472]],["body/interfaces/ICountry.html",[0,0.123,3,0.153,4,0.134,5,0.134,7,1.1,8,1.227,9,1.346,10,0.428,11,0.952,12,1.073,14,4.691,17,4.177,20,2.705,22,0.734,24,1.184,29,0.014,30,1.113,33,1.543,47,0.172,48,1.184,49,1.022,50,0.194,51,0.477,52,1.227,53,0.008,54,0.011,55,0.008,256,1.775,441,2.621,442,3.887,443,4.322]],["title/interfaces/IDay.html",[51,0.38,450,2.472]],["body/interfaces/IDay.html",[0,0.116,3,0.144,4,0.126,5,0.126,7,1.039,8,1.159,9,1.297,10,0.405,11,0.918,12,1.213,22,0.715,24,1.118,29,0.014,30,1.097,33,1.361,37,2.036,47,0.21,48,1.118,49,0.966,50,0.187,51,0.45,52,1.159,53,0.008,54,0.01,55,0.008,109,1.614,206,2.247,256,1.677,294,3.371,295,5.303,306,3.962,446,2.93,447,3.672,448,6.41,449,6.41,450,4.208,453,4.075]],["title/interfaces/IDictionary.html",[51,0.38,429,2.844]],["body/interfaces/IDictionary.html",[3,0.18,4,0.158,5,0.158,9,1.59,26,1.077,29,0.014,33,1.332,47,0.202,48,1.395,49,1.205,50,0.18,51,0.562,53,0.01,54,0.012,55,0.01,256,2.093,429,5.008,480,4.354,692,5.085,693,5.848,694,5.848]],["title/interfaces/IElevation.html",[51,0.38,458,2.472]],["body/interfaces/IElevation.html",[0,0.121,3,0.151,4,0.132,5,0.132,7,1.087,8,1.212,9,1.335,10,0.423,11,0.945,12,1.065,22,0.663,24,1.169,29,0.014,30,1.051,47,0.216,48,1.169,49,1.287,50,0.192,51,0.471,52,1.212,53,0.008,54,0.011,55,0.008,199,1.545,256,1.754,454,3.064,455,3.84,456,6.5,457,4.377,458,4.298,459,4.323,460,3.525,461,4.261,462,4.261,463,4.261,464,4.261]],["title/interfaces/IForecast.html",[51,0.38,587,2.844]],["body/interfaces/IForecast.html",[0,0.115,3,0.143,4,0.125,5,0.125,7,1.033,8,1.152,9,1.292,10,0.402,11,0.915,12,1.031,22,0.642,24,1.111,29,0.014,30,1.031,47,0.232,48,1.111,49,1.383,50,0.186,51,0.448,52,1.152,53,0.008,54,0.01,55,0.008,100,2.249,199,1.66,256,1.667,440,2.743,583,2.594,584,3.65,585,3.351,586,4.8,587,4.827,588,4.44,589,4.051,590,4.44,591,4.051,592,6.175,593,4.051,594,4.051,595,4.051,596,4.051,597,4.051,598,4.051]],["title/interfaces/IGeoPosition.html",[51,0.38,175,2.201]],["body/interfaces/IGeoPosition.html",[0,0.117,3,0.145,4,0.127,5,0.127,7,1.045,8,1.166,9,1.302,10,0.407,11,0.922,12,1.15,22,0.717,24,1.124,29,0.014,30,1.098,37,2.231,47,0.211,48,1.124,49,1.255,50,0.187,51,0.453,52,1.166,53,0.008,54,0.01,55,0.008,175,3.757,199,1.166,221,5.312,223,5.312,256,1.687,454,4.813,458,4.46,617,2.775,618,3.693,619,4.099,620,4.099,621,4.099]],["title/interfaces/IHeadline.html",[51,0.38,588,2.472]],["body/interfaces/IHeadline.html",[0,0.093,3,0.115,4,0.101,5,0.101,7,0.833,8,0.929,9,1.118,10,0.324,11,0.791,12,1.283,22,0.799,24,0.896,29,0.014,30,1.166,33,1.523,37,2.222,40,2.457,47,0.13,48,0.896,49,0.774,50,0.161,51,0.361,52,0.929,53,0.006,54,0.009,55,0.006,256,1.343,297,4.276,299,4.276,586,2.347,588,3.761,663,5.358,685,2.941,686,5.946,687,5.946,688,5.946,689,5.946,690,5.946,691,5.946]],["title/interfaces/ILocation.html",[51,0.38,695,2.844]],["body/interfaces/ILocation.html",[0,0.072,1,3.735,3,0.089,4,0.078,5,0.078,7,0.641,8,0.715,9,0.925,10,0.249,11,0.654,12,1.285,14,3.855,17,3.432,22,0.814,24,0.689,25,3.205,29,0.014,30,1.154,33,1.49,37,1.647,47,0.232,48,0.689,49,1.382,50,0.133,51,0.278,52,0.715,53,0.005,54,0.007,55,0.005,175,3.205,176,2.078,199,1.601,256,1.034,291,3.052,306,3.432,432,4.435,440,1.701,441,3.795,443,4.195,480,3.855,583,2.887,617,4.061,695,3.73,696,2.264,697,5.361,698,4.435,699,5.361,700,4.314,701,3.6,702,2.078,703,2.512,704,2.512,705,2.512,706,2.512,707,2.078,708,2.512,709,3.761,710,2.078,711,2.078,712,2.078,713,2.512,714,2.512,715,2.512,716,2.512,717,2.512,718,2.512,719,2.512]],["title/interfaces/IMetric.html",[51,0.38,459,2.201]],["body/interfaces/IMetric.html",[0,0.121,3,0.151,4,0.132,5,0.132,7,1.087,8,1.212,9,1.335,10,0.423,11,0.945,12,1.172,22,0.73,24,1.169,29,0.014,30,1.11,33,1.384,37,2.249,47,0.17,48,1.169,49,1.01,50,0.192,51,0.471,52,1.212,53,0.008,54,0.011,55,0.008,75,2.781,256,1.754,457,2.728,459,3.826,720,3.84,721,5.857,722,6.5]],["title/interfaces/ISearchEvent.html",[51,0.38,723,2.844]],["body/interfaces/ISearchEvent.html",[3,0.171,4,0.149,5,0.149,10,0.479,11,1.02,22,0.716,29,0.014,33,1.39,50,0.171,51,0.533,53,0.009,54,0.012,55,0.009,256,1.984,723,4.851,724,4.821,725,4.821,726,7.563,727,7.563,728,7.269,729,7.269]],["title/interfaces/ISearchResult.html",[51,0.38,730,2.641]],["body/interfaces/ISearchResult.html",[0,0.095,1,4.141,3,0.117,4,0.103,5,0.103,7,0.846,8,0.944,9,1.131,10,0.33,11,0.8,12,1.268,17,3.829,22,0.821,24,0.91,25,4.062,29,0.014,33,1.501,37,2.128,47,0.21,48,0.91,49,1.09,50,0.163,51,0.367,52,0.944,53,0.007,54,0.009,55,0.007,109,1.314,199,1.308,206,1.83,244,2.99,256,1.366,441,3.634,480,4.301,698,4.948,702,2.745,710,2.745,711,2.745,712,2.745,730,4.053,731,2.99,732,5.39,733,2.386,734,3.319,735,3.319,736,3.319,737,3.319,738,3.319,739,3.319,740,3.319]],["title/interfaces/ITemperature.html",[51,0.38,313,2.201]],["body/interfaces/ITemperature.html",[0,0.123,3,0.152,4,0.133,5,0.133,7,1.097,8,1.224,9,1.343,10,0.427,11,0.95,12,1.071,22,0.667,24,1.18,29,0.014,30,1.055,47,0.218,48,1.18,49,1.294,50,0.193,51,0.475,52,1.224,53,0.008,54,0.011,55,0.008,199,1.554,256,1.77,270,5.007,300,2.753,313,3.843,457,3.843,459,4.332,460,3.558,741,3.875,742,6.518,743,4.301,744,4.301,745,4.301,746,4.301]],["title/interfaces/ITimeZone.html",[51,0.38,701,2.472]],["body/interfaces/ITimeZone.html",[0,0.11,3,0.137,4,0.12,5,0.12,7,0.987,8,1.101,9,1.255,10,0.384,11,0.888,12,1.19,21,1.334,22,0.77,24,1.062,29,0.014,30,1.143,33,1.452,37,1.996,40,2.314,47,0.154,48,1.062,49,0.917,50,0.18,51,0.428,52,1.101,53,0.008,54,0.01,55,0.008,256,1.593,306,3.884,700,2.784,701,4.104,747,3.488,748,5.682,749,6.306,750,6.306,751,6.306]],["title/interfaces/IWeather.html",[51,0.38,590,2.472]],["body/interfaces/IWeather.html",[0,0.087,3,0.108,4,0.094,5,0.094,7,0.778,8,0.868,9,1.066,10,0.303,11,0.754,12,1.242,22,0.774,24,0.837,29,0.014,30,1.146,33,1.468,37,1.806,40,2.457,47,0.201,48,0.837,49,1.195,50,0.153,51,0.337,52,0.868,53,0.006,54,0.009,55,0.006,100,1.305,199,1.561,256,1.255,297,4.169,299,4.169,300,3.967,313,3.514,314,2.523,315,2.523,316,2.523,440,2.065,446,4.698,450,4.456,590,3.625,752,2.749,753,5.798,754,5.798,755,5.798,756,3.05,757,4.334,758,3.05,759,3.05,760,3.05,761,3.05]],["title/classes/LocationModel.html",[0,0.098,707,2.844]],["body/classes/LocationModel.html",[0,0.061,1,3.536,2,0.851,3,0.076,4,0.067,5,0.067,7,0.548,8,0.95,9,1.358,10,0.213,11,0.581,12,1.398,14,3.32,17,2.956,19,1.548,20,1.428,21,0.9,22,0.821,23,0.491,24,0.916,25,2.137,26,1.401,28,0.634,29,0.014,30,0.359,31,0.884,32,0.851,33,1.424,37,1.347,40,0.819,41,2.231,42,1.038,43,0.956,44,1.038,45,1.038,46,1.038,47,0.22,48,0.589,49,1.309,50,0.118,51,0.237,52,0.611,53,0.004,54,0.007,55,0.004,175,2.137,176,1.777,199,1.506,291,3.583,304,2.148,305,2.148,306,3.201,312,2.148,432,3.819,440,1.454,441,3.709,443,2.944,480,3.32,583,3.388,617,3.866,695,3.819,696,5.837,697,4.617,698,3.819,699,4.617,700,4.106,701,2.401,702,1.777,703,2.148,704,2.148,705,2.148,706,2.148,707,2.761,708,4.094,709,3.338,710,1.777,711,1.777,712,1.777,713,2.148,714,2.148,715,2.148,716,2.148,717,2.148,718,2.148,719,2.148,762,3.84,763,2.148,764,2.148,765,2.471,766,2.471,767,2.471,768,2.471,769,2.471,770,2.471,771,2.471,772,2.471]],["title/guards/LocationResolver.html",[406,2.844,773,3.098]],["body/guards/LocationResolver.html",[0,0.109,3,0.135,4,0.118,5,0.118,10,0.378,21,1.11,22,0.617,23,0.869,26,1.069,28,1.489,29,0.014,30,0.843,47,0.257,50,0.135,53,0.007,54,0.01,55,0.007,77,0.869,123,2.201,152,2.313,170,3.431,177,2.439,178,3.859,181,2.738,185,2.247,188,5.432,190,5.101,194,1.695,204,2.313,209,2.438,275,1.84,276,2.738,280,3.231,326,3.808,329,4.548,332,4.071,337,3.15,406,4.175,503,5.047,774,4.38,775,3.808,776,6.934,777,4.38,778,5.805,779,6.934,780,4.38,781,4.38,782,5.805,783,3.15,784,4.38,785,4.38,786,4.38,787,4.38,788,4.38,789,4.38,790,4.38,791,4.38]],["title/classes/Metric.html",[0,0.098,457,2.201]],["body/classes/Metric.html",[0,0.101,2,1.408,3,0.126,4,0.11,5,0.11,7,0.907,8,1.371,9,1.589,10,0.353,11,0.839,12,1.378,19,2.235,20,2.063,21,1.203,22,0.823,23,0.812,24,1.322,26,1.392,28,1.049,29,0.014,30,0.594,31,1.463,32,1.408,33,1.39,37,2.079,40,1.356,41,2.833,42,1.718,43,1.583,44,1.718,45,1.718,46,1.718,47,0.142,48,0.975,49,0.843,50,0.17,51,0.393,52,1.012,53,0.007,54,0.009,55,0.007,75,2.509,444,2.407,445,2.941,452,3.703,457,3.086,459,3.754,720,5.523,721,5.284,722,5.864]],["title/classes/RequestCache.html",[0,0.098,264,2.328]],["body/classes/RequestCache.html",[0,0.131,2,1.314,3,0.117,4,0.103,5,0.103,10,0.33,21,1.011,22,0.562,23,0.758,26,0.974,28,1.356,29,0.014,30,0.768,33,0.73,37,1.092,47,0.183,50,0.187,51,0.367,53,0.007,54,0.009,55,0.007,77,0.758,123,1.918,153,2.42,177,2.222,185,2.047,194,2.047,195,2.66,199,0.944,235,5.249,255,2.549,257,4.053,258,2.549,259,4.143,260,5.576,261,5.133,262,5.432,263,4.969,264,3.572,265,4.754,266,5.133,267,4.143,268,3.532,269,2.745,270,2.549,271,4.364,272,2.99,273,2.99,274,2.386,275,1.604,276,2.386,277,4.143,278,4.143,279,2.99,280,2.125,281,2.99,282,2.99,283,4.143,284,3.803,285,2.99,286,2.99,287,4.143,288,2.99,289,2.99,290,2.99,792,4.598,793,3.817,794,3.803,795,3.817]],["title/injectables/RequestCacheService.html",[177,1.661,274,2.472]],["body/injectables/RequestCacheService.html",[0,0.128,3,0.114,4,0.1,5,0.1,10,0.32,11,0.783,21,0.99,22,0.55,23,1.185,26,1.19,28,1.328,29,0.014,30,0.752,33,0.708,37,1.059,47,0.179,50,0.184,51,0.356,53,0.006,54,0.009,55,0.006,74,1.555,75,1.377,77,0.735,123,1.861,153,2.4,177,2.175,179,2.473,185,2.004,194,2.004,195,2.617,199,1.281,235,4.294,255,2.473,257,4.544,258,2.473,259,4.056,260,5.523,261,5.065,262,5.396,263,4.932,264,3.048,265,4.677,266,5.065,267,4.056,268,3.458,269,2.663,270,2.473,271,4.893,272,2.901,273,2.901,274,3.237,275,1.555,276,3.237,277,4.056,278,4.056,279,2.901,280,2.061,281,2.901,282,2.901,283,4.056,284,3.724,285,2.901,286,2.901,287,4.056,288,2.901,289,2.901,290,2.901,792,4.502,794,3.724,796,5.178,797,3.703,798,3.703]],["title/interceptors/RequestInterceptor.html",[391,2.641,404,2.844]],["body/interceptors/RequestInterceptor.html",[0,0.108,3,0.134,4,0.117,5,0.117,10,0.375,21,1.104,22,0.613,23,0.862,26,1.063,28,1.481,29,0.014,30,0.838,47,0.256,50,0.134,53,0.007,54,0.01,55,0.007,77,0.862,109,1.496,123,2.183,153,1.44,177,2.425,185,2.235,194,1.681,204,2.294,206,2.082,209,2.418,263,4.616,264,4.068,271,4.152,275,1.825,280,2.418,332,4.055,343,4.664,391,3.856,413,3.777,414,3.777,465,3.124,794,4.664,799,3.777,800,5.639,801,3.403,802,5.02,803,4.344,804,4.344,805,5.02,806,6.009,807,4.344,808,3.777,809,5.02,810,4.344,811,4.344,812,4.344,813,4.344,814,4.344,815,3.777,816,4.344,817,4.344,818,5.774,819,4.344,820,4.344,821,4.344]],["title/interceptors/ResponseInterceptor.html",[392,2.641,404,2.844]],["body/interceptors/ResponseInterceptor.html",[0,0.115,3,0.143,4,0.125,5,0.125,10,0.402,21,0.891,22,0.495,23,1.332,26,1.113,28,1.195,29,0.014,30,0.677,47,0.246,50,0.143,53,0.008,54,0.01,55,0.008,77,0.925,123,2.342,153,1.545,177,2.54,185,2.34,194,1.803,204,2.461,262,4.348,263,4.744,275,1.957,276,2.913,280,3.365,284,3.351,332,4.196,343,4.827,344,4.736,346,4.051,392,4.038,783,3.351,794,3.351,799,4.051,801,3.65,802,5.256,805,5.256,806,6.175,808,4.051,809,5.256,822,5.835,823,4.66,824,4.66,825,4.051,826,4.66,827,4.66]],["title/components/SearchComponent.html",[56,1.173,93,1.661]],["body/components/SearchComponent.html",[0,0.075,3,0.093,4,0.081,5,0.081,10,0.261,11,0.677,12,1.272,21,1.019,22,0.626,23,0.601,26,1.254,28,0.776,29,0.014,30,0.913,47,0.228,49,0.623,50,0.093,53,0.005,54,0.008,55,0.005,56,1.581,57,1.326,58,1.542,59,1.598,60,1.598,61,1.598,62,1.598,64,1.598,65,3.893,66,3.749,68,2.365,70,2.365,74,2.239,75,2.191,77,0.601,78,1.083,79,2.365,80,2.365,81,1.598,82,3.111,83,1.598,84,1.598,85,1.003,86,1.598,87,1.271,88,1.598,89,1.271,90,1.598,91,1.326,92,1.598,93,2.474,94,1.598,95,1.326,96,1.598,97,1.326,98,1.598,99,1.326,100,1.983,101,1.598,102,1.598,156,4.175,181,3.332,185,1.733,194,1.171,195,1.326,198,4.614,199,0.748,204,1.598,209,1.684,275,1.881,319,2.966,325,3.278,332,3.332,344,3.507,393,3.682,415,2.63,723,3.22,733,2.799,783,2.176,828,2.63,829,5.33,830,4.477,831,5.33,832,5.33,833,5.33,834,5.33,835,5.33,836,3.026,837,4.477,838,3.026,839,3.026,840,3.026,841,4.477,842,4.477,843,4.477,844,3.026,845,3.026,846,3.026,847,4.477,848,3.026,849,3.026,850,2.63,851,3.026,852,3.026,853,3.026,854,3.026,855,3.026,856,3.026,857,3.026,858,3.026,859,4.477]],["title/modules/SearchModule.html",[103,1.131,860,2.844]],["body/modules/SearchModule.html",[0,0.1,3,0.124,4,0.109,5,0.109,29,0.014,47,0.251,50,0.124,53,0.007,54,0.009,55,0.007,58,2.155,77,0.804,78,1.448,85,2.536,93,2.313,103,1.158,105,2.227,106,1.94,107,3.305,108,2.035,109,1.896,110,2.422,117,2.908,118,2.138,119,1.854,121,2.219,124,2.219,131,2.531,153,1.826,387,3.667,388,3.667,400,3.065,401,2.138,550,4.265,679,3.172,860,5.843,861,3.52,862,4.048,863,4.048,864,3.52,865,4.84,866,4.84,867,3.172,868,4.048,869,3.52,870,4.048]],["title/classes/SearchResult.html",[0,0.098,733,2.472]],["body/classes/SearchResult.html",[0,0.077,1,3.997,2,1.064,3,0.095,4,0.083,5,0.083,7,0.685,8,1.125,9,1.466,10,0.267,11,0.688,12,1.389,17,3.312,19,1.833,20,1.691,21,1.032,22,0.811,23,0.613,24,1.085,25,3.003,26,1.393,27,2.063,28,0.792,29,0.014,30,0.449,31,1.105,32,1.064,33,1.432,36,2.42,37,1.897,38,2.063,39,2.063,40,1.024,41,2.5,42,1.298,43,1.196,44,1.298,45,1.298,46,1.298,47,0.187,48,0.737,49,0.937,50,0.14,51,0.297,52,0.764,53,0.005,54,0.008,55,0.005,74,1.91,75,1.691,109,1.064,199,1.125,206,1.481,244,2.42,307,2.222,308,3.27,441,3.143,480,3.72,698,4.279,702,2.222,710,2.222,711,2.222,712,2.222,730,3.974,731,5.721,732,4.661,733,2.843,734,2.686,735,4.691,736,2.686,737,2.686,738,2.686,739,4.691,740,2.686,763,2.686,764,2.686]],["title/modules/SearchRoutingModule.html",[103,1.131,865,2.641]],["body/modules/SearchRoutingModule.html",[0,0.133,3,0.165,4,0.145,5,0.145,29,0.014,47,0.248,50,0.204,53,0.009,54,0.011,55,0.009,56,1.595,77,1.068,93,2.781,105,1.783,110,2.081,121,2.167,124,2.668,149,3.362,150,4.138,151,3.496,152,2.84,153,1.783,155,3.868,548,4.213,865,4.421,869,4.676,871,5.378,872,5.378,873,5.378]],["title/components/SettingsComponent.html",[56,1.173,95,1.733]],["body/components/SettingsComponent.html",[0,0.106,3,0.131,4,0.115,5,0.115,10,0.368,21,1.09,23,1.275,26,1.05,29,0.014,47,0.148,50,0.131,53,0.007,54,0.01,55,0.007,56,1.906,57,1.869,58,1.963,59,2.252,60,2.252,61,2.252,62,2.252,64,2.252,65,4.16,66,3.959,68,3.012,70,3.012,77,0.846,78,1.525,79,3.012,80,3.012,81,2.252,82,3.623,83,2.252,84,2.252,85,1.414,86,2.252,87,1.791,88,2.252,89,1.791,90,2.252,91,1.869,92,2.252,93,1.791,94,2.252,95,3.007,96,2.252,97,1.869,98,2.252,99,1.869,100,1.586,101,2.252,102,2.252,185,2.207,194,1.65,195,1.869,208,4.933,275,2.395,319,3.576,325,3.818,604,4.467,874,3.707,875,6.425,876,5.702,877,4.263,878,4.263]],["title/components/SidenavComponent.html",[56,1.173,97,1.733]],["body/components/SidenavComponent.html",[0,0.089,3,0.111,4,0.097,5,0.097,10,0.31,12,0.613,21,1.123,22,0.539,23,0.714,26,1.082,28,0.922,29,0.014,30,0.522,47,0.221,50,0.111,53,0.006,54,0.009,55,0.006,56,1.743,57,1.576,58,1.746,59,1.899,60,1.899,61,1.899,62,1.899,64,1.899,65,4.034,66,3.934,68,2.679,70,2.679,74,1.51,75,1.337,77,0.714,78,1.286,79,2.679,80,2.679,81,1.899,82,3.371,83,1.899,84,1.899,85,1.192,86,1.899,87,1.51,88,1.899,89,1.51,90,1.899,91,1.576,92,1.899,93,1.51,94,1.899,95,1.576,96,1.899,97,2.798,98,1.899,99,1.576,100,1.337,101,1.899,102,1.899,119,2.323,137,2.401,139,3.673,140,2.401,146,3.924,147,3.973,178,3.552,185,1.963,194,1.391,195,1.576,209,2.001,275,2.13,319,3.271,325,3.552,337,2.585,349,2.585,359,2.585,360,2.816,361,2.585,362,3.125,373,3.647,381,5.109,532,2.816,641,3.125,642,3.125,669,4.409,670,4.409,879,3.125,880,5.876,881,5.071,882,5.071,883,3.595,884,5.071,885,5.071,886,3.595,887,5.071,888,3.595,889,5.071,890,3.595,891,3.595]],["title/modules/SidenavModule.html",[103,1.131,388,1.896]],["body/modules/SidenavModule.html",[0,0.105,3,0.13,4,0.114,5,0.114,29,0.014,47,0.254,50,0.13,53,0.007,54,0.01,55,0.007,58,2.204,77,0.84,78,1.513,85,2.559,95,2.486,97,2.486,103,1.21,105,2.267,106,2.027,107,3.38,108,2.126,109,1.953,110,2.477,117,2.996,118,2.234,119,1.937,121,2.286,124,2.286,153,1.881,387,3.7,388,3.94,400,3.157,401,2.234,550,4.321,574,4.931,575,3.677,679,3.314,892,4.23,893,4.23,894,4.23,895,4.23,896,3.314,897,4.23,898,4.23]],["title/classes/Temperature.html",[0,0.098,300,2.201]],["body/classes/Temperature.html",[0,0.102,2,1.423,3,0.127,4,0.111,5,0.111,7,0.916,8,1.381,9,1.593,10,0.357,11,0.845,12,1.362,19,2.25,20,2.077,21,1.209,22,0.816,23,0.82,24,1.332,26,1.372,28,1.06,29,0.014,30,0.6,31,1.478,32,1.423,33,1.209,40,1.37,41,2.845,42,1.736,43,1.599,44,1.736,45,1.736,46,1.736,47,0.193,48,0.985,49,1.15,50,0.172,51,0.397,52,1.022,53,0.007,54,0.01,55,0.007,199,1.381,270,4.523,300,3.108,313,3.77,444,3.286,445,2.971,457,3.937,459,3.52,460,2.971,741,5.306,742,5.888,743,3.592,744,3.592,745,3.592,746,3.592]],["title/classes/TimeZone.html",[0,0.098,700,2.472]],["body/classes/TimeZone.html",[0,0.095,2,1.324,3,0.118,4,0.104,5,0.104,7,0.853,8,1.315,9,1.563,10,0.332,11,0.804,12,1.381,19,2.142,20,1.977,21,1.256,22,0.822,23,0.763,24,1.268,26,1.393,28,0.986,29,0.014,30,0.558,31,1.376,32,1.324,33,1.398,34,3.343,35,4.621,37,1.742,40,2.179,41,2.761,42,1.615,43,1.488,44,1.615,45,1.615,46,1.615,47,0.133,48,0.917,49,0.792,50,0.163,51,0.369,52,0.951,53,0.007,54,0.009,55,0.007,306,3.391,451,3.012,452,2.568,700,3.323,701,4.108,747,5.589,748,5.148,749,5.714,750,5.714,751,5.714]],["title/classes/Weather.html",[0,0.098,100,1.471]],["body/classes/Weather.html",[0,0.075,2,1.048,3,0.094,4,0.082,5,0.082,7,0.675,8,1.112,9,1.459,10,0.263,11,0.68,12,1.388,19,1.812,20,1.673,21,1.022,22,0.815,23,0.604,24,1.072,26,1.389,27,2.032,28,0.78,29,0.014,30,0.442,31,1.089,32,1.048,33,1.428,37,1.529,38,2.032,39,2.032,40,2.323,41,2.481,42,1.278,43,1.178,44,1.278,45,1.278,46,1.278,47,0.185,48,0.726,49,1.102,50,0.138,51,0.292,52,0.753,53,0.005,54,0.008,55,0.005,100,1.673,199,1.461,297,3.693,299,3.693,300,3.798,307,2.188,308,2.188,309,2.384,310,2.384,311,3.522,313,2.502,314,2.188,315,2.188,316,2.188,440,1.791,446,4.614,450,3.343,590,3.693,752,5.7,753,5.135,754,5.135,755,5.135,756,2.645,757,3.909,758,2.645,759,2.645,760,2.645,761,2.645]],["title/components/WeatherComponent.html",[56,1.173,99,1.733]],["body/components/WeatherComponent.html",[0,0.106,3,0.131,4,0.115,5,0.115,10,0.368,21,1.09,23,1.275,26,1.05,29,0.014,47,0.148,50,0.131,53,0.007,54,0.01,55,0.007,56,1.906,57,1.869,58,1.963,59,2.252,60,2.252,61,2.252,62,2.252,64,2.252,65,4.16,66,3.959,68,3.012,70,3.012,77,0.846,78,1.525,79,3.012,80,3.012,81,2.252,82,3.623,83,2.252,84,2.252,85,1.414,86,2.252,87,1.791,88,2.252,89,1.791,90,2.252,91,1.869,92,2.252,93,1.791,94,2.252,95,1.869,96,2.252,97,1.869,98,2.252,99,3.007,100,2.66,101,2.252,102,2.252,185,2.207,194,1.65,195,1.869,275,2.395,319,3.576,325,3.818,604,4.467,899,3.707,900,6.425,901,5.702,902,4.263,903,4.263]],["title/modules/WeatherModule.html",[103,1.131,866,2.641]],["body/modules/WeatherModule.html",[0,0.11,3,0.137,4,0.12,5,0.12,29,0.014,47,0.227,50,0.137,53,0.008,54,0.01,55,0.008,58,2.261,77,0.884,78,1.593,85,2.586,99,2.573,103,1.273,105,2.314,106,2.134,107,3.467,108,2.238,109,2.021,110,2.541,117,3.1,118,2.352,119,2.039,121,2.365,124,2.365,153,1.946,387,3.738,388,3.738,400,3.267,401,2.352,866,5.363,904,4.453,905,4.453,906,4.453,907,4.453,908,3.488,909,4.453]],["title/injectables/WeatherService.html",[177,1.661,393,2.472]],["body/injectables/WeatherService.html",[0,0.082,3,0.101,4,0.089,5,0.089,10,0.285,11,0.722,12,1.325,21,0.631,22,0.35,23,0.655,26,1.249,28,0.846,29,0.014,30,0.479,31,2.005,32,1.136,33,1.245,47,0.242,49,0.68,50,0.101,53,0.006,54,0.008,55,0.006,74,2.735,75,2.422,77,0.655,109,1.136,123,1.658,156,5.808,167,3.837,177,2.004,179,2.203,181,2.063,187,2.868,188,4.809,190,3.737,199,1.611,204,1.743,206,1.581,207,2.585,208,2.373,209,1.836,276,2.063,332,4.243,393,2.982,730,2.203,733,2.063,783,2.373,815,5.661,850,2.868,910,2.868,911,4.389,912,5.602,913,5.602,914,5.602,915,5.602,916,3.299,917,3.299,918,3.299,919,3.299,920,3.299,921,3.299,922,6.512,923,6.512,924,6.512,925,6.512,926,6.512]],["title/coverage.html",[927,4.712]],["body/coverage.html",[0,0.182,1,1.168,5,0.057,6,2.644,7,1.735,9,0.449,22,0.223,25,1.168,29,0.014,51,0.699,53,0.004,54,0.006,55,0.004,56,1.899,57,0.92,58,2.054,63,1.825,85,0.696,87,0.882,89,0.882,91,0.92,93,0.882,95,0.92,97,0.92,99,0.92,100,0.781,105,1.978,109,1.162,167,1.312,168,1.825,169,1.825,175,1.168,177,2.037,178,1.168,180,1.825,199,0.519,205,2.644,229,3.316,246,1.645,250,1.645,255,1.402,257,3.239,258,3.239,264,1.236,268,1.402,274,1.312,291,1.236,292,2.644,300,1.168,303,1.51,313,1.168,318,1.825,338,2.644,368,7.197,390,1.402,391,1.402,392,1.402,393,1.312,394,2.644,404,2.427,406,1.51,424,1.825,425,1.645,429,1.51,441,1.109,442,2.644,443,1.312,446,1.312,447,2.644,450,1.312,454,1.312,455,2.644,457,1.168,458,1.312,459,1.168,465,1.51,466,1.825,487,2.644,508,1.825,543,2.644,583,1.168,584,2.644,586,1.312,587,1.51,588,1.312,590,1.312,599,1.825,611,2.644,617,1.236,618,2.644,622,1.825,678,2.644,685,2.644,692,1.825,695,1.51,696,2.644,700,1.312,701,1.312,707,1.51,720,2.644,723,1.51,724,1.825,725,1.825,730,1.402,731,2.644,733,1.312,741,2.644,747,2.644,752,2.644,773,1.645,775,1.825,800,1.825,801,2.644,822,1.825,828,1.825,867,2.644,874,1.825,879,1.825,896,2.644,899,1.825,908,2.644,910,1.825,927,1.825,928,2.099,929,2.099,930,2.099,931,6.949,932,4.233,933,7.72,934,7.749,935,4.849,936,5.675,937,5.965,938,2.099,939,3.375,940,2.099,941,5.313,942,4.233,943,2.099,944,2.099,945,2.099,946,3.375,947,4.216,948,4.216,949,2.935,950,1.825,951,2.099,952,2.099]],["title/dependencies.html",[106,2.283,953,3.292]],["body/dependencies.html",[29,0.014,43,1.933,53,0.009,54,0.011,55,0.009,77,0.991,106,2.393,108,2.509,126,5.494,127,4.951,152,2.637,204,2.637,234,4.341,401,2.637,485,4.341,486,4.341,660,4.341,954,4.993,955,6.926,956,4.993,957,4.993,958,4.993,959,4.993,960,4.993,961,4.993,962,4.993,963,4.993,964,4.993,965,4.993,966,4.993,967,4.993,968,4.993,969,4.993,970,4.993,971,4.993,972,6.32,973,4.993,974,4.993,975,4.993,976,4.993,977,4.993,978,4.993,979,4.993,980,4.993]],["title/miscellaneous/enumerations.html",[981,2.367,982,4.14]],["body/miscellaneous/enumerations.html",[10,0.392,29,0.014,53,0.008,54,0.01,55,0.008,75,3.041,100,2.212,133,4.276,136,4.276,139,3.717,291,3.499,432,4.276,441,3.14,585,4.276,911,4.657,981,3.266,982,3.948,983,4.541,984,5.945,985,4.541,986,5.945,987,5.945,988,4.541,989,5.945,990,5.945,991,4.541,992,5.945,993,5.945,994,5.945,995,4.541,996,5.945,997,5.945,998,4.541,999,5.945,1000,5.945,1001,5.169,1002,4.541,1003,5.945,1004,4.541,1005,5.945,1006,5.945,1007,5.945,1008,5.945,1009,5.945,1010,5.945,1011,5.945]],["title/index.html",[10,0.284,825,2.862,1012,3.292]],["body/index.html",[4,0.122,21,0.866,29,0.01,53,0.008,54,0.01,55,0.008,56,1.964,66,2.276,76,5.755,119,2.074,199,1.12,329,3.547,359,3.256,583,2.52,721,4.649,732,3.547,748,3.547,955,3.937,1013,5.934,1014,4.528,1015,6.619,1016,6.619,1017,7.483,1018,4.528,1019,4.528,1020,4.528,1021,4.528,1022,4.528,1023,4.528,1024,5.934,1025,7.625,1026,4.528,1027,4.528,1028,4.528,1029,4.528,1030,4.528,1031,4.528,1032,4.528,1033,4.528,1034,4.528,1035,6.619,1036,6.619,1037,4.528,1038,7.293,1039,4.528,1040,4.528,1041,4.528,1042,4.528,1043,4.528,1044,4.528,1045,3.937,1046,5.934,1047,7.025,1048,4.528,1049,5.934,1050,5.934,1051,4.528,1052,7.025,1053,4.528,1054,4.528,1055,4.528,1056,6.619,1057,4.528,1058,4.528,1059,4.528,1060,3.547,1061,4.528,1062,4.528,1063,4.528]],["title/modules.html",[105,1.797]],["body/modules.html",[29,0.011,53,0.009,54,0.011,55,0.009,104,3.636,105,1.676,115,3.377,116,3.377,127,6.198,387,2.423,388,2.423,389,3.377,537,3.636,542,3.377,550,2.976,605,3.636,610,3.377,677,3.377,860,3.636,865,3.377,866,3.377,1064,7.912,1065,7.912,1066,8.222,1067,7.822,1068,7.822]],["title/overview.html",[1060,4.245]],["body/overview.html",[2,0.947,29,0.014,53,0.005,54,0.007,55,0.005,57,2.893,58,0.947,78,0.984,85,2.63,103,0.787,104,5.006,105,0.912,106,1.318,107,1.453,108,1.382,109,0.947,110,1.065,111,2.392,112,2.392,113,2.392,114,2.392,115,3.362,116,5.28,117,2.202,118,1.453,119,1.26,151,1.453,178,2.802,179,1.837,256,0.984,382,2.392,383,2.392,384,2.392,385,2.392,386,2.392,387,3.906,388,3.895,389,3.362,390,3.362,391,3.362,392,3.362,393,3.147,537,5.319,538,2.392,541,2.392,542,3.362,550,3.553,605,5.319,606,2.392,609,2.392,610,3.362,673,2.392,676,2.392,677,3.362,773,2.155,860,5.501,861,2.392,864,2.392,865,3.362,866,4.882,1060,2.155,1069,2.751,1070,2.751,1071,2.751,1072,2.751,1073,2.751,1074,2.751,1075,2.751]],["title/routes.html",[151,2.862]],["body/routes.html",[29,0.013,53,0.011,54,0.013,55,0.011,151,3.398]],["title/miscellaneous/variables.html",[981,2.367,1076,4.14]],["body/miscellaneous/variables.html",[7,1.036,10,0.211,22,0.83,29,0.014,33,1.158,37,0.698,53,0.004,54,0.007,55,0.004,58,2.511,74,3.295,75,2.918,85,0.809,87,1.025,89,1.025,91,1.07,93,1.025,95,1.07,97,1.07,99,1.07,100,1.415,105,2.417,109,1.817,205,4.133,221,2.735,223,2.735,229,1.912,239,5.266,246,2.98,247,3.307,248,2.122,249,2.122,250,2.98,251,2.122,252,2.122,253,2.122,254,2.122,257,1.63,258,2.54,268,2.54,269,1.756,338,4.133,387,1.17,388,1.17,394,1.912,419,2.98,425,2.98,487,4.133,543,1.912,585,2.735,611,1.912,617,2.239,678,1.912,867,1.912,896,1.912,908,1.912,911,2.98,947,2.122,948,2.122,949,2.122,950,3.307,981,1.756,1001,3.307,1045,3.307,1076,2.122,1077,3.803,1078,5.275,1079,5.275,1080,3.803,1081,3.803,1082,3.803,1083,3.803,1084,3.803,1085,3.803,1086,3.803,1087,3.803,1088,2.441,1089,3.803,1090,3.803,1091,3.803,1092,3.803,1093,3.803,1094,3.803,1095,3.803,1096,3.803,1097,3.803,1098,3.803,1099,5.275,1100,3.803,1101,3.803,1102,3.803,1103,3.803,1104,3.803,1105,3.803,1106,3.803,1107,3.803,1108,3.803,1109,3.803,1110,3.803,1111,3.803,1112,2.441,1113,2.441,1114,2.441,1115,2.441]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":668,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":532,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":1073,"title":{},"body":{"overview.html":{}}}],["1.1.1",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":357,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":530,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":362,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":664,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1069,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["17",{"_index":1074,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1072,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":358,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":671,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":890,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":531,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["3.6.0",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":889,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.855499",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1071,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":529,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400px",{"_index":525,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["4c87",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":648,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6.6.0",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":654,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1075,"title":{},"body":{"overview.html":{}}}],["8.64e+7",{"_index":269,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"miscellaneous/variables.html":{}}}],["868c",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1070,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":534,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["abstract",{"_index":235,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["action",{"_index":662,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":657,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":779,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":1,"title":{"classes/AdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{},"coverage.html":{}}}],["administrativearea(args?.administrativearea",{"_index":711,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["administrativearea(args?.country",{"_index":734,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["aes",{"_index":483,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.decrypt(cipher",{"_index":491,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.encrypt(value",{"_index":494,"title":{},"body":{"classes/Encoding.html":{}}}],["afa5425d",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afd9",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["age",{"_index":272,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["align",{"_index":644,"title":{},"body":{"components/HeaderComponent.html":{}}}],["amount",{"_index":356,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":1015,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":401,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{},"interfaces/CacheModel.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"interfaces/CacheModel.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":57,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":329,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"index.html":{}}}],["applicationservice",{"_index":178,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":104,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":115,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":167,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["args",{"_index":31,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["args?.country",{"_index":713,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["args?.dailyforecasts",{"_index":594,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.dailyforecasts?.map(item",{"_index":595,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.day",{"_index":759,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.geoposition",{"_index":715,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["args?.night",{"_index":761,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.region",{"_index":717,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["args?.timezone",{"_index":719,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["args[key",{"_index":238,"title":{},"body":{"classes/BaseModel.html":{}}}],["array",{"_index":440,"title":{},"body":{"injectables/ContextService.html":{},"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Weather.html":{}}}],["artifacts",{"_index":1039,"title":{},"body":{"index.html":{}}}],["atob(value",{"_index":489,"title":{},"body":{"classes/Encoding.html":{}}}],["auto",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{}}}],["autocomplete",{"_index":911,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocompletemodule",{"_index":554,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":1030,"title":{},"body":{"index.html":{}}}],["available",{"_index":1068,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":350,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["basemodel",{"_index":9,"title":{"classes/BaseModel.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["basemodel:4",{"_index":42,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:5",{"_index":44,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:6",{"_index":45,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:7",{"_index":46,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["baseurl",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["black",{"_index":527,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":306,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"classes/TimeZone.html":{}}}],["bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":665,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bottom",{"_index":536,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["browse",{"_index":1066,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":658,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":672,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":493,"title":{},"body":{"classes/Encoding.html":{}}}],["build",{"_index":1038,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":556,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":1006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":271,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{}}}],["cache.service",{"_index":414,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["cache.service.ts",{"_index":258,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache.service.ts:11",{"_index":793,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.service.ts:12",{"_index":795,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.service.ts:19",{"_index":796,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cache.service.ts:23",{"_index":797,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cache.service.ts:35",{"_index":798,"title":{},"body":{"injectables/RequestCacheService.html":{}}}],["cached",{"_index":278,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["cached.lastread",{"_index":282,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["cachedresponse",{"_index":818,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["cachemodel",{"_index":255,"title":{"interfaces/CacheModel.html":{}},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"coverage.html":{}}}],["calc(#{$navbar",{"_index":650,"title":{},"body":{"components/HeaderComponent.html":{}}}],["camelcase",{"_index":246,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["caption",{"_index":526,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":521,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":558,"title":{},"body":{"modules/FeatureModule.html":{}}}],["category",{"_index":686,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["center",{"_index":646,"title":{},"body":{"components/HeaderComponent.html":{}}}],["change",{"_index":1032,"title":{},"body":{"index.html":{}}}],["check",{"_index":1059,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":560,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":548,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["cipher",{"_index":490,"title":{},"body":{"classes/Encoding.html":{}}}],["city",{"_index":1003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"overview.html":{}}}],["cli",{"_index":1016,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["client_id",{"_index":487,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":382,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":383,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":384,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":385,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":386,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":538,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":540,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":539,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":541,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_forecastmodule",{"_index":606,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_forecastmodule_declarations",{"_index":607,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":608,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":609,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":673,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":675,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":674,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":676,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":861,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":862,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":863,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":864,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":892,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":894,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":893,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":895,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":904,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_declarations",{"_index":905,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":906,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":907,"title":{},"body":{"modules/WeatherModule.html":{}}}],["code",{"_index":748,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":1021,"title":{},"body":{"index.html":{}}}],["color",{"_index":522,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["colorscheme",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colorscheme.light",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{}}}],["command",{"_index":1061,"title":{},"body":{"index.html":{}}}],["common.scss",{"_index":349,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/request",{"_index":403,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":405,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":407,"title":{},"body":{"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":400,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["component",{"_index":56,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":291,"title":{"classes/Conditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["config",{"_index":885,"title":{},"body":{"components/SidenavComponent.html":{}}}],["const",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Encoding.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["constants/color",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/data",{"_index":433,"title":{},"body":{"injectables/ContextService.html":{}}}],["constants/panel",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":326,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{}}}],["constructor(args",{"_index":24,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["constructor(cache",{"_index":803,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["constructor(config",{"_index":883,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/WeatherService.html":{}}}],["constructor(private",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":836,"title":{},"body":{"components/SearchComponent.html":{}}}],["container",{"_index":320,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":322,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":321,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":408,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":409,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":679,"title":{},"body":{"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":680,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":681,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":410,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":897,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":898,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":411,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":85,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":116,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":422,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":389,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["context",{"_index":425,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextservice",{"_index":390,"title":{"injectables/ContextService.html":{}},"body":{"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"coverage.html":{},"overview.html":{}}}],["countries",{"_index":999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":441,"title":{"classes/Country.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":13,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["coverage",{"_index":927,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":19,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["crypto",{"_index":485,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["currentconditions",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentdate",{"_index":626,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentroute",{"_index":323,"title":{},"body":{"components/ContainerComponent.html":{}}}],["d",{"_index":640,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dailyforecasts",{"_index":592,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["datasets",{"_index":432,"title":{},"body":{"injectables/ContextService.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":40,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["date.now",{"_index":284,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/ResponseInterceptor.html":{}}}],["day",{"_index":446,"title":{"classes/Day.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["debouncetime",{"_index":846,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":467,"title":{},"body":{"classes/Encoding.html":{}}}],["decoded",{"_index":500,"title":{},"body":{"classes/Encoding.html":{}}}],["decryptaes",{"_index":468,"title":{},"body":{"classes/Encoding.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Day.html":{},"classes/Encoding.html":{},"components/HeaderComponent.html":{},"injectables/RequestCacheService.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IDictionary.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":106,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":1027,"title":{},"body":{"index.html":{}}}],["development",{"_index":1023,"title":{},"body":{"index.html":{}}}],["df144bdb3b49",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1037,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1042,"title":{},"body":{"index.html":{}}}],["display",{"_index":359,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":1041,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":847,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":562,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1053,"title":{},"body":{"index.html":{}}}],["ease",{"_index":670,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["eeee",{"_index":638,"title":{},"body":{"components/HeaderComponent.html":{}}}],["effectivedate",{"_index":687,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":688,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["element",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":454,"title":{"classes/Elevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["elevation(args?.elevation",{"_index":621,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["enableprodmode",{"_index":335,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enc",{"_index":484,"title":{},"body":{"classes/Encoding.html":{}}}],["encodebase64",{"_index":469,"title":{},"body":{"classes/Encoding.html":{}}}],["encoded",{"_index":498,"title":{},"body":{"classes/Encoding.html":{}}}],["encoding",{"_index":465,"title":{"classes/Encoding.html":{}},"body":{"classes/Encoding.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["encoding.decodebase64(providers.weather.apikey",{"_index":817,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["encryptaes",{"_index":470,"title":{},"body":{"classes/Encoding.html":{}}}],["encrypted",{"_index":496,"title":{},"body":{"classes/Encoding.html":{}}}],["end",{"_index":1052,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":689,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":690,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["englishname",{"_index":14,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["englishtype",{"_index":15,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["entries",{"_index":288,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["entry.lastread",{"_index":290,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["enumerations",{"_index":982,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"classes/Encoding.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ISearchResult.html":{},"interceptors/RequestInterceptor.html":{},"classes/SearchResult.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":338,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":753,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["epochtime",{"_index":293,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["event",{"_index":344,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.query",{"_index":856,"title":{},"body":{"components/SearchComponent.html":{}}}],["event.ts",{"_index":725,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":347,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":631,"title":{},"body":{"components/HeaderComponent.html":{}}}],["execute",{"_index":1049,"title":{},"body":{"index.html":{}}}],["expired",{"_index":287,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["extend",{"_index":641,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["f",{"_index":1005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":659,"title":{},"body":{"components/HeaderComponent.html":{}}}],["failure",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorites",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":510,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":509,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":544,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":545,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":87,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":537,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":547,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":542,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":550,"title":{"modules/FeatureModule.html":{}},"body":{"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules.html":{},"overview.html":{}}}],["fieldsetmodule",{"_index":564,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1033,"title":{},"body":{"index.html":{}}}],["first",{"_index":513,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":1044,"title":{},"body":{"index.html":{}}}],["flagicon",{"_index":739,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["flex",{"_index":360,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":729,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":660,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["foreach(key",{"_index":438,"title":{},"body":{"injectables/ContextService.html":{}}}],["forecast",{"_index":583,"title":{"classes/Forecast.html":{}},"body":{"classes/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast.component.html",{"_index":601,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":600,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":1020,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":1022,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":612,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":613,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":89,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodule",{"_index":605,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{},"overview.html":{}}}],["forecastroutes",{"_index":615,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":610,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["forecasts",{"_index":585,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forroot",{"_index":396,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":397,"title":{},"body":{"modules/ContainerModule.html":{}}}],["fromstorage",{"_index":471,"title":{},"body":{"classes/Encoding.html":{}}}],["fromstorage(key",{"_index":477,"title":{},"body":{"classes/Encoding.html":{}}}],["fsevents",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1055,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1035,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1014,"title":{},"body":{"index.html":{}}}],["geoposition",{"_index":617,"title":{"classes/GeoPosition.html":{}},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(req",{"_index":265,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["getconditions",{"_index":912,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrentposition",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getforecast",{"_index":913,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getgeoposition",{"_index":914,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticon",{"_index":294,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["getlocation",{"_index":915,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getting",{"_index":1012,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":182,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["gmtoffset",{"_index":749,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["go",{"_index":1058,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":352,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":1067,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":773,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":774,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":43,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"dependencies.html":{}}}],["guid.newguid",{"_index":243,"title":{},"body":{"classes/BaseModel.html":{}}}],["hasprecipitation",{"_index":295,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["header",{"_index":623,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":625,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":624,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":91,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":387,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":683,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":677,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headline",{"_index":586,"title":{"classes/Headline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["headline(args?.headline",{"_index":598,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":361,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1056,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/dictionary",{"_index":435,"title":{},"body":{"injectables/ContextService.html":{}}}],["helpers/encoding",{"_index":810,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["helpers/search",{"_index":849,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":1011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":1029,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":402,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httpevent",{"_index":808,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":806,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":809,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":263,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":262,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/ResponseInterceptor.html":{}}}],["https://dataservice.accuweather.com",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comcurrentconditions/v1",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comforecasts/v1/daily/5day",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":25,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{},"coverage.html":{}}}],["icon",{"_index":448,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["iconditions",{"_index":303,"title":{"interfaces/IConditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["iconphrase",{"_index":449,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":443,"title":{"interfaces/ICountry.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["iday",{"_index":450,"title":{"interfaces/IDay.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["identifier",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["idictionary",{"_index":429,"title":{"interfaces/IDictionary.html":{}},"body":{"injectables/ContextService.html":{},"interfaces/IDictionary.html":{},"coverage.html":{}}}],["ielevation",{"_index":458,"title":{"interfaces/IElevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":587,"title":{"interfaces/IForecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["igeoposition",{"_index":175,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["iheadline",{"_index":588,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":695,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["image",{"_index":649,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imetric",{"_index":459,"title":{"interfaces/IMetric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["imperial",{"_index":456,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["implements",{"_index":275,"title":{},"body":{"interfaces/CacheModel.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":47,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./search/search.module').then(m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":693,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":41,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["initcontext",{"_index":426,"title":{},"body":{"injectables/ContextService.html":{}}}],["injectable",{"_index":177,"title":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/RequestCacheService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"interfaces/CacheModel.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":179,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/RequestCacheService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":887,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputevent",{"_index":728,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":882,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":566,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":346,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept",{"_index":802,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":805,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":404,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":801,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:10",{"_index":824,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:12",{"_index":807,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:7",{"_index":823,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:9",{"_index":804,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptors",{"_index":799,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":51,"title":{"interfaces/CacheModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/AdministrativeArea.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":256,"title":{},"body":{"interfaces/CacheModel.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["isalias",{"_index":697,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["isdaylightsaving",{"_index":750,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["isdaytime",{"_index":296,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":723,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isearchresult",{"_index":730,"title":{"interfaces/ISearchResult.html":{}},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["isexpired",{"_index":281,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["isfavorite",{"_index":708,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["isloading",{"_index":184,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":524,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["item.substring(1)).join",{"_index":254,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["item[0].touppercase",{"_index":253,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["itemperature",{"_index":313,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["items",{"_index":645,"title":{},"body":{"components/HeaderComponent.html":{}}}],["itimezone",{"_index":701,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["iweather",{"_index":590,"title":{"interfaces/IWeather.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["jquery",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":486,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["json",{"_index":814,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["json.parse(decoded",{"_index":502,"title":{},"body":{"classes/Encoding.html":{}}}],["json.stringify(value",{"_index":507,"title":{},"body":{"classes/Encoding.html":{}}}],["justify",{"_index":363,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["karma",{"_index":1051,"title":{},"body":{"index.html":{}}}],["key",{"_index":480,"title":{},"body":{"classes/Encoding.html":{},"interfaces/IDictionary.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["key).tostring",{"_index":495,"title":{},"body":{"classes/Encoding.html":{}}}],["key).tostring(enc.utf8",{"_index":492,"title":{},"body":{"classes/Encoding.html":{}}}],["keyfiltermodule",{"_index":568,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":515,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["languages",{"_index":1000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastread",{"_index":259,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["latitude",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":535,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":16,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":355,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":351,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":297,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["literal",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":1018,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localizedname",{"_index":17,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["localizedtype",{"_index":18,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":298,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["localstorage.getitem(key",{"_index":497,"title":{},"body":{"classes/Encoding.html":{}}}],["localstorage.setitem(key",{"_index":504,"title":{},"body":{"classes/Encoding.html":{}}}],["location",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationmodel",{"_index":707,"title":{"classes/LocationModel.html":{}},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["locationresolver",{"_index":406,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":1001,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationtype",{"_index":987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.searchmodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":276,"title":{},"body":{"interfaces/CacheModel.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["map(event",{"_index":827,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["map(item",{"_index":252,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["map(x",{"_index":788,"title":{},"body":{"guards/LocationResolver.html":{}}}],["margin",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maxage",{"_index":268,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":270,"title":{},"body":{"interfaces/CacheModel.html":{},"interfaces/ITemperature.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"classes/Temperature.html":{}}}],["measure",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":652,"title":{},"body":{"components/HeaderComponent.html":{}}}],["metadata",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":185,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":457,"title":{"classes/Metric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["metric(args?.imperial",{"_index":462,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.maximum",{"_index":744,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.metric",{"_index":464,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.minimum",{"_index":746,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["min",{"_index":656,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":742,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["miscellaneous",{"_index":981,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":639,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mobilelink",{"_index":299,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["mode.enum",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":49,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["model.ts:10",{"_index":444,"title":{},"body":{"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["model.ts:11",{"_index":452,"title":{},"body":{"classes/Day.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{}}}],["model.ts:12",{"_index":451,"title":{},"body":{"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/TimeZone.html":{}}}],["model.ts:13",{"_index":34,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:14",{"_index":35,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:15",{"_index":36,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Headline.html":{},"classes/SearchResult.html":{}}}],["model.ts:16",{"_index":38,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Day.html":{},"classes/Headline.html":{},"classes/SearchResult.html":{},"classes/Weather.html":{}}}],["model.ts:17",{"_index":39,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/SearchResult.html":{},"classes/Weather.html":{}}}],["model.ts:18",{"_index":27,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/SearchResult.html":{},"classes/Weather.html":{}}}],["model.ts:19",{"_index":307,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/SearchResult.html":{},"classes/Weather.html":{}}}],["model.ts:20",{"_index":308,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/SearchResult.html":{},"classes/Weather.html":{}}}],["model.ts:21",{"_index":309,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:22",{"_index":310,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:23",{"_index":311,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:24",{"_index":312,"title":{},"body":{"classes/Conditions.html":{},"classes/LocationModel.html":{}}}],["model.ts:25",{"_index":304,"title":{},"body":{"classes/Conditions.html":{},"classes/LocationModel.html":{}}}],["model.ts:26",{"_index":763,"title":{},"body":{"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["model.ts:27",{"_index":764,"title":{},"body":{"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["model.ts:28",{"_index":765,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:29",{"_index":766,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:30",{"_index":305,"title":{},"body":{"classes/Conditions.html":{},"classes/LocationModel.html":{}}}],["model.ts:31",{"_index":767,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:32",{"_index":768,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:33",{"_index":769,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:34",{"_index":770,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:35",{"_index":771,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:36",{"_index":772,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:37",{"_index":762,"title":{},"body":{"classes/LocationModel.html":{}}}],["model.ts:4",{"_index":231,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:5",{"_index":232,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:6",{"_index":233,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:7",{"_index":230,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:9",{"_index":445,"title":{},"body":{"classes/Country.html":{},"classes/Elevation.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["models/administrativearea",{"_index":702,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["models/autocomplete",{"_index":850,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/base",{"_index":48,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["models/conditions",{"_index":703,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/country",{"_index":704,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/day",{"_index":756,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/elevation",{"_index":619,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":705,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/geoposition",{"_index":176,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/headline",{"_index":589,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["models/metric",{"_index":460,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["models/temperature",{"_index":314,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/timezone",{"_index":706,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["models/weather",{"_index":591,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":103,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":105,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":399,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":1057,"title":{},"body":{"index.html":{}}}],["ms",{"_index":273,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["multi",{"_index":418,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":643,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1028,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":336,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"injectables/ContextService.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/IConditions.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["newentry",{"_index":283,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["next",{"_index":343,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req",{"_index":821,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":826,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["nextoffsetchange",{"_index":751,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["ng",{"_index":1025,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["ngoninit",{"_index":325,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":754,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["none",{"_index":655,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":503,"title":{},"body":{"classes/Encoding.html":{},"guards/LocationResolver.html":{}}}],["number",{"_index":37,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"classes/SearchResult.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":239,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["object.keys(args)?.foreach(key",{"_index":236,"title":{},"body":{"classes/BaseModel.html":{}}}],["object.keys(datasets",{"_index":437,"title":{},"body":{"injectables/ContextService.html":{}}}],["observable",{"_index":332,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["of(cachedresponse",{"_index":820,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["of(null",{"_index":791,"title":{},"body":{"guards/LocationResolver.html":{}}}],["onchange",{"_index":427,"title":{},"body":{"injectables/ContextService.html":{}}}],["oninit",{"_index":319,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":831,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":832,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":324,"title":{},"body":{"components/ContainerComponent.html":{}}}],["opacity",{"_index":528,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["original",{"_index":247,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["original.split",{"_index":251,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["original.substring(1",{"_index":249,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["original[0].tolowercase",{"_index":248,"title":{},"body":{"classes/BaseModel.html":{},"miscellaneous/variables.html":{}}}],["originalevent",{"_index":726,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":635,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":628,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":1008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1060,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":953,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":1063,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelmode.push",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["panelstate",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":348,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["params",{"_index":815,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["path",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["pathmatch",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":787,"title":{},"body":{"guards/LocationResolver.html":{}}}],["pipe(map(results",{"_index":924,"title":{},"body":{"injectables/WeatherService.html":{}}}],["placeholder",{"_index":517,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["popper.js",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":533,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["preview",{"_index":1019,"title":{},"body":{"index.html":{}}}],["previous",{"_index":520,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":354,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":553,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/autocomplete",{"_index":555,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":557,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":559,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":561,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":563,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":565,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":567,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":569,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":571,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":573,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":575,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":577,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":579,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":581,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":552,"title":{},"body":{"modules/FeatureModule.html":{}}}],["private",{"_index":181,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":1043,"title":{},"body":{"index.html":{}}}],["production",{"_index":1045,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1013,"title":{},"body":{"index.html":{}}}],["promise",{"_index":782,"title":{},"body":{"guards/LocationResolver.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"injectables/RequestCacheService.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":1054,"title":{},"body":{"index.html":{}}}],["provide",{"_index":416,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Day.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ISearchResult.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${this.country.id}/shiny/32.png",{"_index":740,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["providers.weather.icons}/${this.icon}.svg",{"_index":453,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["providers.weather.icons}/${this.weathericon}.svg",{"_index":317,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["public",{"_index":12,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":1009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["put",{"_index":792,"title":{},"body":{"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["put(req",{"_index":267,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["q",{"_index":923,"title":{},"body":{"injectables/WeatherService.html":{}}}],["query",{"_index":727,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":570,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":667,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rank",{"_index":698,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["readonly",{"_index":183,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1062,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":841,"title":{},"body":{"components/SearchComponent.html":{}}}],["region",{"_index":699,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["reload",{"_index":1031,"title":{},"body":{"index.html":{}}}],["remove",{"_index":286,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["representative",{"_index":516,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":794,"title":{},"body":{"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":812,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.params.append('apikey",{"_index":816,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.url.includes(providers.weather.baseurl",{"_index":811,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":277,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["requestcache",{"_index":264,"title":{"classes/RequestCache.html":{}},"body":{"interfaces/CacheModel.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["requestcacheservice",{"_index":274,"title":{"injectables/RequestCacheService.html":{}},"body":{"interfaces/CacheModel.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"coverage.html":{}}}],["requestinterceptor",{"_index":391,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":776,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":778,"title":{},"body":{"guards/LocationResolver.html":{}}}],["response",{"_index":260,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["responseinterceptor",{"_index":392,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["responsetype",{"_index":813,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["result",{"_index":53,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.tostring",{"_index":859,"title":{},"body":{"components/SearchComponent.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.map(item",{"_index":925,"title":{},"body":{"injectables/WeatherService.html":{}}}],["return",{"_index":280,"title":{},"body":{"interfaces/CacheModel.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["returns",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":647,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ripplemodule",{"_index":572,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":781,"title":{},"body":{"guards/LocationResolver.html":{}}}],["router",{"_index":327,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":423,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":549,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":616,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":684,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":873,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":151,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{}}}],["routing.module.ts",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["run",{"_index":1017,"title":{},"body":{"index.html":{}}}],["running",{"_index":1046,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":783,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["scaffolding",{"_index":1034,"title":{},"body":{"index.html":{}}}],["scheme.enum",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["scheme.enum.ts",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["screen",{"_index":653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":830,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":829,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":868,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":869,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["searchcomponent",{"_index":93,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":860,"title":{"modules/SearchModule.html":{}},"body":{"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchpattern",{"_index":833,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchresult",{"_index":733,"title":{"classes/SearchResult.html":{}},"body":{"interfaces/ISearchResult.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["searchresult(item",{"_index":926,"title":{},"body":{"injectables/WeatherService.html":{}}}],["searchroutes",{"_index":872,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":865,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["searchtext",{"_index":834,"title":{},"body":{"components/SearchComponent.html":{}}}],["second",{"_index":518,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["secret",{"_index":488,"title":{},"body":{"classes/Encoding.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":1026,"title":{},"body":{"index.html":{}}}],["server",{"_index":1024,"title":{},"body":{"index.html":{}}}],["services/application.service",{"_index":337,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"components/SidenavComponent.html":{}}}],["services/context.service",{"_index":412,"title":{},"body":{"modules/ContainerModule.html":{}}}],["services/request",{"_index":413,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["services/weather.service",{"_index":415,"title":{},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{}}}],["sets.enum",{"_index":434,"title":{},"body":{"injectables/ContextService.html":{}}}],["sets.enum.ts",{"_index":986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":876,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":875,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":169,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":171,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":172,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":173,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":174,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":95,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setuserlocation(location",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["severity",{"_index":691,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["shadow",{"_index":642,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":1010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":881,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":880,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":891,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":888,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":629,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavcomponent",{"_index":97,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":388,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["size",{"_index":661,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slide",{"_index":514,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"classes/SearchResult.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":755,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["space",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["spec\\.ts",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast.module.ts",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../request",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search.module.ts",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":421,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":318,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":331,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":333,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":328,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":334,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:31",{"_index":330,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":394,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:40",{"_index":398,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":551,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":682,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":622,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":630,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":633,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":634,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":632,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":678,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":874,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":878,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":877,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":879,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":884,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":886,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":896,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":546,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":508,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":512,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":511,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":543,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":614,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":599,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":603,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":602,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":611,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":871,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":828,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:14",{"_index":845,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:15",{"_index":844,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:16",{"_index":837,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:18",{"_index":838,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":839,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:26",{"_index":840,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":867,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather.component.ts",{"_index":899,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":903,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":902,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":908,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":1002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":1004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":1007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":168,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts",{"_index":692,"title":{},"body":{"interfaces/IDictionary.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts:3",{"_index":694,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["src/common/helpers/encoding.ts",{"_index":466,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["src/common/helpers/encoding.ts:18",{"_index":482,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:5",{"_index":473,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:6",{"_index":474,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:7",{"_index":475,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:8",{"_index":476,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:9",{"_index":478,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/search",{"_index":724,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/request",{"_index":800,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":822,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":6,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":731,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{},"coverage.html":{}}}],["src/common/models/base",{"_index":229,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/models/conditions",{"_index":292,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":442,"title":{},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":447,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":455,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":584,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":618,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":685,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":696,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":720,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":741,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":747,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":752,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":775,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:11",{"_index":780,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:9",{"_index":777,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":180,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:13",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:25",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:30",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/context.service.ts",{"_index":424,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{}}}],["src/common/services/context.service.ts:11",{"_index":431,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:8",{"_index":430,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:9",{"_index":428,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/request",{"_index":257,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/services/weather.service.ts",{"_index":910,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:10",{"_index":916,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:12",{"_index":917,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:14",{"_index":918,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:16",{"_index":919,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:18",{"_index":920,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:20",{"_index":921,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":825,"title":{"index.html":{}},"body":{"interceptors/ResponseInterceptor.html":{}}}],["state.enum",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":395,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{}}}],["stored",{"_index":1040,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IDictionary.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"components/SearchComponent.html":{}}}],["success",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":835,"title":{},"body":{"components/SearchComponent.html":{}}}],["super(args",{"_index":52,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["super.name",{"_index":736,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["support",{"_index":1064,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1065,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":848,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":854,"title":{},"body":{"components/SearchComponent.html":{}}}],["t",{"_index":479,"title":{},"body":{"classes/Encoding.html":{}}}],["table",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":574,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tel",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":300,"title":{"classes/Temperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["temperature(args?.temperature",{"_index":316,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":1048,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1047,"title":{},"body":{"index.html":{}}}],["text",{"_index":663,"title":{},"body":{"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["third",{"_index":519,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.administrativearea",{"_index":710,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["this.administrativearea.localizedname",{"_index":738,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["this.application",{"_index":786,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.isloading",{"_index":340,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.isloading$.next(true",{"_index":784,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.sidenavstate",{"_index":341,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.userlocation",{"_index":785,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.args.colorscheme",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args.sidenavmode",{"_index":213,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args.sidenavstate",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.cache.foreach(entry",{"_index":289,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["this.cache.get(req",{"_index":819,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cache.get(url",{"_index":279,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["this.cache.set(url",{"_index":285,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["this.colorscheme",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.constructor.name",{"_index":245,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.context[key",{"_index":439,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.country",{"_index":712,"title":{},"body":{"interfaces/ILocation.html":{},"interfaces/ISearchResult.html":{},"classes/LocationModel.html":{},"classes/SearchResult.html":{}}}],["this.country.localizedname",{"_index":737,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["this.created",{"_index":241,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.currentdate",{"_index":637,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.currentroute",{"_index":345,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.datasets",{"_index":709,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["this.day",{"_index":758,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.decodebase64(encoded",{"_index":501,"title":{},"body":{"classes/Encoding.html":{}}}],["this.decryptaes(encrypted",{"_index":499,"title":{},"body":{"classes/Encoding.html":{}}}],["this.elevation",{"_index":620,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["this.encodebase64(typeof",{"_index":506,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encryptaes",{"_index":505,"title":{},"body":{"classes/Encoding.html":{}}}],["this.forecasts",{"_index":593,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.geoposition",{"_index":714,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["this.getuserlocation",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.headline",{"_index":597,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.http.get(providers.weather.autocomplete",{"_index":922,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.http.get(providers.weather.endpoints.locations",{"_index":789,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.id",{"_index":242,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.imperial",{"_index":461,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.initcontext",{"_index":436,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.isloading",{"_index":339,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.maximum",{"_index":743,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.metric",{"_index":463,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.minimum",{"_index":745,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.night",{"_index":760,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.primengconfig.ripple",{"_index":582,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.region",{"_index":716,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["this.router.events.subscribe",{"_index":342,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchtext",{"_index":851,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext$.next(event.query",{"_index":857,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext$.pipe(debouncetime(500",{"_index":853,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setuserlocation",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setuserlocation(default_location",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavchanged.emit",{"_index":636,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavmode",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":214,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sources",{"_index":757,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.suggestions",{"_index":852,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.temperature",{"_index":315,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.timezone",{"_index":718,"title":{},"body":{"interfaces/ILocation.html":{},"classes/LocationModel.html":{}}}],["this.type",{"_index":244,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["this.userlocation",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.userlocation$.next(location",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.weather.autocomplete(text.tolowercase",{"_index":855,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.weather.getconditions(value",{"_index":858,"title":{},"body":{"components/SearchComponent.html":{}}}],["this[camelcase(key",{"_index":240,"title":{},"body":{"classes/BaseModel.html":{}}}],["timezone",{"_index":700,"title":{"classes/TimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/LocationModel.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["titlecase",{"_index":250,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastmodule",{"_index":576,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglebuttonmodule",{"_index":578,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":627,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tooltipmodule",{"_index":580,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":353,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostorage",{"_index":472,"title":{},"body":{"classes/Encoding.html":{}}}],["tostorage(key",{"_index":481,"title":{},"body":{"classes/Encoding.html":{}}}],["tostring",{"_index":735,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{}}}],["transition",{"_index":669,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":666,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":419,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":234,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"interfaces/CacheModel.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ISearchResult.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/LocationModel.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":237,"title":{},"body":{"classes/BaseModel.html":{},"classes/Encoding.html":{}}}],["undefined",{"_index":266,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["unit",{"_index":721,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"index.html":{}}}],["unittype",{"_index":722,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{}}}],["url",{"_index":261,"title":{},"body":{"interfaces/CacheModel.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{}}}],["use",{"_index":1036,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":417,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":170,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["usevalue",{"_index":420,"title":{},"body":{"modules/ContainerModule.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Day.html":{},"classes/Encoding.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/Metric.html":{},"injectables/RequestCacheService.html":{},"components/SearchComponent.html":{},"classes/SearchResult.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1076,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":732,"title":{},"body":{"interfaces/ISearchResult.html":{},"classes/SearchResult.html":{},"index.html":{}}}],["via",{"_index":1050,"title":{},"body":{"index.html":{}}}],["void",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{},"interfaces/CacheModel.html":{},"components/ContainerComponent.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"classes/RequestCache.html":{},"injectables/RequestCacheService.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":100,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather(item",{"_index":596,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["weather.component.html",{"_index":901,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":900,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather.component",{"_index":909,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.module",{"_index":870,"title":{},"body":{"modules/SearchModule.html":{}}}],["weathercomponent",{"_index":99,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":301,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["weathermodule",{"_index":866,"title":{"modules/WeatherModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":393,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":302,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":523,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":604,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":790,"title":{},"body":{"guards/LocationResolver.html":{}}}],["y",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["yes",{"_index":32,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Encoding.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/LocationModel.html":{},"classes/Metric.html":{},"classes/SearchResult.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":843,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":842,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdministrativeArea.html":{"url":"classes/AdministrativeArea.html","title":"class - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                englishType\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                localizedType\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAdministrativeArea)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAdministrativeArea\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorScheme             } from '@constants/color-scheme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ContainerModule.forRoot({\n      colorScheme: ColorScheme.Light,\n      sidenavMode: PanelMode.Push,\n      sidenavState: PanelState.Hide,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'search', loadChildren: () => \"import('./search/search.module').then(m => m.SearchModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'search' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                colorScheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorScheme } from '@constants/color-scheme.enum'\nimport { PanelMode } from '@constants/panel-mode.enum'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public colorScheme ?: ColorScheme ;\n  public sidenavMode ?: PanelMode   ;\n  public sidenavState?: PanelState  ;\n  public userLocation?: IGeoPosition;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colorScheme\n                            \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                isLoading$\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(location: IGeoPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                IGeoPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ColorScheme } from '@constants/color-scheme.enum'\nimport { PanelMode } from '@constants/panel-mode.enum'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION } from '@env/environment'\nimport { AppSettings } from '@helpers/app-settings'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly userLocation$: Subject = new Subject();\n  public readonly isLoading$: Subject = new Subject();\n  public colorScheme : ColorScheme ;\n  public sidenavMode : PanelMode   ;\n  public sidenavState: PanelState  ;\n  public userLocation: IGeoPosition;\n  constructor(private http: HttpClient, private args?: AppSettings) {\n    this.colorScheme  = this.args.colorScheme ;\n    this.sidenavMode  = this.args.sidenavMode ;\n    this.sidenavState = this.args.sidenavState;\n    this.getUserLocation();\n  }\n  private getUserLocation = () => navigator.geolocation\n    .getCurrentPosition(\n      (success) => this.setUserLocation({ Latitude: success.coords.latitude, Longitude: success.coords.longitude }),\n      (failure) => this.setUserLocation(DEFAULT_LOCATION));\n\n  private setUserLocation(location: IGeoPosition) {\n    this.userLocation = location;\n    this.userLocation$.next(location);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base-model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Guid } from 'guid-ts'\n\nexport abstract class BaseModel {\n  public created: Date;\n  public id: Guid | string;\n  public name: string;\n  public type: string;\n  constructor(args?: any) {\n    Object.keys(args)?.forEach(key => typeof (args[key]) != 'object'\n      ? this[camelCase(key)] = this[camelCase(key)] ?? args[key] : {});\n    this.created = new Date();\n    this.id = Guid.newGuid();\n    this.type = this.type ?? this.constructor.name;\n  }\n}\nexport const camelCase = (original: string): string =>\n  original[0].toLowerCase() + original.substring(1);\nexport const titleCase = (original: string): string =>\n  original.split(' ').map(item => item[0].toUpperCase() + item.substring(1)).join(' ');\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheModel.html":{"url":"interfaces/CacheModel.html","title":"interface - CacheModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/request-cache.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        lastRead\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nexport interface CacheModel {\n  lastRead?: number;\n  response?: HttpResponse;\n  url?: string;\n}\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest): HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void;\n}\n\nconst maxAge = 8.64e+7; // maximum cache age (ms)\n\n@Injectable()\nexport class RequestCacheService implements RequestCache {\n  cache = new Map();\n\n  constructor() { }\n\n  get(req: HttpRequest): HttpResponse | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) {\n      return undefined;\n    }\n\n    const isExpired = cached.lastRead , response: HttpResponse): void {\n    const url = req.urlWithParams;\n    const newEntry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, newEntry);\n\n    // remove expired cache entries\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(entry => {\n      if (entry.lastRead \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conditions.html":{"url":"classes/Conditions.html","title":"class - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading$\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable } from 'rxjs'\nimport { Component, enableProdMode, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { ApplicationService } from '@services/application.service'\nimport { environment } from '@env/environment'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string;\n  public isLoading$: Observable;\n  public sidenavState: PanelState;\n  constructor(private application: ApplicationService, private router: Router) {\n    this.isLoading$ = this.application.isLoading$;\n    this.sidenavState = this.application.sidenavState;\n    this.router.events.subscribe({\n      next: event => this.currentRoute = !(event instanceof NavigationEnd)\n        ? this.currentRoute\n        : `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n  }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_providers\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ContextService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                                } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule    } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule            } from '@angular/core'\nimport { RequestInterceptor                          } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                         } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                            } from '@common/resolvers/location.resolver'\nimport { ContainerRoutingModule                      } from '@container/container-routing.module'\nimport { ContainerComponent                          } from '@container/container.component'\nimport { HeaderModule                                } from '@container/header/header.module'\nimport { SidenavModule                               } from '@container/sidenav/sidenav.module'\nimport { AppSettings                                 } from '@helpers/app-settings'\nimport { ApplicationService                          } from '@services/application.service'\nimport { ContextService                              } from '@services/context.service'\nimport { RequestCache          , RequestCacheService } from '@services/request-cache.service'\nimport { WeatherService                              } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: RequestCache, useClass: RequestCacheService },\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor, multi: true },\n    ApplicationService,\n    LocationResolver,\n    ContextService,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContextService.html":{"url":"injectables/ContextService.html","title":"injectable - ContextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/context.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                initContext\n                            \n                            \n                                    Public\n                                    Readonly\n                                onChange$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            onChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { DataSets } from '@constants/data-sets.enum'\nimport { IDictionary } from '@helpers/dictionary'\n\n@Injectable()\nexport class ContextService {\n  private readonly context: IDictionary = {};\n  public readonly onChange$: Subject = new Subject();\n  constructor() { this.initContext(); }\n  private initContext = () =>\n    Object.keys(DataSets)\n      .forEach(key => this.context[key] = new Array());\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Day.html":{"url":"classes/Day.html","title":"class - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elevation.html":{"url":"classes/Elevation.html","title":"class - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IElevation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IElevation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encoding.html":{"url":"classes/Encoding.html","title":"class - Encoding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encoding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/encoding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decodeBase64\n                            \n                            \n                                    Static\n                                decryptAES\n                            \n                            \n                                    Static\n                                encodeBase64\n                            \n                            \n                                    Static\n                                encryptAES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromStorage\n                            \n                            \n                                    Static\n                                toStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            decryptAES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            encryptAES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/encoding.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromStorage(key: string, type?)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:9\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toStorage(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AES, enc } from 'crypto-js'\nimport { CLIENT_ID as secret } from '@env/environment'\n\nexport class Encoding {\n  public static decodeBase64 = (value: string): string => atob(value);\n  public static decryptAES = (cipher: string, key: string = secret): string => AES.decrypt(cipher, key).toString(enc.Utf8);\n  public static encodeBase64 = (value: string): string => btoa(value);\n  public static encryptAES = (value: string, key: string = secret): string => AES.encrypt(value, key).toString();\n  public static fromStorage(key: string, type?: new () => T): T {\n    const encrypted: string = localStorage.getItem(key);\n    if (encrypted) {\n      const encoded: string = this.decryptAES(encrypted);\n      const decoded: string = this.decodeBase64(encoded);\n      return typeof (type) == 'string' ? decoded : JSON.parse(decoded);\n    }\n    return null;\n  }\n  public static toStorage(key: string, value: T) {\n    localStorage.setItem(key, this.encryptAES(\n      this.encodeBase64(typeof (value) == 'string'\n        ? value\n        : JSON.stringify(value))));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\ncluster_FavoritesModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Forecast.html":{"url":"classes/Forecast.html","title":"class - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Headline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_declarations\n\n\n\ncluster_ForecastModule_exports\n\n\n\ncluster_ForecastModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForecastRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoPosition.html":{"url":"classes/GeoPosition.html","title":"class - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elevation\n                            \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IGeoPosition)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IGeoPosition\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elevation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Elevation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavChanged: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav = () => this.sidenavChanged.emit();\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  {{this.currentDate | date: 'EEEE MMMM d, y'}}\n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-date {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      display: flex;\n      align-items: center;\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites        {{this.currentDate | date: \\'EEEE MMMM d, y\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Headline.html":{"url":"classes/Headline.html","title":"class - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                effectiveDate\n                            \n                            \n                                    Public\n                                effectiveEpochDate\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                endEpochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                severity\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IHeadline)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IHeadline\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        CountryId\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        EnglishType\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        Level\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        LocalizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CountryId\n                                    \n                                \n                                \n                                    \n                                        CountryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishType\n                                    \n                                \n                                \n                                    \n                                        EnglishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedType\n                                    \n                                \n                                \n                                    \n                                        LocalizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EpochTime\n                                \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        IsDayTime\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        LocalObservationDateTime\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                                \n                                            Optional\n                                        WeatherIcon\n                                \n                                \n                                            Optional\n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        Icon\n                                \n                                \n                                            Optional\n                                        IconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconPhrase\n                                    \n                                \n                                \n                                    \n                                        IconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDictionary.html":{"url":"interfaces/IDictionary.html","title":"interface - IDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/dictionary.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BaseModel[]\n\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/dictionary.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IDictionary {\n  [key: string]: BaseModel[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DailyForecasts\n                                \n                                \n                                            Optional\n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Elevation\n                                \n                                \n                                            Optional\n                                        Latitude\n                                \n                                \n                                            Optional\n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Elevation\n                                    \n                                \n                                \n                                    \n                                        Elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Category\n                                \n                                \n                                            Optional\n                                        EffectiveDate\n                                \n                                \n                                            Optional\n                                        EffectiveEpochDate\n                                \n                                \n                                            Optional\n                                        EndDate\n                                \n                                \n                                            Optional\n                                        EndEpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Severity\n                                \n                                \n                                            Optional\n                                        Text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndDate\n                                    \n                                \n                                \n                                    \n                                        EndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndEpochDate\n                                    \n                                \n                                \n                                    \n                                        EndEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Severity\n                                    \n                                \n                                \n                                    \n                                        Severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        AdministrativeArea\n                                \n                                \n                                            Optional\n                                        Country\n                                \n                                \n                                            Optional\n                                        DataSets\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        GeoPosition\n                                \n                                \n                                            Optional\n                                        IsAlias\n                                \n                                \n                                            Optional\n                                        Key\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        Rank\n                                \n                                \n                                            Optional\n                                        Region\n                                \n                                \n                                            Optional\n                                        TimeZone\n                                \n                                \n                                            Optional\n                                        Type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DataSets\n                                    \n                                \n                                \n                                    \n                                        DataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GeoPosition\n                                    \n                                \n                                \n                                    \n                                        GeoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsAlias\n                                    \n                                \n                                \n                                    \n                                        IsAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                    \n                                \n                                \n                                    \n                                        Region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TimeZone\n                                    \n                                \n                                \n                                    \n                                        TimeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country?: ICountry;\n  DataSets?: string[];\n  EnglishName?: string;\n  GeoPosition?: IGeoPosition;\n  IsAlias?: boolean;\n  Key?: string;\n  LocalizedName?: string;\n  Rank?: number;\n  Region?: ICountry;\n  TimeZone?: ITimeZone;\n  Type?: string;\n}\nexport class LocationModel extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Unit\n                                \n                                \n                                            Optional\n                                        UnitType\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Unit\n                                    \n                                \n                                \n                                    \n                                        Unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UnitType\n                                    \n                                \n                                \n                                    \n                                        UnitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchResult.html":{"url":"interfaces/ISearchResult.html","title":"interface - ISearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\n\nexport interface ISearchResult {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class SearchResult extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: ISearchResult) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${super.name} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Maximum\n                                \n                                \n                                            Optional\n                                        Minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Maximum\n                                    \n                                \n                                \n                                    \n                                        Maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Minimum\n                                    \n                                \n                                \n                                    \n                                        Minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Code\n                                \n                                \n                                            Optional\n                                        GmtOffset\n                                \n                                \n                                            Optional\n                                        IsDaylightSaving\n                                \n                                \n                                            Optional\n                                        Name\n                                \n                                \n                                            Optional\n                                        NextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Code\n                                    \n                                \n                                \n                                    \n                                        Code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GmtOffset\n                                    \n                                \n                                \n                                    \n                                        GmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        IsDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        NextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Date\n                                \n                                \n                                            Optional\n                                        Day\n                                \n                                \n                                            Optional\n                                        EpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Night\n                                \n                                \n                                            Optional\n                                        Sources\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Sources\n                                    \n                                \n                                \n                                    \n                                        Sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocationModel.html":{"url":"classes/LocationModel.html","title":"class - LocationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Forecast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country?: ICountry;\n  DataSets?: string[];\n  EnglishName?: string;\n  GeoPosition?: IGeoPosition;\n  IsAlias?: boolean;\n  Key?: string;\n  LocalizedName?: string;\n  Rank?: number;\n  Region?: ICountry;\n  TimeZone?: ITimeZone;\n  Type?: string;\n}\nexport class LocationModel extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable, of } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    this.application.isLoading$.next(true);\n\n    return !this.application.userLocation\n      ? this.application\n        .userLocation$\n        .pipe(\n          map(x => {\n            // this.http.get(providers.weather.endpoints.locations)\n            return x;\n          })) : of(null);\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                unitType\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IMetric)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IMetric\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/request-cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/request-cache.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/request-cache.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nexport interface CacheModel {\n  lastRead?: number;\n  response?: HttpResponse;\n  url?: string;\n}\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest): HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void;\n}\n\nconst maxAge = 8.64e+7; // maximum cache age (ms)\n\n@Injectable()\nexport class RequestCacheService implements RequestCache {\n  cache = new Map();\n\n  constructor() { }\n\n  get(req: HttpRequest): HttpResponse | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) {\n      return undefined;\n    }\n\n    const isExpired = cached.lastRead , response: HttpResponse): void {\n    const url = req.urlWithParams;\n    const newEntry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, newEntry);\n\n    // remove expired cache entries\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(entry => {\n      if (entry.lastRead \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestCacheService.html":{"url":"injectables/RequestCacheService.html","title":"injectable - RequestCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RequestCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/request-cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/request-cache.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/request-cache.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/request-cache.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/request-cache.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\nexport interface CacheModel {\n  lastRead?: number;\n  response?: HttpResponse;\n  url?: string;\n}\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest): HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void;\n}\n\nconst maxAge = 8.64e+7; // maximum cache age (ms)\n\n@Injectable()\nexport class RequestCacheService implements RequestCache {\n  cache = new Map();\n\n  constructor() { }\n\n  get(req: HttpRequest): HttpResponse | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n\n    if (!cached) {\n      return undefined;\n    }\n\n    const isExpired = cached.lastRead , response: HttpResponse): void {\n    const url = req.urlWithParams;\n    const newEntry = { url, response, lastRead: Date.now() };\n    this.cache.set(url, newEntry);\n\n    // remove expired cache entries\n    const expired = Date.now() - maxAge;\n    this.cache.forEach(entry => {\n      if (entry.lastRead \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { Encoding } from '@helpers/encoding'\nimport { RequestCache } from '@services/request-cache.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCache) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    req = req.url.includes(providers.weather.baseUrl)\n      ? req.clone({\n        responseType: 'json',\n        params: req.params.append('apikey', Encoding.decodeBase64(providers.weather.apiKey))\n      }) : req;\n    const cachedResponse = this.cache.get(req);\n\n    return cachedResponse\n      ? of(cachedResponse) : next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n        }\n        return event;\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                searchPattern\n                            \n                            \n                                    Private\n                                    Optional\n                                searchText$\n                            \n                            \n                                    Public\n                                    Optional\n                                suggestions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[a-zA-Z ]/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            suggestions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable    , Subject                         } from 'rxjs'\nimport { debounceTime  , distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component     , OnInit                          } from '@angular/core'\nimport { ISearchEvent                                    } from '@helpers/search-event'\nimport { SearchResult                                    } from '@models/autoComplete-model'\nimport { WeatherService                                  } from '@services/weather.service'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  private searchText$?: Subject;\n  public searchPattern: RegExp = /[a-zA-Z ]/;\n  public suggestions$?: Observable;\n  constructor(private weather: WeatherService) { }\n  ngOnInit() {\n    this.searchText$ = new Subject();\n    this.suggestions$ = this.searchText$.pipe(debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text.toLowerCase())));\n  }\n  public onSearch = (event: ISearchEvent) =>\n    event.query ? this.searchText$.next(event.query) : {};\n  public onSelect = (value: SearchResult) => {\n    // this.weather.getConditions(value);\n  };\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{result.toString()}}\n        \n      \n    \n  \n  \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .app-search {\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{result.toString()}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\nimport { WeatherModule       } from '@weather/weather.module'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, SearchRoutingModule, WeatherModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchResult.html":{"url":"classes/SearchResult.html","title":"class - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                flagIcon\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                version\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ISearchResult)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ISearchResult\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\n\nexport interface ISearchResult {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class SearchResult extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: ISearchResult) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${super.name} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component         , Input, OnInit } from '@angular/core'\nimport { PanelState                        } from '@constants/panel-state.enum'\nimport { ApplicationService                } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Temperature.html":{"url":"classes/Temperature.html","title":"class - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                maximum\n                            \n                            \n                                    Public\n                                minimum\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITemperature)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITemperature\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maximum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minimum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeZone.html":{"url":"classes/TimeZone.html","title":"class - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                gmtOffset\n                            \n                            \n                                    Public\n                                isDaylightSaving\n                            \n                            \n                                    Public\n                                nextOffsetChange\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITimeZone)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITimeZone\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gmtOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDaylightSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nextOffsetChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule     } from '@angular/common'\nimport { NgModule         } from '@angular/core'\nimport { WeatherComponent } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                            \n                                    Public\n                                getConditions\n                            \n                            \n                                    Public\n                                getForecast\n                            \n                            \n                                    Public\n                                getGeoPosition\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGeoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { AppSettings } from '@helpers/app-settings'\nimport { ISearchResult, SearchResult } from '@models/autoComplete-model'\n\n@Injectable()\nexport class WeatherService {\n  constructor(private http: HttpClient, private args?: AppSettings) { }\n  public autoComplete = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } }).pipe(map(results => results.map(item => new SearchResult(item))));\n  public getConditions = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } }).pipe(map(results => results.map(item => new SearchResult(item))));\n  public getForecast = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } }).pipe(map(results => results.map(item => new SearchResult(item))));\n  public getGeoPosition = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } }).pipe(map(results => results.map(item => new SearchResult(item))));\n  public getLocation = (search: string): Observable =>\n    this.http.get(providers.weather.autocomplete, { params: { q: search } }).pipe(map(results => results.map(item => new SearchResult(item))));\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/dictionary.ts\n            \n            interface\n            IDictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/encoding.ts\n            \n            class\n            Encoding\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            class\n            AdministrativeArea\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            class\n            SearchResult\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            ISearchResult\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            variable\n            camelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            variable\n            titleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            Conditions\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            Day\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            class\n            Elevation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            Forecast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            class\n            GeoPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            class\n            Headline\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            LocationModel\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            class\n            Temperature\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            class\n            TimeZone\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/services/context.service.ts\n            \n            injectable\n            ContextService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/services/request-cache.service.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/request-cache.service.ts\n            \n            injectable\n            RequestCacheService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/services/request-cache.service.ts\n            \n            interface\n            CacheModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/services/request-cache.service.ts\n            \n            variable\n            maxAge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.6.0\n        \n            crypto-js : ^4.0.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorScheme   (src/.../color-scheme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-scheme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorScheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            camelCase   (src/.../base-model.ts)\n                        \n                        \n                            CLIENT_ID   (src/.../environment.prod.ts)\n                        \n                        \n                            CLIENT_ID   (src/.../environment.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            maxAge   (src/.../request-cache.service.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            titleCase   (src/.../base-model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/models/base-model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            camelCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original[0].toLowerCase() + original.substring(1)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original.split(' ').map(item => item[0].toUpperCase() + item.substring(1)).join(' ')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey           : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                             ,\n    autocomplete     : 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl          : 'https://dataservice.accuweather.com'                                       ,\n    currentconditions: 'https://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts        : 'https://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition      : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons            : 'https://www.accuweather.com/images/weathericons'                          ,\n    locations        : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey           : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                             ,\n    autocomplete     : 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl          : 'https://dataservice.accuweather.com'                                       ,\n    currentconditions: 'https://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts        : 'https://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition      : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons            : 'https://www.accuweather.com/images/weathericons'                          ,\n    locations        : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/common/services/request-cache.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8.64e+7\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
