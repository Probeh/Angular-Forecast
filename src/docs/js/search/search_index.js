var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdministrativeArea.html",[0,0.078,1,2.201]],["body/classes/AdministrativeArea.html",[0,0.075,1,2.935,2,1.36,3,0.117,4,0.102,5,0.102,6,5.822,7,0.843,8,1.304,9,1.558,10,0.328,11,0.798,12,1.399,13,5.686,14,4.088,15,5.686,16,5.686,17,3.64,18,5.686,19,2.125,20,2.252,21,1.158,22,0.833,23,0.783,24,1.213,25,3.64,26,1.532,27,3.522,28,0.94,29,0.014,30,0.552,31,1.36,32,1.36,33,1.789,34,3.305,35,3.305,36,2.978,37,1.732,38,2.538,39,2.538,40,1.26,41,2.747,42,1.597,43,1.471,44,1.597,45,1.597,46,1.597,47,0.132,48,0.907,49,0.754,50,0.162,51,0.404,52,0.94,53,0.006,54,0.009,55,0.006]],["title/components/AppComponent.html",[56,1.131,57,1.733]],["body/components/AppComponent.html",[0,0.087,3,0.136,4,0.12,5,0.12,10,0.383,11,0.886,21,1.12,22,0.471,23,1.35,26,1.162,29,0.014,33,0.984,47,0.154,50,0.136,53,0.008,54,0.01,55,0.008,56,1.874,57,3.055,58,2.016,59,2.344,60,2.344,61,2.344,62,2.344,63,3.858,64,2.344,65,4.188,66,3.985,67,5.856,68,3.093,69,6.554,70,3.093,71,5.856,72,5.698,73,5.856,74,1.945,75,1.717,76,5.091,77,0.881,78,1.588,79,3.093,80,3.093,81,2.344,82,3.681,83,2.344,84,2.344,85,1.471,86,2.344,87,1.864,88,2.344,89,1.864,90,2.344,91,1.945,92,2.344,93,1.864,94,2.344,95,1.945,96,2.344,97,1.945,98,2.344,99,1.864,100,1.588,101,2.344,102,2.344]],["title/modules/AppModule.html",[103,1.091,104,2.844]],["body/modules/AppModule.html",[0,0.082,3,0.128,4,0.113,5,0.113,29,0.014,47,0.269,50,0.128,53,0.007,54,0.01,55,0.007,57,3.466,77,0.83,78,1.495,103,1.152,104,5.646,105,1.335,106,2.003,107,3.359,108,3.197,109,1.865,110,1.555,111,3.633,112,3.633,113,3.633,114,3.633,115,4.885,116,4.743,117,2.971,118,2.207,119,1.914,120,4.179,121,2.178,122,4.891,123,2.1,124,2.178,125,5.626,126,4.891,127,3.274,128,5.626,129,4.179,130,4.179,131,2.46,132,4.179,133,3.005,134,3.274,135,3.274,136,4.046,137,3.758,138,3.274,139,2.613,140,2.791,141,4.179,142,4.179,143,3.274,144,4.179,145,3.274,146,3.633,147,2.791,148,3.274]],["title/modules/AppRoutingModule.html",[103,1.091,115,2.641]],["body/modules/AppRoutingModule.html",[0,0.102,3,0.16,4,0.141,5,0.141,29,0.014,47,0.225,50,0.2,53,0.009,54,0.011,55,0.009,77,1.036,100,2.324,105,1.666,110,1.941,115,4.339,121,2.019,124,2.514,149,5.217,150,3.071,151,3.824,152,3.265,153,2.622,154,1.867,155,5.217,156,4.725,157,6.496,158,5.217,159,5.217,160,4.087,161,5.217,162,5.217,163,5.217,164,5.217,165,5.217,166,5.217]],["title/classes/AppSettings.html",[0,0.078,167,2.472]],["body/classes/AppSettings.html",[0,0.089,2,1.617,3,0.139,4,0.122,5,0.122,10,0.39,11,0.896,12,1.364,22,0.746,23,1.362,26,1.447,29,0.014,30,1.123,47,0.243,49,0.897,50,0.139,53,0.008,54,0.01,55,0.008,133,4.756,134,3.54,135,3.54,136,4.756,137,3.958,138,3.54,139,4.134,140,3.018,143,5.18,145,5.18,147,4.416,167,3.705,168,6.502,169,3.929,170,5.749,171,5.926,172,4.519,173,4.519,174,4.519,175,3.681,176,3.25]],["title/injectables/ApplicationService.html",[177,1.811,178,1.988]],["body/injectables/ApplicationService.html",[0,0.049,3,0.077,4,0.068,5,0.068,10,0.217,11,0.589,12,1.367,21,0.744,22,0.779,23,0.518,24,0.578,26,1.471,28,1.177,29,0.014,30,0.565,31,1.392,32,0.899,47,0.229,49,0.499,50,0.077,53,0.004,54,0.007,55,0.004,74,2.687,75,2.771,77,0.499,133,3.424,134,1.969,135,1.969,136,3.424,137,2.599,138,1.969,139,2.976,140,1.679,143,3.729,145,3.729,147,3.179,167,3.35,170,4.139,175,2.65,176,1.808,177,1.782,178,1.956,179,1.808,180,2.186,181,4.876,182,4.761,183,4.761,184,3.581,185,4.761,186,4.139,187,4.761,188,4.761,189,4.761,190,4.761,191,4.761,192,1.506,193,3.891,194,3.891,195,3.891,196,6.393,197,5.797,198,6.928,199,2.514,200,4.139,201,0.973,202,1.205,203,2.514,204,6.307,205,1.87,206,2.514,207,3.558,208,2.514,209,2.514,210,2.055,211,2.599,212,2.514,213,2.514,214,2.514,215,2.514,216,2.514,217,2.514,218,2.514,219,2.514,220,1.328,221,1.969,222,1.263,223,1.969,224,1.808,225,1.263,226,2.514,227,2.514,228,2.514,229,2.514,230,2.186,231,2.514,232,2.514,233,2.514,234,2.514,235,2.514,236,2.514,237,2.514,238,1.679,239,2.514,240,1.679,241,2.514,242,2.514,243,2.514,244,2.514,245,4.761,246,2.514,247,2.976,248,2.514,249,2.514,250,2.514,251,2.514,252,2.514,253,2.514,254,2.514,255,2.514]],["title/classes/AutoComplete.html",[0,0.078,256,2.201]],["body/classes/AutoComplete.html",[0,0.063,1,4.035,2,1.147,3,0.099,4,0.086,5,0.086,7,0.711,8,1.156,9,1.483,10,0.277,11,0.707,12,1.394,17,3.371,19,1.883,20,1.738,21,1.054,22,0.816,23,0.661,24,1.075,25,3.068,26,1.512,27,2.142,28,0.793,29,0.014,30,0.466,31,1.147,32,1.147,33,1.674,36,2.512,37,1.922,38,2.142,39,2.142,40,1.063,41,2.544,42,1.347,43,1.241,44,1.347,45,1.347,46,1.347,47,0.191,48,0.765,49,0.927,50,0.144,51,0.341,52,0.793,53,0.005,54,0.008,55,0.005,74,2.048,75,1.808,109,1.063,205,1.288,222,1.612,256,2.601,257,5.771,258,3.199,259,4.792,260,4.045,261,4.356,262,4.792,263,4.745,264,4.045,265,3.36,266,2.788,267,2.306,268,2.788,269,2.306,270,2.306,271,2.306,272,2.306,273,2.788,274,2.788,275,2.512,276,2.788,277,2.788,278,2.788]],["title/classes/BaseModel.html",[0,0.078,9,0.845]],["body/classes/BaseModel.html",[0,0.087,2,1.596,3,0.137,4,0.12,5,0.12,7,0.989,9,1.256,10,0.385,11,0.889,12,1.362,19,2.648,20,2.444,21,1.335,22,0.819,23,0.919,24,1.351,26,1.441,28,1.103,29,0.014,30,0.648,31,1.596,32,1.596,33,1.652,40,2.179,43,2.703,47,0.203,50,0.137,53,0.008,54,0.01,55,0.008,205,1.23,275,4.603,279,6.479,280,5.876,281,4.46,282,4.46,283,4.46,284,3.494,285,3.494,286,3.878,287,3.494,288,4.46,289,5.876,290,4.46,291,4.46,292,5.876,293,4.46,294,4.46,295,4.46]],["title/interfaces/CacheResult.html",[51,0.42,296,2.641]],["body/interfaces/CacheResult.html",[3,0.164,4,0.144,5,0.144,7,1.186,10,0.462,11,0.998,22,0.76,29,0.014,30,1.134,33,1.586,37,2.046,47,0.185,50,0.164,51,0.568,53,0.009,54,0.011,55,0.009,123,2.687,296,4.405,297,1.913,298,4.648,299,5.851,300,5.371,301,5.371,302,5.371]],["title/injectables/CacheService.html",[177,1.811,303,2.641]],["body/injectables/CacheService.html",[0,0.103,3,0.116,4,0.101,5,0.101,10,0.325,11,0.792,12,1.166,21,1.001,22,0.639,23,1.24,26,1.358,28,1.294,29,0.014,30,0.76,37,1.075,47,0.208,49,0.746,50,0.161,53,0.006,54,0.009,55,0.006,74,2.294,75,2.025,77,0.746,123,1.889,154,2.329,177,2.397,179,2.704,181,5.095,184,3.742,192,2.025,201,2.025,202,2.885,205,1.443,287,4.716,296,2.511,299,2.945,300,4.921,301,2.704,302,5.33,303,3.495,304,2.945,305,5.233,306,5.233,307,4.55,308,5.233,309,5.233,310,4.95,311,3.759,312,3.495,313,5.659,314,4.55,315,3.759,316,3.763,317,4.55,318,3.759,319,3.268,320,3.271,321,1.579,322,2.704,323,2.945,324,3.268,325,3.268,326,3.268,327,4.55,328,4.55,329,3.268,330,2.092,331,3.268,332,4.55,333,3.268,334,4.55,335,3.268,336,3.268,337,3.268,338,3.268]],["title/classes/Conditions.html",[0,0.078,339,2.089]],["body/classes/Conditions.html",[0,0.06,2,1.094,3,0.094,4,0.082,5,0.082,7,0.678,8,1.116,9,1.461,10,0.264,11,0.683,12,1.4,19,1.819,20,1.679,21,1.025,22,0.821,23,0.63,24,1.038,26,1.524,27,2.043,28,0.756,29,0.014,30,0.444,31,1.094,32,1.094,33,1.658,37,1.89,39,2.043,40,1.963,41,2.487,42,1.285,43,1.184,44,1.285,45,1.285,46,1.285,47,0.186,48,0.73,49,0.896,50,0.139,51,0.325,52,0.756,53,0.005,54,0.008,55,0.005,74,1.341,75,1.184,109,1.014,205,0.843,210,3.49,222,1.537,265,2.2,267,2.2,339,2.384,340,5.857,341,5.148,342,3.857,343,4.258,344,5.148,345,3.702,346,5.148,347,3.702,348,3.804,349,5.148,350,5.148,351,3.955,352,3.924,353,2.659,354,2.396,355,2.396,356,2.396,357,2.659,358,2.512,359,2.2,360,2.2,361,2.2,362,2.659]],["title/components/ContainerComponent.html",[56,1.131,85,1.311]],["body/components/ContainerComponent.html",[0,0.055,3,0.086,4,0.075,5,0.075,10,0.242,11,0.639,12,1.251,21,0.973,22,0.602,23,0.577,26,1.27,28,0.693,29,0.014,30,0.407,33,0.937,47,0.23,50,0.086,53,0.005,54,0.007,55,0.005,56,1.455,57,1.227,58,1.455,59,1.479,60,1.479,61,1.479,62,1.479,64,1.479,65,3.825,66,3.688,68,2.232,70,2.232,74,1.227,75,1.084,77,0.556,78,1.002,79,2.232,80,2.232,81,1.479,82,2.994,83,1.479,84,1.479,85,1.879,86,1.479,87,1.176,88,1.479,89,1.176,90,1.479,91,1.227,92,1.479,93,1.176,94,1.479,95,1.227,96,1.479,97,1.227,98,1.479,99,1.176,100,1.512,101,1.479,102,1.479,137,1.87,139,3.181,140,1.87,147,3.399,148,3.31,153,1.407,178,2.849,184,2.232,186,4.424,192,1.635,201,1.084,202,1.342,207,2.832,220,1.479,225,1.407,230,4.424,247,1.75,321,1.775,363,2.434,364,2.832,365,6.396,366,5.089,367,4.225,368,5.089,369,5.089,370,3.155,371,2.014,372,6.639,373,4.424,374,4.44,375,4.225,376,2.822,377,2.8,378,2.8,379,2.8,380,2.8,381,1.75,382,4.225,383,1.75,384,2.8,385,2.8,386,2.8,387,2.8,388,3.31,389,4.225,390,2.434,391,2.8,392,2.8,393,1.87,394,2.194,395,2.434,396,2.434,397,2.8,398,4.424,399,3.674,400,3.674,401,2.434,402,2.434,403,2.822,404,4.375,405,4.375,406,2.434,407,3.31,408,4.375,409,3.31,410,3.31,411,2.194,412,3.31,413,5.089,414,4.225,415,4.225,416,2.434,417,3.039,418,3.66,419,2.8,420,2.434,421,2.434,422,2.434,423,4.424,424,3.674,425,2.194,426,3.674]],["title/modules/ContainerModule.html",[103,1.091,116,2.641]],["body/modules/ContainerModule.html",[0,0.055,3,0.086,4,0.076,5,0.076,21,0.536,22,0.298,26,0.557,28,0.694,29,0.014,30,0.407,31,1.514,32,1.003,47,0.267,50,0.086,53,0.005,54,0.007,55,0.005,58,1.754,77,0.557,78,1.003,85,2.402,103,0.773,105,1.812,106,1.344,107,2.69,108,1.409,109,1.881,110,1.895,116,5.399,117,2.234,118,1.481,119,1.284,121,1.637,122,3.678,123,1.409,124,1.972,131,1.651,154,1.514,167,3.806,178,3.216,192,1.085,201,1.085,211,3.402,223,2.197,224,2.017,303,2.825,320,2.645,330,1.561,374,3.314,381,1.753,383,1.753,427,2.438,428,2.438,429,2.438,430,2.438,431,2.438,432,3.318,433,3.472,434,3.472,435,3.472,436,4.274,437,4.274,438,4.274,439,4.274,440,4.001,441,2.197,442,3.678,443,2.804,444,4.23,445,2.804,446,5.094,447,2.355,448,1.481,449,5.673,450,2.804,451,3.402,452,2.804,453,2.804,454,3.042,455,2.804,456,2.804,457,2.804,458,2.017,459,2.804,460,2.804,461,2.804,462,2.438,463,2.438,464,6.088,465,5.673,466,5.094,467,2.804]],["title/modules/ContainerRoutingModule.html",[103,1.091,436,2.641]],["body/modules/ContainerRoutingModule.html",[0,0.112,3,0.176,4,0.154,5,0.154,29,0.014,47,0.238,50,0.211,53,0.01,54,0.012,55,0.01,77,1.135,105,1.827,110,2.128,121,2.214,124,2.66,150,3.366,151,4.045,152,3.454,153,2.874,154,2.046,436,4.589,468,5.719,469,5.719,470,5.719]],["title/classes/Country.html",[0,0.078,258,2.089]],["body/classes/Country.html",[0,0.085,2,1.556,3,0.134,4,0.117,5,0.117,7,0.964,8,1.429,9,1.614,10,0.375,11,0.874,12,1.371,14,4.322,17,3.848,19,2.328,20,2.414,21,1.24,22,0.824,23,0.896,24,1.329,26,1.499,28,1.075,29,0.014,30,0.631,31,1.556,32,1.556,33,1.738,40,1.442,41,2.904,42,1.826,43,1.683,44,1.826,45,1.826,46,1.826,47,0.151,48,1.037,49,0.863,50,0.178,51,0.462,52,1.075,53,0.007,54,0.01,55,0.007,258,3.051,471,5.416,472,4.322,473,3.4,474,3.127]],["title/classes/Day.html",[0,0.078,475,2.472]],["body/classes/Day.html",[0,0.077,2,1.406,3,0.121,4,0.106,5,0.106,7,0.872,8,1.335,9,1.573,10,0.339,11,0.816,12,1.385,19,2.175,20,2.008,21,1.178,22,0.817,23,0.81,24,1.241,26,1.509,28,0.972,29,0.014,30,0.571,31,1.406,32,1.406,33,1.593,37,1.763,38,2.625,40,1.303,41,2.787,42,1.651,43,1.521,44,1.651,45,1.651,46,1.651,47,0.187,48,0.938,49,0.78,50,0.166,51,0.418,52,0.972,53,0.007,54,0.009,55,0.007,74,1.723,75,1.521,109,1.303,210,3.255,222,1.976,342,4.432,343,4.771,473,2.314,475,3.374,476,5.627,477,5.197,478,5.768,479,4.147,480,4.228,481,2.625,482,3.418]],["title/classes/Elevation.html",[0,0.078,483,2.472]],["body/classes/Elevation.html",[0,0.083,2,1.506,3,0.129,4,0.113,5,0.113,7,0.933,8,1.398,9,1.601,10,0.363,11,0.855,12,1.365,19,2.279,20,2.103,21,1.221,22,0.819,23,0.867,24,1.3,26,1.487,28,1.041,29,0.014,30,0.611,31,1.506,32,1.506,33,1.416,40,1.396,41,2.867,42,1.768,43,1.629,44,1.768,45,1.768,46,1.768,47,0.196,48,1.004,49,1.122,50,0.174,51,0.447,52,1.041,53,0.007,54,0.01,55,0.007,205,1.559,473,3.328,474,3.027,483,3.535,484,5.346,485,5.933,486,4.292,487,4.266,488,3.553,489,3.027,490,3.66,491,3.66,492,3.66,493,3.66]],["title/interceptors/ExceptionInterceptor.html",[437,2.641,451,2.641]],["body/interceptors/ExceptionInterceptor.html",[0,0.062,3,0.143,4,0.085,5,0.085,10,0.274,11,0.701,21,0.886,22,0.64,23,0.653,26,1.196,28,1.355,29,0.014,30,0.673,37,1.723,47,0.239,50,0.168,53,0.005,54,0.009,55,0.005,74,2.032,75,1.794,77,0.629,109,1.051,123,1.594,154,1.658,177,2.123,184,2.893,192,1.794,201,1.227,207,3.049,211,3.095,220,1.675,222,1.594,225,1.594,247,3.767,285,2.484,300,2.281,301,2.281,310,4.024,312,2.118,321,1.332,330,3.049,373,4.029,374,4.72,381,1.982,412,4.291,437,3.095,442,5.572,494,2.484,495,5.021,496,2.118,497,6.694,498,3.631,499,3.171,500,4.635,501,3.631,502,4.72,503,3.171,504,3.171,505,5.477,506,3.171,507,3.171,508,2.757,509,2.281,510,4.635,511,2.484,512,3.631,513,2.281,514,2.281,515,2.757,516,2.757,517,2.757,518,2.757,519,2.757,520,2.757,521,2.757,522,2.757,523,2.757,524,2.757,525,2.484,526,2.757,527,4.029,528,2.757,529,2.757,530,2.757,531,2.757,532,4.029,533,4.029,534,2.757,535,2.757,536,2.757,537,2.757,538,2.757,539,2.757,540,2.757,541,2.757,542,3.631,543,2.757,544,2.484,545,2.757,546,2.757,547,2.757,548,2.757,549,2.757,550,2.757,551,2.757,552,2.757,553,3.171,554,3.171,555,3.171,556,4.635,557,4.635,558,4.635,559,3.171,560,3.631,561,4.635,562,4.635,563,4.635,564,2.757,565,4.635,566,2.757,567,3.171,568,2.484,569,2.757,570,2.757,571,3.171,572,3.171,573,3.171,574,3.171,575,3.171,576,3.171,577,3.171,578,3.171]],["title/components/FavoritesComponent.html",[56,1.131,87,1.661]],["body/components/FavoritesComponent.html",[0,0.071,3,0.111,4,0.098,5,0.098,10,0.313,21,0.975,23,1.216,26,1.013,29,0.014,47,0.177,50,0.111,53,0.006,54,0.009,55,0.006,56,1.688,57,1.589,58,1.757,59,1.915,60,1.915,61,1.915,62,1.915,64,1.915,65,4.041,66,3.845,68,2.694,70,2.694,77,0.72,78,1.297,79,2.694,80,2.694,81,1.915,82,3.383,83,1.915,84,1.915,85,1.202,86,1.915,87,2.691,88,1.915,89,1.523,90,1.915,91,1.589,92,1.915,93,1.523,94,1.915,95,1.589,96,1.915,97,1.589,98,1.915,99,1.523,100,1.297,101,1.915,102,1.915,160,3.996,192,1.974,201,1.403,202,1.738,247,3.189,321,2.143,364,3.285,370,3.565,393,2.421,394,2.84,405,2.607,408,5.036,417,2.607,418,2.607,579,3.152,580,5.903,581,5.101,582,3.625,583,3.625,584,6.406,585,7.722,586,6.088,587,7.003,588,7.003,589,6.406,590,6.406,591,5.101,592,5.903,593,2.84,594,3.152,595,2.84,596,3.625,597,3.625,598,3.625,599,3.625,600,3.625,601,3.625,602,3.152,603,4.245,604,3.625,605,3.625,606,2.84,607,3.152]],["title/modules/FavoritesModule.html",[103,1.091,608,2.844]],["body/modules/FavoritesModule.html",[0,0.081,3,0.126,4,0.111,5,0.111,29,0.014,47,0.234,50,0.126,53,0.007,54,0.01,55,0.007,58,2.171,77,0.816,78,1.47,85,2.544,87,2.337,103,1.133,105,2.158,106,1.97,107,3.331,108,2.065,109,1.844,110,2.346,117,2.938,118,2.17,119,1.882,121,2.153,124,2.153,131,2.419,154,1.99,432,3.514,433,3.678,434,3.678,435,3.678,447,3.096,448,2.17,608,5.883,609,3.573,610,3.573,611,4.109,612,4.109,613,4.861,614,3.219,615,4.109,616,3.573]],["title/modules/FavoritesRoutingModule.html",[103,1.091,613,2.641]],["body/modules/FavoritesRoutingModule.html",[0,0.107,3,0.168,4,0.147,5,0.147,29,0.014,47,0.25,50,0.205,53,0.009,54,0.011,55,0.009,56,1.558,77,1.081,87,2.803,105,1.74,110,2.027,121,2.109,124,2.582,150,3.207,151,3.927,152,3.353,153,2.738,154,1.949,156,3.638,613,4.456,616,4.736,617,5.448,618,5.448,619,3.918,620,5.448]],["title/modules/FeatureModule.html",[103,1.091,432,1.811]],["body/modules/FeatureModule.html",[0,0.084,3,0.132,4,0.115,5,0.115,29,0.014,47,0.281,50,0.132,53,0.007,54,0.01,55,0.007,77,0.85,105,1.368,110,1.593,121,1.658,124,2.214,211,2.86,225,2.152,381,2.678,432,2.62,447,3.183,448,2.262,621,4.283,622,6.44,623,5.719,624,4.283,625,5.719,626,4.283,627,5.719,628,4.283,629,5.719,630,4.283,631,5.719,632,4.283,633,5.719,634,4.283,635,5.719,636,4.283,637,5.719,638,4.283,639,5.719,640,4.283,641,5.719,642,4.283,643,4.973,644,3.724,645,5.719,646,4.283,647,5.719,648,4.283,649,5.719,650,4.283,651,4.283]],["title/classes/Forecast.html",[0,0.078,652,2.089]],["body/classes/Forecast.html",[0,0.079,2,1.446,3,0.124,4,0.109,5,0.109,7,0.896,8,1.36,9,1.584,10,0.349,11,0.832,12,1.358,19,2.217,20,2.046,21,1.195,22,0.812,23,0.833,24,1.265,26,1.471,28,1,29,0.014,30,0.587,31,1.446,32,1.446,33,1.387,40,1.34,41,2.819,42,1.698,43,1.564,44,1.698,45,1.698,46,1.698,47,0.216,48,0.964,49,1.241,50,0.169,51,0.429,52,1,53,0.007,54,0.009,55,0.007,100,2.237,205,1.724,473,2.379,481,3.674,652,2.905,653,5.258,654,4.497,655,4.633,656,4.482,657,3.439,658,3.514,659,3.439,660,3.514,661,3.514,662,3.514,663,3.514,664,2.379,665,3.514,666,3.514,667,3.514,668,3.514]],["title/components/ForecastComponent.html",[56,1.131,89,1.661]],["body/components/ForecastComponent.html",[0,0.086,3,0.134,4,0.118,5,0.118,10,0.377,21,1.108,23,1.34,26,1.151,29,0.014,47,0.151,50,0.134,53,0.007,54,0.01,55,0.007,56,1.86,57,1.915,58,1.996,59,2.308,60,2.308,61,2.308,62,2.308,64,2.308,65,4.177,66,3.975,68,3.061,70,3.061,77,0.867,78,1.563,79,3.061,80,3.061,81,2.308,82,3.659,83,2.308,84,2.308,85,1.449,86,2.308,87,1.836,88,2.308,89,2.91,90,2.308,91,1.915,92,2.308,93,1.836,94,2.308,95,1.915,96,2.308,97,1.915,98,2.308,99,1.836,100,1.563,101,2.308,102,2.308,192,2.243,201,1.691,202,2.095,321,2.435,364,3.62,370,3.856,652,3.659,669,3.799,670,6.504,671,5.796,672,4.37,673,4.37,674,4.541]],["title/modules/ForecastModule.html",[103,1.091,675,2.844]],["body/modules/ForecastModule.html",[0,0.081,3,0.126,4,0.111,5,0.111,29,0.014,47,0.234,50,0.126,53,0.007,54,0.01,55,0.007,58,2.171,77,0.816,78,1.47,85,2.544,89,2.337,103,1.133,105,2.158,106,1.97,107,3.331,108,2.065,109,1.844,110,2.346,117,2.938,118,2.17,119,1.882,121,2.153,124,2.153,131,2.419,154,1.99,432,3.514,433,3.678,434,3.678,435,3.678,447,3.096,448,2.17,675,5.883,676,3.573,677,4.109,678,3.573,679,4.109,680,4.861,681,3.219,682,4.109,683,3.573]],["title/modules/ForecastRoutingModule.html",[103,1.091,680,2.641]],["body/modules/ForecastRoutingModule.html",[0,0.107,3,0.168,4,0.147,5,0.147,29,0.014,47,0.25,50,0.205,53,0.009,54,0.011,55,0.009,56,1.558,77,1.081,89,2.803,105,1.74,110,2.027,121,2.109,124,2.582,150,3.207,151,3.927,152,3.353,153,2.738,154,1.949,156,3.638,619,3.918,680,4.456,683,4.736,684,5.448,685,5.448,686,5.448]],["title/classes/GeoPosition.html",[0,0.078,687,2.328]],["body/classes/GeoPosition.html",[0,0.08,2,1.456,3,0.125,4,0.11,5,0.11,7,0.903,8,1.367,9,1.587,10,0.351,11,0.836,12,1.377,19,2.227,20,2.056,21,1.2,22,0.822,23,0.839,24,1.271,26,1.499,28,1.007,29,0.014,30,0.591,31,1.456,32,1.456,33,1.392,37,2.076,40,1.35,41,2.828,42,1.71,43,1.575,44,1.71,45,1.71,46,1.71,47,0.191,48,0.971,49,1.097,50,0.17,51,0.432,52,1.007,53,0.007,54,0.009,55,0.007,175,3.747,205,1.122,238,4.496,240,4.496,473,2.396,480,4.33,481,2.718,483,4.642,487,3.455,687,3.253,688,5.513,689,3.539,690,3.539,691,3.539]],["title/components/HeaderComponent.html",[56,1.131,91,1.733]],["body/components/HeaderComponent.html",[0,0.056,3,0.087,4,0.077,5,0.077,10,0.245,11,0.646,12,1.137,21,0.817,22,0.454,23,1.058,26,1.215,29,0.014,40,1.893,47,0.148,50,0.087,53,0.005,54,0.007,55,0.005,56,1.468,57,1.246,58,1.471,59,1.501,60,1.501,61,1.501,62,1.501,64,1.501,65,3.838,66,3.7,68,2.257,70,2.257,74,1.873,75,1.654,77,0.564,78,1.017,79,2.257,80,2.257,81,1.501,82,3.016,83,1.501,84,1.501,85,0.942,86,1.501,87,1.194,88,1.501,89,1.194,90,1.501,91,2.503,92,1.501,93,1.194,94,1.501,95,1.246,96,1.501,97,1.246,98,1.501,99,1.194,100,1.017,101,1.501,102,1.501,119,1.957,160,3.347,192,1.654,201,1.1,202,1.362,205,1.416,321,1.795,364,2.858,370,3.178,393,1.898,394,2.226,395,2.47,396,2.47,398,4.464,399,4.464,400,4.464,401,2.47,402,2.47,403,4.089,404,4.107,405,4.937,407,4.473,408,4.107,409,2.226,410,2.226,411,3.347,417,2.044,418,4.107,420,3.715,424,3.715,425,4.022,593,3.347,594,2.47,603,4.107,606,2.226,692,2.47,693,5.592,694,5.134,695,4.272,696,5.134,697,5.134,698,4.272,699,5.134,700,4.272,701,5.71,702,2.842,703,2.842,704,2.842,705,4.272,706,2.842,707,3.347,708,3.347,709,5.134,710,4.965,711,5.323,712,5.801,713,2.47,714,2.842,715,2.842,716,4.272,717,2.842,718,2.842,719,2.842,720,2.47,721,2.226,722,2.47,723,2.842,724,2.226,725,4.272,726,4.272,727,4.272,728,2.842,729,4.272,730,3.715,731,3.715,732,2.842,733,2.47,734,2.842,735,3.715,736,3.715,737,4.272,738,2.842]],["title/modules/HeaderModule.html",[103,1.091,433,1.896]],["body/modules/HeaderModule.html",[0,0.08,3,0.126,4,0.11,5,0.11,29,0.014,47,0.244,50,0.126,53,0.007,54,0.009,55,0.007,58,2.169,77,0.814,78,1.467,85,2.543,91,2.434,103,1.13,105,2.156,106,1.965,107,3.327,108,2.06,109,1.841,110,2.343,117,2.933,118,2.165,119,1.878,121,2.149,124,2.149,131,2.413,154,1.987,432,3.584,433,3.969,434,3.676,435,3.676,447,3.091,448,2.165,458,2.948,739,3.564,740,4.099,741,3.564,742,4.099,743,4.858,744,3.211,745,4.099,746,4.099]],["title/modules/HeaderRoutingModule.html",[103,1.091,743,2.641]],["body/modules/HeaderRoutingModule.html",[0,0.112,3,0.176,4,0.154,5,0.154,29,0.014,47,0.238,50,0.211,53,0.01,54,0.012,55,0.01,77,1.135,105,1.827,110,2.128,121,2.214,124,2.66,150,3.366,151,4.045,152,3.454,153,2.874,154,2.046,743,4.589,747,5.719,748,5.719,749,5.719]],["title/classes/Headline.html",[0,0.078,655,2.472]],["body/classes/Headline.html",[0,0.065,2,1.194,3,0.103,4,0.09,5,0.09,7,0.74,8,1.189,9,1.501,10,0.288,11,0.728,12,1.404,19,1.938,20,1.789,21,1.078,22,0.832,23,0.687,24,1.106,26,1.535,27,2.229,28,0.825,29,0.014,30,0.484,31,1.194,32,1.194,33,1.727,36,2.614,37,2.094,38,2.229,39,2.229,40,2.328,41,2.592,42,1.402,43,1.292,44,1.402,45,1.402,46,1.402,47,0.116,48,0.796,49,0.662,50,0.148,51,0.354,52,0.825,53,0.006,54,0.008,55,0.006,265,2.4,267,2.4,345,3.858,347,3.858,354,2.614,355,2.614,356,3.768,560,4.834,655,3.007,657,3.858,724,4.834,750,5.896,751,5.365,752,5.365,753,5.365,754,5.365,755,5.365]],["title/interfaces/IAdministrativeArea.html",[25,2.201,51,0.42]],["body/interfaces/IAdministrativeArea.html",[0,0.086,1,2.432,3,0.134,4,0.118,5,0.118,6,3.423,7,0.969,8,1.081,9,1.239,10,0.377,11,0.877,12,1.263,13,6.267,14,4.507,15,6.267,16,6.267,17,4.012,18,6.267,20,2.577,22,0.803,24,1.005,25,3.62,29,0.014,30,1.169,33,1.831,37,1.981,47,0.151,48,1.042,49,0.867,50,0.178,51,0.464,52,1.081,53,0.007,54,0.01,55,0.007,297,1.563]],["title/interfaces/IAutoComplete.html",[51,0.42,264,2.641]],["body/interfaces/IAutoComplete.html",[0,0.077,1,4.17,3,0.121,4,0.106,5,0.106,7,0.872,8,0.972,9,1.154,10,0.339,11,0.816,12,1.277,17,3.87,22,0.825,24,0.904,25,4.095,29,0.014,33,1.749,37,2.143,47,0.213,48,0.938,49,1.071,50,0.166,51,0.418,52,0.972,53,0.007,54,0.009,55,0.007,109,1.303,205,1.488,222,1.976,256,2.188,257,3.08,258,3.672,259,3.418,260,4.643,261,5,262,3.418,263,5.447,264,4.116,269,2.827,270,2.827,271,2.827,272,2.827,273,3.418,274,3.418,275,3.08,276,3.418,277,3.418,278,3.418,297,1.406]],["title/interfaces/IConditions.html",[51,0.42,351,2.641]],["body/interfaces/IConditions.html",[0,0.071,3,0.111,4,0.097,5,0.097,7,0.797,8,0.889,9,1.084,10,0.31,11,0.767,12,1.288,22,0.792,24,0.827,29,0.014,30,1.16,33,1.71,37,2.096,40,2.116,47,0.203,48,0.857,49,1.007,50,0.156,51,0.382,52,0.889,53,0.006,54,0.009,55,0.006,109,1.192,205,0.991,210,3.871,222,1.807,297,1.286,339,1.899,340,2.816,341,5.851,342,2.585,343,4.84,344,5.851,345,4.207,346,5.851,347,4.207,348,3.995,349,5.851,350,5.851,351,3.924,358,3.552,359,2.585,360,2.585,361,2.585,362,3.125]],["title/interfaces/ICountry.html",[51,0.42,472,2.472]],["body/interfaces/ICountry.html",[0,0.099,3,0.155,4,0.136,5,0.136,7,1.12,8,1.249,9,1.36,10,0.436,11,0.963,12,1.085,14,4.716,17,4.199,20,2.722,22,0.74,24,1.161,29,0.014,30,1.118,33,1.794,47,0.175,48,1.204,49,1.002,50,0.196,51,0.536,52,1.249,53,0.009,54,0.011,55,0.009,258,2.666,297,1.806,471,3.955,472,4.357]],["title/interfaces/IDay.html",[51,0.42,479,2.472]],["body/interfaces/IDay.html",[0,0.094,3,0.147,4,0.129,5,0.129,7,1.06,8,1.183,9,1.314,10,0.413,11,0.93,12,1.223,22,0.722,24,1.1,29,0.014,30,1.103,33,1.591,37,2.051,47,0.213,48,1.141,49,0.949,50,0.189,51,0.508,52,1.183,53,0.008,54,0.011,55,0.008,109,1.586,210,3.788,222,2.403,297,1.711,342,3.439,343,5.336,475,2.99,476,3.746,477,5.813,478,6.451,479,4.248,482,4.158]],["title/interfaces/IElevation.html",[51,0.42,487,2.472]],["body/interfaces/IElevation.html",[0,0.098,3,0.153,4,0.134,5,0.134,7,1.107,8,1.234,9,1.35,10,0.431,11,0.956,12,1.077,22,0.671,24,1.148,29,0.014,30,1.058,47,0.219,48,1.19,49,1.254,50,0.194,51,0.53,52,1.234,53,0.009,54,0.011,55,0.009,205,1.742,297,1.785,483,3.12,484,3.909,485,6.535,486,4.392,487,4.334,488,4.341,489,3.589,490,4.338,491,4.338,492,4.338,493,4.338]],["title/interfaces/IForecast.html",[51,0.42,656,2.641]],["body/interfaces/IForecast.html",[0,0.093,3,0.146,4,0.128,5,0.128,7,1.055,8,1.176,9,1.31,10,0.411,11,0.927,12,1.044,22,0.651,24,1.094,29,0.014,30,1.039,47,0.235,48,1.134,49,1.345,50,0.188,51,0.505,52,1.176,53,0.008,54,0.01,55,0.008,100,2.192,205,1.869,297,1.702,652,2.512,653,3.726,654,3.42,655,4.823,656,4.526,657,4.475,658,4.135,659,4.475,660,4.135,661,6.223,662,4.135,663,4.135,664,2.799,665,4.135,666,4.135,667,4.135,668,4.135]],["title/interfaces/IGeoPosition.html",[51,0.42,175,2.201]],["body/interfaces/IGeoPosition.html",[0,0.094,3,0.148,4,0.13,5,0.13,7,1.066,8,1.189,9,1.319,10,0.415,11,0.933,12,1.161,22,0.724,24,1.106,29,0.014,30,1.104,37,2.24,47,0.214,48,1.147,49,1.225,50,0.19,51,0.511,52,1.189,53,0.008,54,0.011,55,0.008,175,3.792,205,1.326,238,4.964,240,4.964,297,1.721,483,4.835,487,4.493,687,2.831,688,3.767,689,4.181,690,4.181,691,4.181]],["title/interfaces/IHeadline.html",[51,0.42,657,2.472]],["body/interfaces/IHeadline.html",[0,0.076,3,0.119,4,0.104,5,0.104,7,0.858,8,0.957,9,1.141,10,0.334,11,0.808,12,1.291,22,0.805,24,0.89,29,0.014,30,1.17,33,1.773,37,2.234,40,2.475,47,0.134,48,0.923,49,0.768,50,0.164,51,0.411,52,0.957,53,0.007,54,0.009,55,0.007,297,1.384,345,4.322,347,4.322,560,5.416,655,2.419,657,3.821,724,5.416,750,3.031,751,6.011,752,6.011,753,6.011,754,6.011,755,6.011]],["title/interfaces/ILocation.html",[51,0.42,756,2.641]],["body/interfaces/ILocation.html",[0,0.057,1,3.737,3,0.089,4,0.078,5,0.078,7,0.642,8,0.716,9,0.926,10,0.25,11,0.655,12,1.286,14,3.858,17,3.434,22,0.814,24,0.666,25,3.208,29,0.014,30,1.155,33,1.729,37,1.648,47,0.232,48,0.69,49,1.333,50,0.133,51,0.307,52,0.716,53,0.005,54,0.007,55,0.005,175,3.208,176,2.081,205,1.786,210,3.259,258,3.796,260,4.121,261,4.438,269,2.081,270,2.081,271,2.081,272,2.081,297,1.035,339,2.742,472,4.197,652,2.742,664,1.703,687,4.063,756,3.467,757,2.267,758,4.438,759,5.365,760,5.365,761,4.316,762,3.603,763,2.267,764,2.516,765,2.267,766,2.516,767,1.809,768,2.516,769,3.766,770,2.516,771,2.516,772,2.516,773,2.516,774,2.516,775,2.516,776,2.516]],["title/interfaces/IMenuEvent.html",[51,0.42,777,2.844]],["body/interfaces/IMenuEvent.html",[3,0.173,4,0.152,5,0.152,10,0.486,11,1.029,22,0.723,29,0.014,47,0.195,50,0.173,51,0.598,53,0.01,54,0.012,55,0.01,297,2.013,381,3.517,595,5.954,777,4.893,778,4.891,779,4.407,780,6.607,781,6.607,782,7.315]],["title/interfaces/IMetric.html",[51,0.42,488,2.201]],["body/interfaces/IMetric.html",[0,0.098,3,0.153,4,0.134,5,0.134,7,1.107,8,1.234,9,1.35,10,0.431,11,0.956,12,1.182,22,0.736,24,1.148,29,0.014,30,1.115,33,1.616,37,2.257,47,0.173,48,1.19,49,0.991,50,0.194,51,0.53,52,1.234,53,0.009,54,0.011,55,0.009,75,2.909,297,1.785,486,2.777,488,3.858,783,3.909,784,5.889,785,6.535]],["title/interfaces/ISearchEvent.html",[51,0.42,786,2.844]],["body/interfaces/ISearchEvent.html",[3,0.172,4,0.151,5,0.151,10,0.484,11,1.027,22,0.721,29,0.014,33,1.62,50,0.172,51,0.596,53,0.01,54,0.012,55,0.01,297,2.006,779,4.393,780,6.6,786,4.884,787,4.875,788,7.591,789,7.304,790,7.304]],["title/interfaces/ITemperature.html",[51,0.42,358,2.201]],["body/interfaces/ITemperature.html",[0,0.099,3,0.155,4,0.136,5,0.136,7,1.116,8,1.245,9,1.358,10,0.435,11,0.961,12,1.083,22,0.675,24,1.158,29,0.014,30,1.061,47,0.22,48,1.201,49,1.261,50,0.195,51,0.535,52,1.245,53,0.009,54,0.011,55,0.009,205,1.752,297,1.801,322,5.42,348,2.802,358,3.874,486,3.874,488,4.349,489,3.62,791,3.944,792,6.553,793,4.377,794,4.377,795,4.377,796,4.377]],["title/interfaces/ITimeZone.html",[51,0.42,762,2.472]],["body/interfaces/ITimeZone.html",[0,0.089,3,0.14,4,0.123,5,0.123,7,1.01,8,1.127,9,1.273,10,0.393,11,0.901,12,1.2,21,1.346,22,0.776,24,1.048,29,0.014,30,1.147,33,1.693,37,2.014,40,2.334,47,0.158,48,1.086,49,0.904,50,0.183,51,0.484,52,1.127,53,0.008,54,0.01,55,0.008,210,3.719,297,1.63,761,2.847,762,4.15,797,3.568,798,5.724,799,6.352,800,6.352,801,6.352]],["title/interfaces/IWeather.html",[51,0.42,659,2.472]],["body/interfaces/IWeather.html",[0,0.071,3,0.111,4,0.098,5,0.098,7,0.804,8,0.897,9,1.09,10,0.313,11,0.772,12,1.252,22,0.78,24,0.834,29,0.014,30,1.151,33,1.712,37,1.832,40,2.476,47,0.204,48,0.865,49,1.172,50,0.157,51,0.385,52,0.897,53,0.006,54,0.009,55,0.006,100,1.297,205,1.766,297,1.297,345,4.22,347,4.22,348,4.004,358,3.565,359,2.607,360,2.607,361,2.607,475,4.73,479,4.498,659,3.69,664,2.134,802,2.84,803,5.869,804,5.869,805,5.869,806,3.152,807,4.435,808,3.152,809,3.152,810,3.152,811,3.152]],["title/classes/Location.html",[0,0.078,767,2.472]],["body/classes/Location.html",[0,0.049,1,3.551,2,0.894,3,0.077,4,0.067,5,0.067,7,0.554,8,0.958,9,1.364,10,0.216,11,0.586,12,1.399,14,3.34,17,2.974,19,1.561,20,1.441,21,0.907,22,0.823,23,0.515,24,0.891,25,2.156,26,1.514,28,0.618,29,0.014,30,0.363,31,0.894,32,0.894,33,1.656,37,1.357,40,0.829,41,2.244,42,1.05,43,0.967,44,1.05,45,1.05,46,1.05,47,0.221,48,0.596,49,1.266,50,0.119,51,0.265,52,0.618,53,0.004,54,0.007,55,0.004,175,2.156,176,1.797,205,1.687,210,3.053,258,3.719,260,3.568,261,3.842,266,2.173,268,2.173,269,1.797,270,1.797,271,1.797,272,1.797,339,3.23,352,2.173,353,2.173,357,2.173,472,2.965,652,3.23,664,1.471,687,3.88,756,3.568,757,5.849,758,3.842,759,4.645,760,4.645,761,4.122,762,2.422,763,1.958,764,2.173,765,1.958,766,2.173,767,2.422,768,4.124,769,3.368,770,2.173,771,2.173,772,2.173,773,2.173,774,2.173,775,2.173,776,2.173,812,3.874,813,2.499,814,2.499,815,2.499,816,2.499,817,2.499,818,2.499,819,2.499,820,2.499]],["title/guards/LocationResolver.html",[454,2.844,821,3.098]],["body/guards/LocationResolver.html",[0,0.093,3,0.145,4,0.127,5,0.127,10,0.408,21,1.167,22,0.648,23,0.974,26,1.212,28,1.51,29,0.014,30,0.886,47,0.256,50,0.145,53,0.008,54,0.01,55,0.008,77,0.939,123,2.377,153,2.377,177,2.796,178,3.59,184,2.498,192,2.363,201,1.831,207,3.762,220,2.498,225,2.377,321,1.987,330,2.633,371,3.401,376,4.077,383,2.957,454,4.39,544,3.705,822,4.73,823,4.112,824,7.143,825,5.877,826,6.21,827,4.73,828,6.105,829,7.143,830,4.73,831,6.105,832,5.307,833,4.73]],["title/classes/Metric.html",[0,0.078,486,2.201]],["body/classes/Metric.html",[0,0.082,2,1.503,3,0.129,4,0.113,5,0.113,7,0.931,8,1.396,9,1.6,10,0.363,11,0.854,12,1.382,19,2.275,20,2.1,21,1.219,22,0.827,23,0.865,24,1.298,26,1.51,28,1.039,29,0.014,30,0.61,31,1.503,32,1.503,33,1.624,37,2.095,40,1.392,41,2.864,42,1.764,43,1.625,44,1.764,45,1.764,46,1.764,47,0.145,48,1.002,49,0.834,50,0.174,51,0.446,52,1.039,53,0.007,54,0.01,55,0.007,75,2.639,473,2.472,474,3.02,481,3.77,486,3.142,488,3.795,783,5.573,784,5.341,785,5.927]],["title/classes/RequestCache.html",[0,0.078,320,2.472]],["body/classes/RequestCache.html",[0,0.108,2,1.453,3,0.125,4,0.109,5,0.109,10,0.351,12,0.692,21,1.055,22,0.586,23,0.837,26,1.095,28,1.365,29,0.014,30,0.801,47,0.217,49,0.806,50,0.17,53,0.007,54,0.009,55,0.007,77,0.806,123,2.041,154,2.406,177,2.527,181,3.968,184,2.914,192,2.136,201,2.136,202,3.004,205,1.12,287,5.813,296,2.712,299,3.181,300,5.057,301,2.92,302,5.43,303,2.712,304,3.181,305,3.53,306,3.53,307,4.797,309,5.449,310,5.042,312,3.685,313,5.846,314,4.797,316,2.92,317,3.53,319,3.53,320,3.918,321,1.706,322,2.92,323,3.181,324,3.53,325,3.53,326,3.53,327,4.797,328,4.797,329,3.53,330,2.26,331,3.53,332,4.797,333,3.53,334,4.797,335,3.53,336,3.53,337,3.53,338,3.53,834,4.061,835,4.061]],["title/interceptors/RequestInterceptor.html",[438,2.641,451,2.641]],["body/interceptors/RequestInterceptor.html",[0,0.081,3,0.127,4,0.111,5,0.111,10,0.356,21,1.065,22,0.592,23,0.849,26,1.106,28,1.378,29,0.014,30,0.809,47,0.262,50,0.127,53,0.007,54,0.01,55,0.007,77,0.818,109,1.366,123,2.07,154,1.474,177,2.552,178,3.4,184,2.175,192,2.156,201,1.594,207,3.514,220,2.175,222,2.07,225,2.07,247,3.947,285,3.227,302,4.007,310,4.518,312,4.217,320,4.229,321,1.73,323,4.946,330,2.293,371,2.962,376,3.721,383,2.575,388,4.365,390,3.581,438,3.721,462,3.581,494,3.227,496,2.751,498,4.365,501,4.365,502,5.299,508,3.581,509,2.962,511,3.227,512,4.365,513,2.962,564,3.581,568,3.227,569,3.581,570,3.581,836,5.489,837,4.119,838,4.119,839,4.119,840,4.119,841,4.119,842,5.571,843,4.119,844,3.581,845,4.119,846,4.119,847,4.119,848,4.119,849,4.119]],["title/interceptors/ResponseInterceptor.html",[439,2.641,451,2.641]],["body/interceptors/ResponseInterceptor.html",[0,0.095,3,0.149,4,0.131,5,0.131,10,0.419,21,1.186,22,0.659,23,0.999,26,1.231,28,1.534,29,0.014,30,0.901,47,0.25,50,0.149,53,0.008,54,0.011,55,0.008,77,0.963,123,2.437,177,2.841,178,3.624,192,2.401,201,1.877,207,3.807,220,2.561,225,2.437,247,4.276,310,4.815,312,3.239,321,2.037,330,2.699,371,3.488,376,4.143,383,3.032,439,4.143,494,3.799,496,3.239,498,4.86,501,4.86,502,5.648,511,3.799,512,4.86,844,4.216,850,5.947,851,4.85,852,4.85]],["title/components/SearchComponent.html",[56,1.131,93,1.661]],["body/components/SearchComponent.html",[0,0.039,3,0.061,4,0.053,5,0.053,10,0.171,11,0.487,12,1.305,21,0.778,22,0.619,23,0.408,26,1.359,28,0.49,29,0.014,30,0.749,47,0.223,49,0.393,50,0.061,53,0.003,54,0.006,55,0.003,56,1.164,57,0.869,58,1.109,59,1.047,60,1.047,61,1.047,62,1.047,64,1.047,65,3.486,66,3.383,68,1.702,70,1.702,72,1.723,74,2.423,75,2.254,77,0.393,78,0.709,79,1.702,80,1.702,81,1.047,82,2.476,83,1.047,84,1.047,85,0.657,86,1.047,87,0.832,88,1.047,89,0.832,90,1.047,91,0.869,92,1.047,93,1.969,94,1.047,95,0.869,96,1.047,97,0.869,98,1.047,99,0.832,100,1.456,101,1.047,102,1.047,184,2.919,192,1.247,201,0.767,202,0.95,204,4.076,205,1.293,207,2.266,220,1.047,225,0.996,238,2.152,240,2.152,256,2.266,316,1.425,321,1.353,364,2.266,370,2.609,381,1.239,388,3.673,393,1.324,403,3.131,404,4.189,407,2.524,408,2.317,409,2.524,410,2.524,411,3.673,417,4.189,421,1.723,422,1.723,423,2.801,425,1.552,440,2.931,463,1.723,477,2.524,509,1.425,586,3.539,593,4.33,602,1.723,603,3.709,606,1.552,607,2.801,693,2.801,707,2.524,708,2.524,710,3.539,711,3.539,712,3.539,713,2.801,720,4.484,721,3.673,722,2.801,730,4.076,731,3.539,733,1.723,767,2.545,777,2.927,781,4.484,786,2.317,853,1.723,854,5.277,855,4.071,856,3.222,857,4.071,858,4.071,859,4.071,860,4.071,861,4.071,862,4.071,863,4.071,864,4.071,865,4.071,866,4.071,867,4.071,868,1.982,869,3.222,870,1.982,871,4.688,872,1.982,873,1.982,874,1.982,875,1.982,876,1.982,877,1.982,878,1.982,879,3.222,880,3.222,881,3.222,882,1.982,883,1.982,884,1.982,885,1.982,886,3.222,887,1.982,888,1.982,889,1.723,890,1.982,891,1.982,892,1.982,893,1.552,894,3.222,895,1.982,896,4.071,897,1.982,898,1.982,899,1.982,900,1.982,901,1.982,902,1.982,903,1.982,904,1.982,905,1.982,906,1.982,907,1.982,908,1.723,909,3.222,910,3.222,911,1.982,912,3.222,913,1.982,914,1.723,915,1.982,916,1.982,917,1.982,918,1.982,919,2.801,920,3.222,921,3.222,922,3.222,923,1.982,924,3.222,925,1.982,926,1.982,927,1.982,928,1.982,929,1.982,930,5.158,931,3.222,932,1.982,933,3.222,934,1.982,935,3.222,936,3.222,937,3.222,938,3.222,939,1.982,940,3.222,941,1.723,942,1.982]],["title/modules/SearchModule.html",[103,1.091,434,1.896]],["body/modules/SearchModule.html",[0,0.079,3,0.124,4,0.109,5,0.109,29,0.014,47,0.251,50,0.124,53,0.007,54,0.009,55,0.007,58,2.153,77,0.802,78,1.446,85,2.535,93,2.311,103,1.115,105,2.144,106,1.937,107,3.302,108,2.031,109,1.824,110,2.326,117,2.905,118,2.135,119,1.851,121,2.129,124,2.129,131,2.379,154,1.968,432,3.575,433,3.665,434,3.965,435,3.665,447,3.061,448,2.135,458,2.907,893,3.166,943,3.514,944,4.042,945,3.514,946,4.042,947,4.837,948,3.166,949,5.5,950,4.042,951,3.514]],["title/modules/SearchRoutingModule.html",[103,1.091,947,2.641]],["body/modules/SearchRoutingModule.html",[0,0.107,3,0.168,4,0.147,5,0.147,29,0.014,47,0.25,50,0.205,53,0.009,54,0.011,55,0.009,56,1.558,77,1.081,93,2.803,105,1.74,110,2.027,121,2.109,124,2.582,150,3.207,151,3.927,152,3.353,153,2.738,154,1.949,156,3.638,619,3.918,947,4.456,951,4.736,952,5.448,953,5.448,954,5.448]],["title/components/SettingsComponent.html",[56,1.131,95,1.733]],["body/components/SettingsComponent.html",[0,0.086,3,0.134,4,0.118,5,0.118,10,0.377,21,1.108,23,1.34,26,1.151,29,0.014,47,0.151,50,0.134,53,0.007,54,0.01,55,0.007,56,1.86,57,1.915,58,1.996,59,2.308,60,2.308,61,2.308,62,2.308,64,2.308,65,4.177,66,3.975,68,3.061,70,3.061,77,0.867,78,1.563,79,3.061,80,3.061,81,2.308,82,3.659,83,2.308,84,2.308,85,1.449,86,2.308,87,1.836,88,2.308,89,1.836,90,2.308,91,1.915,92,2.308,93,1.836,94,2.308,95,3.037,96,2.308,97,1.915,98,2.308,99,1.836,100,1.563,101,2.308,102,2.308,192,2.243,201,1.691,202,2.095,224,4.982,321,2.435,364,3.62,370,3.856,674,4.541,955,3.799,956,6.504,957,5.796,958,4.37,959,4.37]],["title/components/SidenavComponent.html",[56,1.131,97,1.733]],["body/components/SidenavComponent.html",[0,0.073,3,0.114,4,0.1,5,0.1,10,0.32,12,0.633,21,1.143,22,0.551,23,0.764,26,1.187,28,0.918,29,0.014,30,0.539,47,0.224,50,0.114,53,0.006,54,0.009,55,0.006,56,1.71,57,1.627,58,1.786,59,1.96,60,1.96,61,1.96,62,1.96,64,1.96,65,4.059,66,3.953,68,2.739,70,2.739,74,1.627,75,1.436,77,0.737,78,1.328,79,2.739,80,2.739,81,1.96,82,3.418,83,1.96,84,1.96,85,1.23,86,1.96,87,1.559,88,1.96,89,1.559,90,1.96,91,1.627,92,1.96,93,1.559,94,1.96,95,1.627,96,1.96,97,2.837,98,1.96,99,1.559,100,1.328,101,1.96,102,1.96,119,2.375,137,2.478,139,3.737,140,2.478,147,3.992,148,4.063,178,3.253,192,2.007,201,1.436,202,1.779,225,1.865,321,2.178,364,3.327,370,3.602,383,2.32,393,2.478,403,2.478,404,2.669,405,2.669,406,3.226,418,3.729,426,5.197,603,2.669,707,2.907,708,2.907,735,4.509,736,4.509,941,4.509,960,3.226,961,5.978,962,5.186,963,5.186,964,3.711,965,5.186,966,5.186,967,3.711,968,3.711,969,5.186,970,3.711,971,3.711]],["title/modules/SidenavModule.html",[103,1.091,435,1.896]],["body/modules/SidenavModule.html",[0,0.081,3,0.127,4,0.111,5,0.111,29,0.014,47,0.252,50,0.127,53,0.007,54,0.01,55,0.007,58,2.174,77,0.818,78,1.474,85,2.545,95,2.442,97,2.442,103,1.136,105,2.16,106,1.974,107,3.335,108,2.07,109,1.847,110,2.349,117,2.943,118,2.175,119,1.887,121,2.156,124,2.156,154,1.993,432,3.587,433,3.68,434,3.68,435,3.959,447,3.101,448,2.175,458,2.962,643,4.844,644,3.581,972,4.119,973,4.119,974,4.119,975,4.119,976,3.227,977,4.119,978,4.119]],["title/classes/Temperature.html",[0,0.078,348,2.201]],["body/classes/Temperature.html",[0,0.083,2,1.517,3,0.13,4,0.114,5,0.114,7,0.94,8,1.405,9,1.604,10,0.366,11,0.86,12,1.367,19,2.29,20,2.114,21,1.225,22,0.82,23,0.874,24,1.307,26,1.489,28,1.049,29,0.014,30,0.616,31,1.517,32,1.517,33,1.421,40,1.406,41,2.875,42,1.781,43,1.641,44,1.781,45,1.781,46,1.781,47,0.197,48,1.011,49,1.128,50,0.175,51,0.45,52,1.049,53,0.007,54,0.01,55,0.007,205,1.567,322,4.923,348,3.162,358,3.81,473,3.344,474,3.05,486,3.972,488,3.566,489,3.05,791,5.362,792,5.951,793,3.687,794,3.687,795,3.687,796,3.687]],["title/classes/TimeZone.html",[0,0.078,761,2.472]],["body/classes/TimeZone.html",[0,0.078,2,1.416,3,0.122,4,0.107,5,0.107,7,0.878,8,1.341,9,1.575,10,0.342,11,0.82,12,1.386,19,2.185,20,2.017,21,1.272,22,0.826,23,0.815,24,1.247,26,1.511,28,0.979,29,0.014,30,0.575,31,1.416,32,1.416,33,1.634,34,3.441,35,4.714,37,1.769,40,2.206,41,2.795,42,1.663,43,1.532,44,1.663,45,1.663,46,1.663,47,0.137,48,0.944,49,0.786,50,0.167,51,0.42,52,0.979,53,0.007,54,0.009,55,0.007,210,3.267,480,3.101,481,2.643,761,3.39,762,4.159,797,5.639,798,5.212,799,5.784,800,5.784,801,5.784]],["title/classes/Weather.html",[0,0.078,100,1.415]],["body/classes/Weather.html",[0,0.062,2,1.13,3,0.097,4,0.085,5,0.085,7,0.701,8,1.143,9,1.476,10,0.273,11,0.699,12,1.392,19,1.863,20,1.719,21,1.045,22,0.82,23,0.651,24,1.063,26,1.508,27,2.11,28,0.781,29,0.014,30,0.459,31,1.13,32,1.13,33,1.669,37,1.563,38,2.11,39,2.11,40,2.348,41,2.526,42,1.327,43,1.223,44,1.327,45,1.327,46,1.327,47,0.189,48,0.754,49,1.085,50,0.142,51,0.336,52,0.781,53,0.005,54,0.008,55,0.005,100,1.654,205,1.659,265,2.272,267,2.272,345,3.76,347,3.76,348,3.844,354,2.475,355,2.475,356,3.621,358,2.573,359,2.272,360,2.272,361,2.272,475,4.651,479,3.417,659,3.76,664,1.86,802,5.751,803,5.229,804,5.229,805,5.229,806,2.747,807,4.019,808,2.747,809,2.747,810,2.747,811,2.747]],["title/components/WeatherComponent.html",[56,1.131,99,1.661]],["body/components/WeatherComponent.html",[0,0.086,3,0.134,4,0.118,5,0.118,10,0.377,21,1.108,23,1.34,26,1.151,29,0.014,47,0.151,50,0.134,53,0.007,54,0.01,55,0.007,56,1.86,57,1.915,58,1.996,59,2.308,60,2.308,61,2.308,62,2.308,64,2.308,65,4.177,66,3.975,68,3.061,70,3.061,77,0.867,78,1.563,79,3.061,80,3.061,81,2.308,82,3.659,83,2.308,84,2.308,85,1.449,86,2.308,87,1.836,88,2.308,89,1.836,90,2.308,91,1.915,92,2.308,93,1.836,94,2.308,95,1.915,96,2.308,97,1.915,98,2.308,99,2.91,100,2.579,101,2.308,102,2.308,192,2.243,201,1.691,202,2.095,321,2.435,364,3.62,370,3.856,674,4.541,979,3.799,980,6.504,981,5.796,982,4.37,983,4.37]],["title/modules/WeatherModule.html",[103,1.091,984,2.844]],["body/modules/WeatherModule.html",[0,0.08,3,0.126,4,0.11,5,0.11,29,0.014,47,0.234,50,0.126,53,0.007,54,0.009,55,0.007,58,2.169,77,0.814,78,1.467,85,2.543,99,2.333,103,1.13,105,2.156,106,1.965,107,3.327,108,2.06,109,1.841,110,2.343,117,2.933,118,2.165,119,1.878,121,2.149,124,2.149,131,2.413,154,1.987,432,3.513,433,3.676,434,3.676,435,3.676,447,3.091,448,2.165,984,5.882,985,3.564,986,4.099,987,4.099,988,3.564,989,4.858,990,3.211,991,4.099,992,3.564]],["title/modules/WeatherRoutingModule.html",[103,1.091,989,2.641]],["body/modules/WeatherRoutingModule.html",[0,0.107,3,0.168,4,0.147,5,0.147,29,0.014,47,0.25,50,0.205,53,0.009,54,0.011,55,0.009,56,1.558,77,1.081,99,2.803,105,1.74,110,2.027,121,2.109,124,2.582,150,3.207,151,3.927,152,3.353,153,2.738,154,1.949,156,3.638,619,3.918,989,4.456,992,4.736,993,5.448,994,5.448,995,5.448]],["title/injectables/WeatherService.html",[177,1.811,440,2.472]],["body/injectables/WeatherService.html",[0,0.051,3,0.08,4,0.07,5,0.07,9,0.554,10,0.224,11,0.602,12,1.27,21,0.495,22,0.423,23,0.533,26,1.386,28,0.64,29,0.014,30,0.376,31,1.735,32,0.927,33,1.433,37,1.139,47,0.25,48,0.618,49,1.166,50,0.08,53,0.004,54,0.007,55,0.004,74,2.998,75,2.826,77,0.514,109,0.859,123,1.301,167,3.403,177,1.823,179,1.862,181,3.488,184,3.856,205,1.926,207,3.453,220,1.368,222,1.301,223,2.029,224,1.862,225,1.301,256,3.03,260,3.636,264,1.729,316,4.226,330,1.441,339,1.368,351,1.729,416,3.461,440,2.489,509,1.862,568,3.119,595,2.029,652,1.368,656,1.729,664,2.855,756,1.729,758,1.862,763,2.029,765,2.029,767,3.032,825,3.461,826,4.733,832,4.217,854,3.461,889,2.251,908,2.251,914,2.251,996,2.251,997,3.8,998,4.85,999,4.85,1000,4.85,1001,4.85,1002,4.85,1003,4.85,1004,4.85,1005,2.589,1006,3.981,1007,2.589,1008,2.589,1009,2.589,1010,2.589,1011,2.589,1012,2.589,1013,2.589,1014,2.589,1015,2.589,1016,2.589,1017,2.589,1018,2.589,1019,4.85,1020,2.589,1021,2.589,1022,2.589,1023,2.589,1024,2.589,1025,2.589,1026,3.981,1027,2.589,1028,5.876,1029,2.589,1030,3.981,1031,5.876,1032,2.589,1033,2.589,1034,3.981,1035,2.589,1036,2.589,1037,2.589,1038,2.589,1039,2.589,1040,2.589,1041,2.589,1042,3.981,1043,3.981,1044,2.589,1045,2.589,1046,2.589,1047,2.589,1048,2.589,1049,2.589,1050,2.589]],["title/coverage.html",[1051,4.712]],["body/coverage.html",[0,0.144,1,1.227,5,0.059,6,2.75,7,1.74,9,0.471,22,0.234,25,1.227,29,0.014,51,0.781,53,0.004,54,0.006,55,0.004,56,1.861,57,0.967,58,2.095,63,1.917,85,0.731,87,0.926,89,0.926,91,0.967,93,0.926,95,0.967,97,0.967,99,0.926,100,0.789,105,1.943,109,1.164,167,1.378,168,1.917,169,1.917,175,1.227,177,2.003,178,1.108,180,1.917,205,0.608,221,2.75,256,1.227,257,2.75,258,1.165,264,1.473,279,1.917,284,1.727,296,1.473,298,1.917,303,1.473,304,2.75,320,1.378,339,1.165,340,2.75,348,1.227,351,1.473,358,1.227,363,1.917,412,6.5,437,1.473,438,1.473,439,1.473,440,1.378,441,2.75,451,2.921,454,1.586,471,2.75,472,1.378,475,1.378,476,2.75,479,1.378,483,1.378,484,2.75,486,1.227,487,1.378,488,1.227,495,3.426,496,3.637,513,1.586,514,1.586,525,1.727,579,1.917,614,2.75,652,1.165,653,2.75,655,1.378,656,1.473,657,1.378,659,1.378,669,1.917,681,2.75,687,1.298,688,2.75,692,1.917,744,2.75,750,2.75,756,1.473,757,2.75,761,1.378,762,1.378,767,1.378,777,1.586,778,1.917,779,2.75,783,2.75,786,1.586,787,1.917,791,2.75,797,2.75,802,2.75,821,1.727,823,1.917,836,1.917,850,1.917,853,1.917,948,2.75,955,1.917,960,1.917,976,2.75,979,1.917,990,2.75,996,1.917,997,1.727,1051,1.917,1052,2.205,1053,2.205,1054,2.205,1055,7.128,1056,2.205,1057,7.798,1058,7.798,1059,5.445,1060,5.8,1061,4.374,1062,4.336,1063,1.917,1064,1.917,1065,2.205,1066,2.205,1067,5.8,1068,3.511,1069,4.987,1070,4.374,1071,2.205,1072,2.205,1073,2.205,1074,2.205,1075,3.803,1076,3.052,1077,3.803,1078,3.052,1079,1.917,1080,2.205,1081,2.205]],["title/dependencies.html",[106,2.283,1082,3.292]],["body/dependencies.html",[29,0.014,43,1.971,53,0.009,54,0.011,55,0.009,77,1.011,106,2.441,108,2.56,126,5.564,127,5.013,153,2.56,220,2.69,286,4.428,448,2.69,721,3.99,893,3.99,1083,5.093,1084,6.95,1085,5.093,1086,5.093,1087,5.093,1088,5.093,1089,5.093,1090,5.093,1091,5.093,1092,5.093,1093,5.093,1094,5.093,1095,5.093,1096,5.093,1097,5.093,1098,5.093,1099,5.093,1100,5.093,1101,6.399,1102,5.093,1103,5.093,1104,5.093,1105,5.093,1106,5.093,1107,5.093,1108,5.093,1109,5.093]],["title/miscellaneous/enumerations.html",[1110,2.367,1111,4.14]],["body/miscellaneous/enumerations.html",[10,0.401,29,0.014,53,0.008,54,0.01,55,0.008,75,3.172,100,2.157,133,4.336,136,4.336,139,3.77,146,5.242,256,3.356,258,3.185,339,3.185,654,4.336,758,4.336,1110,3.337,1111,4.035,1112,4.641,1113,6.03,1114,4.641,1115,6.03,1116,6.03,1117,4.641,1118,6.03,1119,6.03,1120,4.641,1121,6.03,1122,6.03,1123,6.03,1124,4.641,1125,6.03,1126,6.03,1127,4.641,1128,6.03,1129,6.03,1130,5.242,1131,4.641,1132,6.03,1133,4.641,1134,6.03,1135,6.03,1136,6.03,1137,6.03,1138,6.03,1139,6.03]],["title/index.html",[10,0.284,1140,3.292,1141,3.292]],["body/index.html",[4,0.125,21,0.885,29,0.01,53,0.008,54,0.01,55,0.008,56,1.913,66,2.326,76,5.816,119,2.12,205,1.276,263,3.626,376,3.091,403,3.091,514,3.328,542,4.716,652,2.444,784,4.716,798,3.626,919,4.024,1084,4.024,1142,6.019,1143,4.628,1144,6.69,1145,6.69,1146,7.528,1147,4.628,1148,4.628,1149,4.628,1150,4.628,1151,4.628,1152,4.628,1153,7.665,1154,4.628,1155,4.628,1156,4.628,1157,4.628,1158,4.628,1159,4.628,1160,4.628,1161,4.628,1162,4.628,1163,6.69,1164,6.69,1165,4.628,1166,7.344,1167,4.628,1168,4.628,1169,4.628,1170,4.628,1171,4.628,1172,4.024,1173,6.019,1174,7.084,1175,4.628,1176,6.019,1177,6.019,1178,4.628,1179,7.084,1180,4.628,1181,4.628,1182,4.628,1183,6.69,1184,4.628,1185,4.628,1186,4.628,1187,3.626,1188,4.628,1189,4.628]],["title/modules.html",[105,1.731]],["body/modules.html",[29,0.011,53,0.009,54,0.011,55,0.009,104,3.652,105,1.622,115,3.392,116,3.392,127,6.204,432,2.326,433,2.434,434,2.434,435,2.434,436,3.392,608,3.652,613,3.392,675,3.652,680,3.392,743,3.392,947,3.392,984,3.652,989,3.392,1190,7.919,1191,7.919,1192,8.248,1193,7.919,1194,7.919]],["title/overview.html",[1187,4.245]],["body/overview.html",[2,0.869,29,0.014,53,0.004,54,0.006,55,0.004,57,2.767,58,0.836,78,0.869,85,2.59,103,0.67,104,4.826,105,0.776,106,1.164,107,1.283,108,1.221,109,0.805,110,0.904,111,2.112,112,2.112,113,2.112,114,2.112,115,3.111,116,5.299,117,2.001,118,1.283,119,1.112,152,1.221,178,2.341,179,1.747,297,0.869,427,2.112,428,2.112,429,2.112,430,2.112,431,2.112,432,3.578,433,3.89,434,3.89,435,3.879,436,3.111,437,3.111,438,3.111,439,3.111,440,2.912,566,2.112,608,5.459,609,2.112,610,2.112,613,3.111,675,5.459,676,2.112,678,2.112,680,3.111,739,2.112,741,2.112,743,3.111,821,1.903,943,2.112,945,2.112,947,3.111,984,5.459,985,2.112,988,2.112,989,3.111,1187,1.903,1195,2.429,1196,2.429,1197,2.429,1198,3.788,1199,2.429]],["title/routes.html",[152,2.724]],["body/routes.html",[29,0.013,53,0.011,54,0.013,55,0.011,152,3.24]],["title/miscellaneous/variables.html",[1110,2.367,1200,4.14]],["body/miscellaneous/variables.html",[10,0.204,22,0.823,28,0.583,29,0.014,33,1.434,53,0.004,54,0.008,55,0.004,58,2.492,74,3.436,75,3.052,85,0.782,87,0.991,89,0.991,91,1.034,93,0.991,95,1.034,97,1.034,99,0.991,100,1.325,105,2.311,109,1.717,200,3.219,211,2.473,221,4.057,238,2.473,240,2.473,256,2.061,284,2.901,339,1.956,432,1.08,433,1.131,434,1.131,435,1.131,441,1.848,495,1.848,496,3.053,513,2.663,514,2.663,515,2.051,516,2.051,517,2.051,518,2.051,519,2.051,520,2.051,521,2.051,522,2.051,523,2.051,524,2.051,525,2.901,526,2.051,527,3.219,528,2.051,529,2.051,530,2.051,531,2.051,532,2.051,533,3.219,534,2.051,535,2.051,536,2.051,537,2.051,538,2.051,539,2.051,540,2.051,541,2.051,542,2.901,543,2.051,544,1.848,545,2.051,546,2.051,547,2.051,548,2.051,549,2.051,550,2.051,551,2.051,552,2.051,614,1.848,654,2.663,681,1.848,687,2.18,744,1.848,948,1.848,976,1.848,990,1.848,997,2.901,1062,2.051,1063,3.219,1064,3.219,1075,2.051,1076,4.502,1077,2.051,1078,2.051,1079,3.219,1110,1.696,1130,3.219,1172,3.219,1200,2.051,1201,3.703,1202,3.703,1203,3.703,1204,3.703,1205,3.703,1206,3.703,1207,3.703,1208,3.703,1209,5.178,1210,4.571,1211,4.571,1212,3.703,1213,2.359,1214,2.359,1215,2.359,1216,2.359,1217,2.359,1218,2.359,1219,2.359,1220,2.359,1221,2.359,1222,2.359,1223,2.359,1224,2.359,1225,6.466,1226,3.703,1227,3.703,1228,3.703,1229,3.703,1230,3.703,1231,5.178,1232,3.703,1233,3.703,1234,3.703,1235,3.703,1236,3.703,1237,3.703,1238,3.703,1239,3.703,1240,3.703,1241,3.703,1242,3.703,1243,2.359]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":412,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":717,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":603,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":566,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"overview.html":{}}}],["1.1.1",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":401,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":601,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":406,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":419,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["11.0.0",{"_index":1084,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":425,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["16",{"_index":1195,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["180.0000000",{"_index":916,"title":{},"body":{"components/SearchComponent.html":{}}}],["2.0.0",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["2.5px",{"_index":931,"title":{},"body":{"components/SearchComponent.html":{}}}],["20",{"_index":402,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":737,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":970,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":602,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["2px",{"_index":936,"title":{},"body":{"components/SearchComponent.html":{}}}],["3",{"_index":1197,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":969,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":927,"title":{},"body":{"components/SearchComponent.html":{}}}],["34.855499",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35px",{"_index":925,"title":{},"body":{"components/SearchComponent.html":{}}}],["4.1.0",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":600,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400",{"_index":526,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":596,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["401",{"_index":532,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":537,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":541,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":714,"title":{},"body":{"components/HeaderComponent.html":{}}}],["500",{"_index":547,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5px",{"_index":926,"title":{},"body":{"components/SearchComponent.html":{}}}],["6.6.0",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["8.64e+7",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["9",{"_index":1196,"title":{},"body":{"overview.html":{}}}],["90.0000000",{"_index":913,"title":{},"body":{"components/SearchComponent.html":{}}}],["absolute",{"_index":605,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["abstract",{"_index":287,"title":{},"body":{"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["access",{"_index":539,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":723,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":718,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":829,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":1,"title":{"classes/AdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["administrativearea(args?.administrativearea",{"_index":271,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["administrativearea(args?.country",{"_index":273,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["age",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["align",{"_index":710,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["amount",{"_index":400,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":1144,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":448,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":893,"title":{},"body":{"components/SearchComponent.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"dependencies.html":{}}}],["animate.css",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":534,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":57,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":376,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"index.html":{}}}],["applicationservice",{"_index":178,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":104,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":115,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":167,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["apptheme",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["appthemechange",{"_index":182,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["appthemestate",{"_index":183,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["args",{"_index":31,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["args?.country",{"_index":770,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.dailyforecasts",{"_index":663,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.dailyforecasts?.map(item",{"_index":665,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["args?.day",{"_index":809,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.geoposition",{"_index":772,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.night",{"_index":811,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["args?.region",{"_index":774,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args?.timezone",{"_index":776,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["args[key",{"_index":290,"title":{},"body":{"classes/BaseModel.html":{}}}],["array",{"_index":664,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["artifacts",{"_index":1167,"title":{},"body":{"index.html":{}}}],["assets/datasets/autocomplete.json",{"_index":516,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/conditions.json",{"_index":518,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/forecasts.json",{"_index":520,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/geoposition.json",{"_index":522,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["assets/datasets/locations.json",{"_index":524,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["atob(value",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":535,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":423,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["autocomplete",{"_index":256,"title":{"classes/AutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocomplete(item",{"_index":1033,"title":{},"body":{"injectables/WeatherService.html":{}}}],["autocompletemodule",{"_index":623,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":1158,"title":{},"body":{"index.html":{}}}],["available",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":394,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["bad",{"_index":528,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["basemodel",{"_index":9,"title":{"classes/BaseModel.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["basemodel:5",{"_index":42,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:6",{"_index":44,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:7",{"_index":45,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["basemodel:8",{"_index":46,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["baseurl",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":410,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["black",{"_index":598,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{}}}],["bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":731,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["bottom",{"_index":607,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["browse",{"_index":1192,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":719,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1166,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":625,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":1135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cache",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["cached",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedorigin",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresponse",{"_index":842,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["cachedresult",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cachedresult.lastread",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["cacheresult",{"_index":296,"title":{"interfaces/CacheResult.html":{}},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["cacheservice",{"_index":303,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["calc(#{$navbar",{"_index":716,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caption",{"_index":597,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":592,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":627,"title":{},"body":{"modules/FeatureModule.html":{}}}],["catcherror",{"_index":506,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["catcherror((error",{"_index":555,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["category",{"_index":751,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["center",{"_index":712,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["change",{"_index":1160,"title":{},"body":{"index.html":{}}}],["check",{"_index":1186,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":629,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":619,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["city",{"_index":1132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"overview.html":{}}}],["cli",{"_index":1145,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["closable",{"_index":557,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["cluster_appmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":427,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":430,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":429,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":431,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":428,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":609,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":611,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":612,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":610,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_forecastmodule",{"_index":676,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_forecastmodule_declarations",{"_index":677,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":679,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":678,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":739,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":740,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":742,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":741,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":943,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":944,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":946,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":945,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":972,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":973,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":974,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":975,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":985,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declarations",{"_index":987,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":986,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":988,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":798,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":1150,"title":{},"body":{"index.html":{}}}],["col",{"_index":942,"title":{},"body":{"components/SearchComponent.html":{}}}],["color",{"_index":593,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["colortheme",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colortheme.light",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":422,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["command",{"_index":919,"title":{},"body":{"components/SearchComponent.html":{},"index.html":{}}}],["common.scss",{"_index":393,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/exception",{"_index":450,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/request",{"_index":452,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":453,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":455,"title":{},"body":{"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":447,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["compass",{"_index":923,"title":{},"body":{"components/SearchComponent.html":{}}}],["component",{"_index":56,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["condition",{"_index":550,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":339,"title":{"classes/Conditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["conditions(result",{"_index":1037,"title":{},"body":{"injectables/WeatherService.html":{}}}],["config",{"_index":966,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(this",{"_index":295,"title":{},"body":{"classes/BaseModel.html":{}}}],["const",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["constants/color",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/data",{"_index":1015,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constants/panel",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":371,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["constructor(args",{"_index":24,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["constructor(config",{"_index":964,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(http",{"_index":1005,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(message",{"_index":499,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["constructor(private",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(weather",{"_index":868,"title":{},"body":{"components/SearchComponent.html":{}}}],["container",{"_index":365,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":367,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":366,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":456,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":457,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":458,"title":{},"body":{"modules/ContainerModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":745,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":746,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":459,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":977,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":978,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":460,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":85,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":116,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":469,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":436,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":408,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["context",{"_index":997,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ng",{"_index":933,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinates",{"_index":922,"title":{},"body":{"components/SearchComponent.html":{}}}],["coordinatesform",{"_index":857,"title":{},"body":{"components/SearchComponent.html":{}}}],["countries",{"_index":1128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":258,"title":{"classes/Country.html":{}},"body":{"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryflags",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countryid",{"_index":13,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["coverage",{"_index":1051,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcontext",{"_index":998,"title":{},"body":{"injectables/WeatherService.html":{}}}],["created",{"_index":19,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["createform",{"_index":858,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentdate",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentoption",{"_index":859,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentroute",{"_index":368,"title":{},"body":{"components/ContainerComponent.html":{}}}],["dailyforecasts",{"_index":661,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["dark",{"_index":1125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":573,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["dataset",{"_index":1019,"title":{},"body":{"injectables/WeatherService.html":{}}}],["datasets",{"_index":758,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["datasets.locations",{"_index":1022,"title":{},"body":{"injectables/WeatherService.html":{}}}],["date",{"_index":40,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["date.now",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["day",{"_index":475,"title":{"classes/Day.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["debouncetime",{"_index":885,"title":{},"body":{"components/SearchComponent.html":{}}}],["debouncetime(500",{"_index":901,"title":{},"body":{"components/SearchComponent.html":{}}}],["declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":513,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decodebase64(providers.weather.apikey",{"_index":570,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["delay",{"_index":839,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["dependencies",{"_index":106,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":558,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["dev",{"_index":1155,"title":{},"body":{"index.html":{}}}],["development",{"_index":1152,"title":{},"body":{"index.html":{}}}],["direction",{"_index":421,"title":{},"body":{"components/ContainerComponent.html":{},"components/SearchComponent.html":{}}}],["directive",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1165,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1169,"title":{},"body":{"index.html":{}}}],["display",{"_index":403,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":1168,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":886,"title":{},"body":{"components/SearchComponent.html":{}}}],["documentation",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":631,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":920,"title":{},"body":{"components/SearchComponent.html":{}}}],["e.item",{"_index":921,"title":{},"body":{"components/SearchComponent.html":{}}}],["e2e",{"_index":1180,"title":{},"body":{"index.html":{}}}],["ease",{"_index":736,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["effectivedate",{"_index":752,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["effectiveepochdate",{"_index":753,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["element",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":483,"title":{"classes/Elevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["elevation(args?.elevation",{"_index":691,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["encodebase64",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encountered",{"_index":548,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1179,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":754,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endepochdate",{"_index":755,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["endpoint",{"_index":540,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["englishname",{"_index":14,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["englishtype",{"_index":15,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["entry.lastread",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["enumerations",{"_index":1111,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":803,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["epochtime",{"_index":341,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["error",{"_index":561,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["error.status",{"_index":563,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["errors",{"_index":525,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors[error.status",{"_index":559,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["event",{"_index":388,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.query",{"_index":904,"title":{},"body":{"components/SearchComponent.html":{}}}],["event.ts",{"_index":779,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":391,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{}}}],["exceptioninterceptor",{"_index":437,"title":{"interceptors/ExceptionInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["exceptioninterceptor.failcount",{"_index":505,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["execute",{"_index":1176,"title":{},"body":{"index.html":{}}}],["expire",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["f",{"_index":1134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fa",{"_index":720,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["failcount",{"_index":497,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["failed",{"_index":536,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["failure",{"_index":242,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["favorites",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":581,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":580,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":615,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":616,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":87,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":608,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":618,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":613,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":432,"title":{"modules/FeatureModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fieldsetmodule",{"_index":633,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":1161,"title":{},"body":{"index.html":{}}}],["first",{"_index":584,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":1171,"title":{},"body":{"index.html":{}}}],["flagicon",{"_index":259,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["flex",{"_index":404,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":790,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":721,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{}}}],["forecast",{"_index":652,"title":{"classes/Forecast.html":{}},"body":{"classes/Forecast.html":{},"components/ForecastComponent.html":{},"interfaces/IForecast.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast(result",{"_index":1039,"title":{},"body":{"injectables/WeatherService.html":{}}}],["forecast.component.html",{"_index":671,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":670,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":1149,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":1151,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":682,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":683,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":89,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodule",{"_index":675,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{},"overview.html":{}}}],["forecastroutes",{"_index":685,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":680,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["forecasts",{"_index":654,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":930,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol",{"_index":891,"title":{},"body":{"components/SearchComponent.html":{}}}],["formcontrol(undefined",{"_index":909,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":871,"title":{},"body":{"components/SearchComponent.html":{}}}],["forroot",{"_index":443,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":444,"title":{},"body":{"modules/ContainerModule.html":{}}}],["found",{"_index":543,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fsevents",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":552,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1182,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1163,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1143,"title":{},"body":{"index.html":{}}}],["geoposition",{"_index":687,"title":{"classes/GeoPosition.html":{}},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(`${providers.weather.conditions}/${locationkey",{"_index":1035,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.forecasts}/${locationkey",{"_index":1038,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(`${providers.weather.locations}/${key",{"_index":1046,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.autocomplete",{"_index":1029,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(providers.weather.geoposition",{"_index":1040,"title":{},"body":{"injectables/WeatherService.html":{}}}],["get(req",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["getconditions",{"_index":999,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcontext",{"_index":1000,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcurrentposition",{"_index":235,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getforecast",{"_index":1001,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getgeoposition",{"_index":1002,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticon",{"_index":342,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["getlocation",{"_index":1003,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getting",{"_index":1140,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":185,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["given",{"_index":545,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gmtoffset",{"_index":799,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["go",{"_index":1185,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":396,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":821,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":822,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":43,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"dependencies.html":{}}}],["guid.newguid",{"_index":293,"title":{},"body":{"classes/BaseModel.html":{}}}],["handle(req.clone",{"_index":567,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["hasprecipitation",{"_index":343,"title":{},"body":{"classes/Conditions.html":{},"classes/Day.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{}}}],["header",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["header'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":91,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":433,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":748,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":743,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headline",{"_index":655,"title":{"classes/Headline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["headline(args?.headline",{"_index":668,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["height",{"_index":405,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":1183,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/formatters",{"_index":285,"title":{},"body":{"classes/BaseModel.html":{},"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["helpers/menu",{"_index":890,"title":{},"body":{"components/SearchComponent.html":{}}}],["helpers/search",{"_index":888,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":415,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":1139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":825,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://localhost:4200",{"_index":1157,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":449,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":826,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httperrorresponse",{"_index":510,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["httpevent",{"_index":511,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":502,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":512,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":302,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{}}}],["https://dataservice.accuweather.com",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comcurrentconditions/v1",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dataservice.accuweather.comforecasts/v1/daily/5day",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.countryflags.io",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iadministrativearea",{"_index":25,"title":{"interfaces/IAdministrativeArea.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iautocomplete",{"_index":264,"title":{"interfaces/IAutoComplete.html":{}},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["icon",{"_index":477,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"components/SearchComponent.html":{}}}],["iconditions",{"_index":351,"title":{"interfaces/IConditions.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["iconphrase",{"_index":478,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["icons",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icountry",{"_index":472,"title":{"interfaces/ICountry.html":{}},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/ICountry.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["iday",{"_index":479,"title":{"interfaces/IDay.html":{}},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["identifier",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["ielevation",{"_index":487,"title":{"interfaces/IElevation.html":{}},"body":{"classes/Elevation.html":{},"classes/GeoPosition.html":{},"interfaces/IElevation.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["iforecast",{"_index":656,"title":{"interfaces/IForecast.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["igeoposition",{"_index":175,"title":{"interfaces/IGeoPosition.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["iheadline",{"_index":657,"title":{"interfaces/IHeadline.html":{}},"body":{"classes/Forecast.html":{},"classes/Headline.html":{},"interfaces/IForecast.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["ilocation",{"_index":756,"title":{"interfaces/ILocation.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["image",{"_index":715,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imenuevent",{"_index":777,"title":{"interfaces/IMenuEvent.html":{}},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["imetric",{"_index":488,"title":{"interfaces/IMetric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["imperial",{"_index":485,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["implements",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":47,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./weather/weather.module').then(m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{}}}],["inherited",{"_index":41,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["injectable",{"_index":177,"title":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":179,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":941,"title":{},"body":{"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["input:focus",{"_index":932,"title":{},"body":{"components/SearchComponent.html":{}}}],["inputevent",{"_index":789,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":963,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":635,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":390,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/RequestInterceptor.html":{}}}],["intercept",{"_index":498,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":501,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":451,"title":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":496,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.ts:10",{"_index":852,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:11",{"_index":837,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:14",{"_index":838,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:25",{"_index":504,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:26",{"_index":500,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:29",{"_index":503,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["interceptor.ts:7",{"_index":851,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptors",{"_index":494,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":51,"title":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{}},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["interfaces",{"_index":297,"title":{},"body":{"interfaces/CacheResult.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"overview.html":{}}}],["invalid",{"_index":531,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["invalid:not(.ng",{"_index":934,"title":{},"body":{"components/SearchComponent.html":{}}}],["isalias",{"_index":759,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isdaylightsaving",{"_index":800,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["isdaytime",{"_index":344,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["isearchevent",{"_index":786,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isfavorite",{"_index":768,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["isloading",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":595,"title":{},"body":{"components/FavoritesComponent.html":{},"interfaces/IMenuEvent.html":{},"injectables/WeatherService.html":{}}}],["item.key",{"_index":1026,"title":{},"body":{"injectables/WeatherService.html":{}}}],["item.substring(1",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[0].touppercase",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemperature",{"_index":358,"title":{"interfaces/ITemperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["items",{"_index":711,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["itimezone",{"_index":762,"title":{"interfaces/ITimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["iweather",{"_index":659,"title":{"interfaces/IWeather.html":{}},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["join",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jquery",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":575,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["justify",{"_index":407,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["karma",{"_index":1178,"title":{},"body":{"index.html":{}}}],["key",{"_index":260,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["keyfiltermodule",{"_index":637,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":586,"title":{},"body":{"components/FavoritesComponent.html":{},"components/SearchComponent.html":{}}}],["languages",{"_index":1129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lastread",{"_index":299,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["lat",{"_index":908,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["latitude",{"_index":238,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["lat},${lng",{"_index":1041,"title":{},"body":{"injectables/WeatherService.html":{}}}],["left",{"_index":606,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["legend",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":16,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["light",{"_index":1126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":399,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":395,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":345,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["literal",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":1147,"title":{},"body":{"index.html":{}}}],["lng",{"_index":914,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["loadchildren",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadingchange",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["loadingstate",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["local",{"_index":574,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["localizedname",{"_index":17,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Country.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ICountry.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["localizedtype",{"_index":18,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{}}}],["localobservationdatetime",{"_index":346,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["location",{"_index":767,"title":{"classes/Location.html":{}},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["location(result",{"_index":1043,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationchange",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationkey",{"_index":1034,"title":{},"body":{"injectables/WeatherService.html":{}}}],["locationresolver",{"_index":454,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":1130,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locationstate",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["locationtype",{"_index":1116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longitude",{"_index":240,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.weathermodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":420,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["map(item",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":411,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["marker",{"_index":918,"title":{},"body":{"components/SearchComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":424,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maxage",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["maximum",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ITemperature.html":{},"classes/RequestCache.html":{},"classes/Temperature.html":{}}}],["measure",{"_index":1119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["media",{"_index":725,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menuitem",{"_index":781,"title":{},"body":{"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["message",{"_index":373,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["messageservice",{"_index":374,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["metadata",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["metric",{"_index":486,"title":{"classes/Metric.html":{}},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["metric(args?.imperial",{"_index":491,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.maximum",{"_index":794,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["metric(args?.metric",{"_index":493,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["metric(args?.minimum",{"_index":796,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["min",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":792,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["miscellaneous",{"_index":1110,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilelink",{"_index":347,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"interfaces/IConditions.html":{},"interfaces/IHeadline.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["mode.enum",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":1122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":49,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["model.ts:10",{"_index":473,"title":{},"body":{"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["model.ts:11",{"_index":481,"title":{},"body":{"classes/Day.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{}}}],["model.ts:12",{"_index":480,"title":{},"body":{"classes/Day.html":{},"classes/GeoPosition.html":{},"classes/TimeZone.html":{}}}],["model.ts:13",{"_index":34,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:14",{"_index":35,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/TimeZone.html":{}}}],["model.ts:15",{"_index":36,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Headline.html":{}}}],["model.ts:16",{"_index":38,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Day.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:17",{"_index":39,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:18",{"_index":27,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:19",{"_index":267,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:20",{"_index":265,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:21",{"_index":354,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:22",{"_index":355,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:23",{"_index":356,"title":{},"body":{"classes/Conditions.html":{},"classes/Headline.html":{},"classes/Weather.html":{}}}],["model.ts:24",{"_index":357,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:25",{"_index":352,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:26",{"_index":268,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:27",{"_index":266,"title":{},"body":{"classes/AutoComplete.html":{},"classes/Location.html":{}}}],["model.ts:28",{"_index":813,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:29",{"_index":814,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:30",{"_index":353,"title":{},"body":{"classes/Conditions.html":{},"classes/Location.html":{}}}],["model.ts:31",{"_index":815,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:32",{"_index":816,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:33",{"_index":817,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:34",{"_index":818,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:35",{"_index":819,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:36",{"_index":820,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:37",{"_index":812,"title":{},"body":{"classes/Location.html":{}}}],["model.ts:5",{"_index":281,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:6",{"_index":282,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:7",{"_index":283,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:8",{"_index":280,"title":{},"body":{"classes/BaseModel.html":{}}}],["model.ts:9",{"_index":474,"title":{},"body":{"classes/Country.html":{},"classes/Elevation.html":{},"classes/Metric.html":{},"classes/Temperature.html":{}}}],["models/administrativearea",{"_index":269,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/autocomplete",{"_index":889,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["models/base",{"_index":48,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["models/cache",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["models/conditions",{"_index":763,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/country",{"_index":764,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/day",{"_index":806,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/elevation",{"_index":689,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["models/forecast",{"_index":765,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"injectables/WeatherService.html":{}}}],["models/geoposition",{"_index":176,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/headline",{"_index":658,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["models/location",{"_index":1017,"title":{},"body":{"injectables/WeatherService.html":{}}}],["models/metric",{"_index":489,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["models/temperature",{"_index":359,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["models/timezone",{"_index":766,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["models/weather",{"_index":660,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["module",{"_index":103,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":105,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":446,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":1184,"title":{},"body":{"index.html":{}}}],["ms",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["multi",{"_index":466,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":1156,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":382,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":234,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/ILocation.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":247,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req",{"_index":844,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":553,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["next.handle(req.clone",{"_index":576,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["nextoffsetchange",{"_index":801,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{}}}],["ng",{"_index":1153,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["ngoninit",{"_index":370,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["night",{"_index":804,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["none",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":832,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["number",{"_index":37,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["object",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args)?.foreach(key",{"_index":288,"title":{},"body":{"classes/BaseModel.html":{}}}],["observable",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["observable(subscriber",{"_index":245,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["of(cachedresponse",{"_index":845,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["of(null",{"_index":833,"title":{},"body":{"guards/LocationResolver.html":{}}}],["of(this.getcontext(key",{"_index":1045,"title":{},"body":{"injectables/WeatherService.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":860,"title":{},"body":{"components/SearchComponent.html":{}}}],["onselect",{"_index":861,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":369,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onsubmit",{"_index":862,"title":{},"body":{"components/SearchComponent.html":{}}}],["opacity",{"_index":599,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["options",{"_index":929,"title":{},"body":{"components/SearchComponent.html":{}}}],["origin",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["original",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{},"miscellaneous/variables.html":{}}}],["original.split",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.substring(1).length",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original[0].tolowercase",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["originalevent",{"_index":780,"title":{},"body":{"interfaces/IMenuEvent.html":{},"interfaces/ISearchEvent.html":{}}}],["out",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":1137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":413,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":1187,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1082,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":417,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["page",{"_index":1189,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":392,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":568,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"injectables/WeatherService.html":{}}}],["path",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["pathmatch",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["permission",{"_index":538,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":846,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["pipe(map(result",{"_index":1031,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pipe(tap",{"_index":571,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["placeholder",{"_index":588,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["pointerevent",{"_index":782,"title":{},"body":{"interfaces/IMenuEvent.html":{}}}],["popper.js",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":604,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["predicate",{"_index":1023,"title":{},"body":{"injectables/WeatherService.html":{}}}],["prevented",{"_index":551,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["preview",{"_index":1148,"title":{},"body":{"index.html":{}}}],["previous",{"_index":591,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":398,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primeflex",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":381,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"interfaces/IMenuEvent.html":{},"components/SearchComponent.html":{}}}],["primeng/autocomplete",{"_index":624,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":626,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":628,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":630,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":632,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":634,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":636,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":638,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":640,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":642,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":644,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":646,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":648,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":650,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":622,"title":{},"body":{"modules/FeatureModule.html":{}}}],["pristine",{"_index":935,"title":{},"body":{"components/SearchComponent.html":{}}}],["private",{"_index":184,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":1170,"title":{},"body":{"index.html":{}}}],["production",{"_index":1172,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1142,"title":{},"body":{"index.html":{}}}],["promise",{"_index":831,"title":{},"body":{"guards/LocationResolver.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["protractor",{"_index":1181,"title":{},"body":{"index.html":{}}}],["provide",{"_index":464,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providers",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/IDay.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providers.countryflags.baseurl}/${this.country.id}/shiny/32.png",{"_index":278,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["providers.weather.autocomplete",{"_index":515,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.conditions",{"_index":517,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.forecasts",{"_index":519,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.geoposition",{"_index":521,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providers.weather.icons}/${this.icon}.svg",{"_index":482,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{}}}],["providers.weather.icons}/${this.weathericon}.svg",{"_index":362,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["providers.weather.locations",{"_index":523,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":12,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["put",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["put(req",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["q",{"_index":1030,"title":{},"body":{"injectables/WeatherService.html":{}}}],["query",{"_index":788,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":639,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":733,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["rank",{"_index":261,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reactiveformsmodule",{"_index":949,"title":{},"body":{"modules/SearchModule.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"classes/RequestCache.html":{},"injectables/WeatherService.html":{}}}],["red",{"_index":938,"title":{},"body":{"components/SearchComponent.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1188,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":879,"title":{},"body":{"components/SearchComponent.html":{}}}],["region",{"_index":760,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["reload",{"_index":1159,"title":{},"body":{"index.html":{}}}],["representative",{"_index":587,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":841,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.params.append('apikey",{"_index":569,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.url.includes(key",{"_index":578,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["req.url.includes(providers.weather.baseurl",{"_index":564,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["request",{"_index":527,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestcache",{"_index":320,"title":{"classes/RequestCache.html":{}},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["requestinterceptor",{"_index":438,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":824,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":828,"title":{},"body":{"guards/LocationResolver.html":{}}}],["response",{"_index":300,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["responseinterceptor",{"_index":439,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":53,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.map(item",{"_index":1032,"title":{},"body":{"injectables/WeatherService.html":{}}}],["result.tostring",{"_index":924,"title":{},"body":{"components/SearchComponent.html":{}}}],["results",{"_index":55,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":572,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["retry",{"_index":507,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["retry(1",{"_index":554,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["return",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":713,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["ripplemodule",{"_index":641,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":544,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":372,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":470,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":620,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":686,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":749,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":954,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(weatherroutes",{"_index":995,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":152,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/WeatherModule.html":{}}}],["routing.module.ts",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["run",{"_index":1146,"title":{},"body":{"index.html":{}}}],["running",{"_index":1173,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"interceptors/ExceptionInterceptor.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":509,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["scaffolding",{"_index":1162,"title":{},"body":{"index.html":{}}}],["screen",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":854,"title":{},"body":{"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":856,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":855,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":950,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":951,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["search/search.module",{"_index":461,"title":{},"body":{"modules/ContainerModule.html":{}}}],["searchcomponent",{"_index":93,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":434,"title":{"modules/SearchModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["searchoptions",{"_index":863,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchpattern",{"_index":864,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchroutes",{"_index":953,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":947,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["searchsubject",{"_index":865,"title":{},"body":{"components/SearchComponent.html":{}}}],["second",{"_index":589,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["selector",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":1154,"title":{},"body":{"index.html":{}}}],["server",{"_index":542,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services/application.service",{"_index":383,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SidenavComponent.html":{}}}],["services/cache.service",{"_index":462,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{}}}],["services/weather.service",{"_index":463,"title":{},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{}}}],["set(datasets.conditions",{"_index":1048,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set(datasets.forecasts",{"_index":1049,"title":{},"body":{"injectables/WeatherService.html":{}}}],["set(datasets.locations",{"_index":1050,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setcontext",{"_index":1004,"title":{},"body":{"injectables/WeatherService.html":{}}}],["setobservables",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setoptions",{"_index":866,"title":{},"body":{"components/SearchComponent.html":{}}}],["sets.enum",{"_index":1016,"title":{},"body":{"injectables/WeatherService.html":{}}}],["sets.enum.ts",{"_index":1115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":169,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:10",{"_index":171,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":172,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":173,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":174,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":95,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":560,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["shadow",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":1138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":426,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":962,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":961,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":971,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":968,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sidenavcomponent",{"_index":97,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":435,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["size",{"_index":722,"title":{},"body":{"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["slide",{"_index":585,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["smaller",{"_index":928,"title":{},"body":{"components/SearchComponent.html":{}}}],["solid",{"_index":937,"title":{},"body":{"components/SearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":805,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["space",{"_index":409,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{}}}],["spec\\.ts",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exception",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast.module.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formatters.ts",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location",{"_index":1117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../measure.enum.ts",{"_index":1120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../panel",{"_index":1121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":468,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":363,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":378,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":379,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":375,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":380,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:31",{"_index":377,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":441,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:44",{"_index":445,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":621,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":747,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":744,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":955,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":959,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":958,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":960,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":965,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":967,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":976,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":617,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":579,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":583,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":582,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":614,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":684,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":669,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":673,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":672,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":681,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":952,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":853,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:17",{"_index":883,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:18",{"_index":872,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:19",{"_index":878,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:20",{"_index":874,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:21",{"_index":882,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:22",{"_index":869,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:24",{"_index":870,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:34",{"_index":875,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:36",{"_index":876,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:39",{"_index":877,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:40",{"_index":873,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:45",{"_index":884,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":948,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather",{"_index":993,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["src/app/weather/weather.component.ts",{"_index":979,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":983,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":982,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":990,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":1124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":1127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/location",{"_index":1131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/measure.enum.ts",{"_index":1133,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":1136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":168,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/formatters.ts",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/menu",{"_index":778,"title":{},"body":{"interfaces/IMenuEvent.html":{},"coverage.html":{}}}],["src/common/helpers/search",{"_index":787,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/interceptors/exception",{"_index":495,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/interceptors/request",{"_index":836,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":850,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/administrativearea",{"_index":6,"title":{},"body":{"classes/AdministrativeArea.html":{},"interfaces/IAdministrativeArea.html":{},"coverage.html":{}}}],["src/common/models/autocomplete",{"_index":257,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"coverage.html":{}}}],["src/common/models/base",{"_index":279,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/common/models/cache",{"_index":298,"title":{},"body":{"interfaces/CacheResult.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":340,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"coverage.html":{}}}],["src/common/models/country",{"_index":471,"title":{},"body":{"classes/Country.html":{},"interfaces/ICountry.html":{},"coverage.html":{}}}],["src/common/models/day",{"_index":476,"title":{},"body":{"classes/Day.html":{},"interfaces/IDay.html":{},"coverage.html":{}}}],["src/common/models/elevation",{"_index":484,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":653,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{},"coverage.html":{}}}],["src/common/models/geoposition",{"_index":688,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{},"coverage.html":{}}}],["src/common/models/headline",{"_index":750,"title":{},"body":{"classes/Headline.html":{},"interfaces/IHeadline.html":{},"coverage.html":{}}}],["src/common/models/location",{"_index":757,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{},"coverage.html":{}}}],["src/common/models/metric",{"_index":783,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"coverage.html":{}}}],["src/common/models/temperature",{"_index":791,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{},"coverage.html":{}}}],["src/common/models/timezone",{"_index":797,"title":{},"body":{"interfaces/ITimeZone.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/weather",{"_index":802,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":823,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:10",{"_index":830,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:8",{"_index":827,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":180,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:12",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:13",{"_index":213,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":214,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:19",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:20",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:21",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:22",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:30",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:35",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:55",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/cache.service.ts",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["src/common/services/cache.service.ts:12",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:13",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:16",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:25",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/common/services/cache.service.ts:6",{"_index":834,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/cache.service.ts:7",{"_index":835,"title":{},"body":{"classes/RequestCache.html":{}}}],["src/common/services/weather.service.ts",{"_index":996,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:16",{"_index":1006,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:19",{"_index":1014,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:24",{"_index":1010,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:28",{"_index":1007,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:32",{"_index":1009,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:36",{"_index":1011,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:40",{"_index":1012,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:44",{"_index":1013,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:51",{"_index":1008,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1141,"title":{"index.html":{}},"body":{}}],["state.enum",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":1123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":442,"title":{},"body":{"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{}}}],["stored",{"_index":514,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stored[object.keys(stored).find(key",{"_index":577,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{},"components/SearchComponent.html":{}}}],["subscriber",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["subscriber.next(updated",{"_index":255,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success",{"_index":236,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":239,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":241,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":867,"title":{},"body":{"components/SearchComponent.html":{}}}],["summary",{"_index":562,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["super(args",{"_index":52,"title":{},"body":{"classes/AdministrativeArea.html":{},"classes/AutoComplete.html":{},"classes/Conditions.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMetric.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{}}}],["supplied",{"_index":530,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1190,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1191,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":887,"title":{},"body":{"components/SearchComponent.html":{}}}],["switchmap(text",{"_index":902,"title":{},"body":{"components/SearchComponent.html":{}}}],["syntax",{"_index":529,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["table",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":643,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tap",{"_index":508,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"interceptors/RequestInterceptor.html":{}}}],["tap((event",{"_index":847,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["teal",{"_index":940,"title":{},"body":{"components/SearchComponent.html":{}}}],["tel",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":348,"title":{"classes/Temperature.html":{}},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/ITemperature.html":{},"interfaces/IWeather.html":{},"classes/Temperature.html":{},"classes/Weather.html":{},"coverage.html":{}}}],["temperature(args?.temperature",{"_index":361,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":1175,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1174,"title":{},"body":{"index.html":{}}}],["text",{"_index":724,"title":{},"body":{"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IHeadline.html":{}}}],["theme.enum",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["theme.enum.ts",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["third",{"_index":590,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.administrativearea",{"_index":270,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.administrativearea.localizedname",{"_index":277,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.application.loadingchange$.next(false",{"_index":849,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.loadingchange$.next(true",{"_index":840,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.application.loadingstate",{"_index":385,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.sidenavstate",{"_index":386,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.apptheme",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.appthemechange$.subscribe",{"_index":253,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.appthemestate",{"_index":252,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.apptheme",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavmode",{"_index":229,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.args?.sidenavstate",{"_index":231,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.cache.get(req",{"_index":843,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cache.put(req",{"_index":848,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.cached.foreach(entry",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.get(cachedorigin",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.cached.set(origin",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.constructor.name",{"_index":294,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.context",{"_index":1047,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).slice().find((item",{"_index":1027,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).some(predicate",{"_index":1025,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.context.get(dataset).unshift(value",{"_index":1021,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.coordinatesform",{"_index":907,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.country",{"_index":272,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.country.localizedname",{"_index":276,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.createcontext",{"_index":1018,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.created",{"_index":291,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.createform",{"_index":894,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentoption",{"_index":896,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentroute",{"_index":389,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.datasets",{"_index":769,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.day",{"_index":808,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.elevation",{"_index":690,"title":{},"body":{"classes/GeoPosition.html":{},"interfaces/IGeoPosition.html":{}}}],["this.failcount",{"_index":565,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["this.forecasts",{"_index":662,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.geoposition",{"_index":771,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.getcontext(key",{"_index":1044,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getcontext(null",{"_index":1020,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getuserlocation",{"_index":233,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.headline",{"_index":667,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["this.http",{"_index":1028,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.id",{"_index":292,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.imperial",{"_index":490,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.isloading",{"_index":384,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.loadingchange$.subscribe",{"_index":246,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.loadingstate",{"_index":244,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.localizedname",{"_index":274,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["this.locationchange$.next",{"_index":237,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationchange$.next(default_location",{"_index":243,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationchange$.subscribe",{"_index":250,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.locationstate",{"_index":249,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.maxage",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["this.maximum",{"_index":793,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.message.add",{"_index":556,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{}}}],["this.metric",{"_index":492,"title":{},"body":{"classes/Elevation.html":{},"interfaces/IElevation.html":{}}}],["this.minimum",{"_index":795,"title":{},"body":{"interfaces/ITemperature.html":{},"classes/Temperature.html":{}}}],["this.night",{"_index":810,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.primengconfig.ripple",{"_index":651,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.region",{"_index":773,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.router.events.subscribe",{"_index":387,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchoptions",{"_index":917,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchoptions[1",{"_index":897,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject",{"_index":898,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject$.next(event.query",{"_index":905,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchsubject$.pipe",{"_index":900,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setcontext(datasets.conditions",{"_index":1036,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setcontext(datasets.locations",{"_index":1042,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.setobservables",{"_index":232,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setoptions",{"_index":895,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.sidenavchanged.emit",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.sidenavmode",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":230,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sources",{"_index":807,"title":{},"body":{"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.suggestions",{"_index":899,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.temperature",{"_index":360,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{},"interfaces/IWeather.html":{},"classes/Weather.html":{}}}],["this.timezone",{"_index":775,"title":{},"body":{"interfaces/ILocation.html":{},"classes/Location.html":{}}}],["this.type",{"_index":275,"title":{},"body":{"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/IAutoComplete.html":{}}}],["this.updatevalue(this.apptheme",{"_index":254,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.updatevalue(this.isloading",{"_index":248,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.updatevalue(this.userlocation",{"_index":251,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.weather.autocomplete(text.tolowercase",{"_index":903,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.weather.getconditions(value",{"_index":906,"title":{},"body":{"components/SearchComponent.html":{}}}],["this[tocamelcase(key",{"_index":289,"title":{},"body":{"classes/BaseModel.html":{}}}],["timezone",{"_index":761,"title":{"classes/TimeZone.html":{}},"body":{"interfaces/ILocation.html":{},"interfaces/ITimeZone.html":{},"classes/Location.html":{},"classes/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/SearchComponent.html":{}}}],["toastmodule",{"_index":645,"title":{},"body":{"modules/FeatureModule.html":{}}}],["tocamelcase",{"_index":284,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglebuttonmodule",{"_index":647,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tooltipmodule",{"_index":649,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":397,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostring",{"_index":262,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{}}}],["totitlecase",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":735,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":732,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"interceptors/ExceptionInterceptor.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":286,"title":{},"body":{"classes/BaseModel.html":{},"dependencies.html":{}}}],["tslib",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AdministrativeArea.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"components/HeaderComponent.html":{},"classes/Headline.html":{},"interfaces/IAdministrativeArea.html":{},"interfaces/IAutoComplete.html":{},"interfaces/IConditions.html":{},"interfaces/ICountry.html":{},"interfaces/IDay.html":{},"interfaces/IElevation.html":{},"interfaces/IForecast.html":{},"interfaces/IGeoPosition.html":{},"interfaces/IHeadline.html":{},"interfaces/ILocation.html":{},"interfaces/IMenuEvent.html":{},"interfaces/IMetric.html":{},"interfaces/ISearchEvent.html":{},"interfaces/ITemperature.html":{},"interfaces/ITimeZone.html":{},"interfaces/IWeather.html":{},"classes/Location.html":{},"guards/LocationResolver.html":{},"classes/Metric.html":{},"classes/RequestCache.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unauthorized",{"_index":533,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"classes/RequestCache.html":{}}}],["unexpected",{"_index":549,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":784,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{},"index.html":{}}}],["unittype",{"_index":785,"title":{},"body":{"interfaces/IMetric.html":{},"classes/Metric.html":{}}}],["unknown",{"_index":1024,"title":{},"body":{"injectables/WeatherService.html":{}}}],["updated",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["updatevalue",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["updatevalue(original",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["uri",{"_index":546,"title":{},"body":{"interceptors/ExceptionInterceptor.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":301,"title":{},"body":{"interfaces/CacheResult.html":{},"injectables/CacheService.html":{},"interceptors/ExceptionInterceptor.html":{},"classes/RequestCache.html":{}}}],["use",{"_index":1164,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":465,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":170,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["usevalue",{"_index":467,"title":{},"body":{"modules/ContainerModule.html":{}}}],["valid:not(.ng",{"_index":939,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators",{"_index":892,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(180.0000000",{"_index":915,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.max(90.0000000",{"_index":911,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.min",{"_index":912,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.required",{"_index":910,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"injectables/CacheService.html":{},"classes/Conditions.html":{},"components/ContainerComponent.html":{},"classes/Day.html":{},"interceptors/ExceptionInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/IMetric.html":{},"classes/Metric.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1200,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":263,"title":{},"body":{"classes/AutoComplete.html":{},"interfaces/IAutoComplete.html":{},"index.html":{}}}],["via",{"_index":1177,"title":{},"body":{"index.html":{}}}],["void",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/CacheService.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"classes/RequestCache.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":100,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"classes/Forecast.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IForecast.html":{},"interfaces/IWeather.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather(item",{"_index":666,"title":{},"body":{"classes/Forecast.html":{},"interfaces/IForecast.html":{}}}],["weather.component.html",{"_index":981,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":980,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather",{"_index":991,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.component",{"_index":992,"title":{},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{}}}],["weathercomponent",{"_index":99,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":349,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["weathermodule",{"_index":984,"title":{"modules/WeatherModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherroutes",{"_index":994,"title":{},"body":{"modules/WeatherRoutingModule.html":{}}}],["weatherroutingmodule",{"_index":989,"title":{"modules/WeatherRoutingModule.html":{}},"body":{"modules/WeatherModule.html":{},"modules/WeatherRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":440,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":350,"title":{},"body":{"classes/Conditions.html":{},"interfaces/IConditions.html":{}}}],["white",{"_index":594,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":418,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":674,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":416,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/WeatherService.html":{}}}],["y",{"_index":414,"title":{},"body":{"components/ContainerComponent.html":{}}}],["yes",{"_index":32,"title":{},"body":{"classes/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"classes/AutoComplete.html":{},"classes/BaseModel.html":{},"classes/Conditions.html":{},"modules/ContainerModule.html":{},"classes/Country.html":{},"classes/Day.html":{},"classes/Elevation.html":{},"classes/Forecast.html":{},"classes/GeoPosition.html":{},"classes/Headline.html":{},"classes/Location.html":{},"classes/Metric.html":{},"classes/Temperature.html":{},"classes/TimeZone.html":{},"classes/Weather.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":881,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":880,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdministrativeArea.html":{"url":"classes/AdministrativeArea.html","title":"class - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                englishType\n                            \n                            \n                                    Public\n                                level\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                localizedType\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAdministrativeArea)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAdministrativeArea\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            countryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/administrativeArea-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule        } from '@angular/common/http'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ColorTheme              } from '@constants/color-theme.enum'\nimport { PanelMode               } from '@constants/panel-mode.enum'\nimport { PanelState              } from '@constants/panel-state.enum'\nimport { ContainerModule         } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule          ,\n    BrowserAnimationsModule,\n    HttpClientModule       ,\n    AppRoutingModule       ,\n    ContainerModule.forRoot({\n      appTheme    : ColorTheme.Light,\n      sidenavMode : PanelMode .Push ,\n      sidenavState: PanelState.Hide ,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'weather', loadChildren: () => \"import('./weather/weather.module').then(m => m.WeatherModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'weather' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appTheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorTheme   } from '@constants/color-theme.enum'\nimport { PanelMode    } from '@constants/panel-mode.enum'\nimport { PanelState   } from '@constants/panel-state.enum'\nimport { IGeoPosition } from '@models/geoPosition-model'\n\nexport class AppSettings {\n  public appTheme     ?: ColorTheme   ;\n  public sidenavMode  ?: PanelMode    ;\n  public sidenavState ?: PanelState   ;\n  public userLocation ?: IGeoPosition ;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appTheme\n                            \n                            \n                                    Public\n                                    Readonly\n                                appThemeChange$\n                            \n                            \n                                    Public\n                                appThemeState$\n                            \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                    Readonly\n                                loadingChange$\n                            \n                            \n                                    Public\n                                loadingState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                locationChange$\n                            \n                            \n                                    Public\n                                locationState$\n                            \n                            \n                                    Private\n                                setObservables\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                updateValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(original: T, updated: T, subscriber: Subscriber)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updated\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscriber\n                                    \n                                            Subscriber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            appThemeChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appThemeState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            loadingChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            locationChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locationState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable      , Subject, Subscriber } from 'rxjs'\nimport { Injectable                            } from '@angular/core'\nimport { ColorTheme                            } from '@constants/color-theme.enum'\nimport { PanelMode                             } from '@constants/panel-mode.enum'\nimport { PanelState                            } from '@constants/panel-state.enum'\nimport { DEFAULT_LOCATION                      } from '@env/environment'\nimport { AppSettings                           } from '@helpers/app-settings'\nimport { IGeoPosition                          } from '@models/geoPosition-model'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly appThemeChange$: Subject = new Subject();\n  public readonly loadingChange$ : Subject = new Subject();\n  public readonly locationChange$: Subject = new Subject();\n  public appThemeState$: Observable;\n  public loadingState$ : Observable;\n  public locationState$: Observable;\n  public appTheme    : ColorTheme    ;\n  public isLoading   : boolean = true;\n  public sidenavMode : PanelMode     ;\n  public sidenavState: PanelState    ;\n  public userLocation: IGeoPosition  ;\n  constructor(private args?: AppSettings) {\n    this.appTheme     = this.args?.appTheme    ;\n    this.sidenavMode  = this.args?.sidenavMode ;\n    this.sidenavState = this.args?.sidenavState;\n    this.setObservables ();\n    this.getUserLocation();\n  }\n  private getUserLocation = () => navigator.geolocation\n    .getCurrentPosition(\n      (success) => this.locationChange$.next({ Latitude: success.coords.latitude, Longitude: success.coords.longitude }),\n      (failure) => this.locationChange$.next(DEFAULT_LOCATION));\n\n  private setObservables = () => {\n    this.loadingState$ = new Observable(subscriber => {\n      this.loadingChange$.subscribe({\n        next: value => this.updateValue(this.isLoading, value, subscriber)\n      })\n    });\n\n    this.locationState$ = new Observable(subscriber => {\n      this.locationChange$.subscribe({\n        next: value => this.updateValue(this.userLocation, value, subscriber)\n      })\n    });\n\n    this.appThemeState$ = new Observable(subscriber => {\n      this.appThemeChange$.subscribe({\n        next: value => this.updateValue(this.appTheme, value, subscriber)\n      })\n    });\n  }\n\n  private updateValue(original: T, updated: T, subscriber: Subscriber) {\n    if (original != updated) {\n      original = updated;\n      subscriber.next(updated);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoComplete.html":{"url":"classes/AutoComplete.html","title":"class - AutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                flagIcon\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                version\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAutoComplete)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAutoComplete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flagIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/autocomplete-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel                               } from '@models/base-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: any)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base-model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base-model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { toCamelCase } from '@helpers/formatters';\nimport { Guid } from 'guid-ts'\n\nexport abstract class BaseModel {\n  public created: Date;\n  public id: Guid | string;\n  public name: string;\n  public type: string;\n  constructor(args?: any) {\n    Object.keys(args)?.forEach(key => this[toCamelCase(key)] = this[toCamelCase(key)] ?? args[key]);\n    this.created = new Date();\n    this.id = this.id ?? Guid.newGuid();\n    this.type = this.type ?? this.constructor.name;\n    console.log(this);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheResult.html":{"url":"interfaces/CacheResult.html","title":"interface - CacheResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/cache-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        lastRead\n                                \n                                \n                                            Optional\n                                        response\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\n\nexport interface CacheResult {\n  lastRead?: number           ;\n  response?: HttpResponse;\n  url     ?: string           ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cached\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxAge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cached\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 8.64e+7\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Conditions.html":{"url":"classes/Conditions.html","title":"class - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                epochTime\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                isDayTime\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                localObservationDateTime\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                weatherIcon\n                            \n                            \n                                    Public\n                                weatherText\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IConditions)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IConditions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDayTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localObservationDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/conditions-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading$\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router, message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSidenavToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MessageService             } from 'primeng/api'\nimport { Observable                 } from 'rxjs'\nimport { Component         , OnInit } from '@angular/core'\nimport { NavigationEnd     , Router } from '@angular/router'\nimport { PanelState                 } from '@constants/panel-state.enum'\nimport { ApplicationService         } from '@services/application.service'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string             ;\n  public isLoading$  : Observable;\n  public sidenavState: PanelState         ;\n  constructor(private application: ApplicationService, private router: Router, private message: MessageService) {\n    this.isLoading$   = this.application.loadingState$;\n    this.sidenavState = this.application.sidenavState ;\n    this.router.events.subscribe({\n      next: event => this.currentRoute = !(event instanceof NavigationEnd)\n        ? this.currentRoute\n        : `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n  }\n  public onSidenavToggle = () =>\n    this.sidenavState =\n    this.sidenavState == PanelState.Hide\n      ? PanelState.Show\n      : PanelState.Hide;\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  overflow-x: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ExceptionInterceptor\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MessageService                              } from 'primeng/api'\nimport { CommonModule                                } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule    } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule            } from '@angular/core'\nimport { ExceptionInterceptor                        } from '@common/interceptors/exception-interceptor'\nimport { RequestInterceptor                          } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                         } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                            } from '@common/resolvers/location.resolver'\nimport { ContainerRoutingModule                      } from '@container/container-routing.module'\nimport { ContainerComponent                          } from '@container/container.component'\nimport { FeatureModule                               } from '@container/feature.module'\nimport { HeaderModule                                } from '@container/header/header.module'\nimport { SidenavModule                               } from '@container/sidenav/sidenav.module'\nimport { AppSettings                                 } from '@helpers/app-settings'\nimport { SearchModule                                } from '@search/search.module'\nimport { ApplicationService                          } from '@services/application.service'\nimport { RequestCache          , CacheService } from '@services/cache.service'\nimport { WeatherService                              } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule, SearchModule, FeatureModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: RequestCache, useClass: CacheService },\n    { provide: HTTP_INTERCEPTORS, useClass: ExceptionInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor  , multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor , multi: true },\n    MessageService,\n    ApplicationService,\n    LocationResolver,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Country.html":{"url":"classes/Country.html","title":"class - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ICountry)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ICountry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/country-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Day.html":{"url":"classes/Day.html","title":"class - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                hasPrecipitation\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                iconPhrase\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IDay)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IDay\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasPrecipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPhrase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/day-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Elevation.html":{"url":"classes/Elevation.html","title":"class - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imperial\n                            \n                            \n                                    Public\n                                metric\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IElevation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IElevation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imperial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            metric\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/elevation-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ExceptionInterceptor.html":{"url":"interceptors/ExceptionInterceptor.html","title":"interceptor - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                failCount\n                            \n                            \n                                    Private\n                                failCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/exception-interceptor.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/exception-interceptor.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            failCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/common/interceptors/exception-interceptor.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            failCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : ExceptionInterceptor.failCount\n                        \n                    \n                        \n                            \n                                    Defined in src/common/interceptors/exception-interceptor.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { MessageService } from 'primeng/api'\nimport { Observable } from 'rxjs'\nimport { catchError, retry, tap } from 'rxjs/operators'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { decodeBase64 } from '@helpers/formatters'\n\nexport const stored = {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\nexport const errors = {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n@Injectable()\nexport class ExceptionInterceptor implements HttpInterceptor {\n  static failCount: number = 0;\n  private failCount: number = ExceptionInterceptor.failCount;\n  constructor(private message: MessageService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      retry(1),\n      catchError((error: HttpErrorResponse) => {\n        this.message.add({ closable: true, detail: errors[error.status], severity: 'error', summary: `${error.status} Error` });\n        if (req.url.includes(providers.weather.baseUrl) && error.status == 401) {\n          this.failCount++;\n          if (this.failCount == 1) {\n            return next\n              .handle(req.clone({\n                params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n              }))\n              .pipe(tap(() => ExceptionInterceptor.failCount = 0));\n          }\n        }\n        this.message.add({ closable: true, detail: 'Retrieving static data from local JSON', severity: 'info', summary: 'Static Response' });\n        return next.handle(req.clone({ url: stored[Object.keys(stored).find(key => req.url.includes(key))] }));\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\ncluster_FavoritesModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig      } from 'primeng/api'\nimport { AutoCompleteModule } from 'primeng/autocomplete'\nimport { ButtonModule       } from 'primeng/button'\nimport { CarouselModule     } from 'primeng/carousel'\nimport { CheckboxModule     } from 'primeng/checkbox'\nimport { DropdownModule     } from 'primeng/dropdown'\nimport { FieldsetModule     } from 'primeng/fieldset'\nimport { InputSwitchModule  } from 'primeng/inputswitch'\nimport { KeyFilterModule    } from 'primeng/keyfilter'\nimport { RadioButtonModule  } from 'primeng/radiobutton'\nimport { RippleModule       } from 'primeng/ripple'\nimport { TabMenuModule      } from 'primeng/tabmenu'\nimport { ToastModule        } from 'primeng/toast'\nimport { ToggleButtonModule } from 'primeng/togglebutton'\nimport { TooltipModule      } from 'primeng/tooltip'\nimport { CommonModule       } from '@angular/common'\nimport { NgModule           } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule      ,\n    CarouselModule    ,\n    CheckboxModule    ,\n    DropdownModule    ,\n    FieldsetModule    ,\n    InputSwitchModule ,\n    KeyFilterModule   ,\n    RadioButtonModule ,\n    RippleModule      ,\n    TabMenuModule     ,\n    ToastModule       ,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Forecast.html":{"url":"classes/Forecast.html","title":"class - Forecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Forecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forecasts\n                            \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IForecast)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IForecast\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecasts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Weather[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Headline\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/forecast-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_declarations\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_ForecastModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nForecastModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nForecastModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nForecastModule -->\n\nFeatureModule->ForecastModule\n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nForecastModule -->\n\nSearchModule->ForecastModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            ForecastRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeoPosition.html":{"url":"classes/GeoPosition.html","title":"class - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elevation\n                            \n                            \n                                    Public\n                                latitude\n                            \n                            \n                                    Public\n                                longitude\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IGeoPosition)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IGeoPosition\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elevation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Elevation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/geoPosition-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavChanged: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav = () => this.sidenavChanged.emit();\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Headline.html":{"url":"classes/Headline.html","title":"class - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                effectiveDate\n                            \n                            \n                                    Public\n                                effectiveEpochDate\n                            \n                            \n                                    Public\n                                endDate\n                            \n                            \n                                    Public\n                                endEpochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                severity\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IHeadline)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IHeadline\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            effectiveEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endEpochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            severity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/headline-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAdministrativeArea.html":{"url":"interfaces/IAdministrativeArea.html","title":"interface - IAdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/administrativeArea-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        CountryId\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        EnglishType\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        Level\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        LocalizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CountryId\n                                    \n                                \n                                \n                                    \n                                        CountryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishType\n                                    \n                                \n                                \n                                    \n                                        EnglishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Level\n                                    \n                                \n                                \n                                    \n                                        Level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedType\n                                    \n                                \n                                \n                                    \n                                        LocalizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IAdministrativeArea {\n  CountryId?:     string;\n  EnglishName?:   string;\n  EnglishType?:   string;\n  ID?:            string;\n  Level?:         number;\n  LocalizedName?: string;\n  LocalizedType?: string;\n}\nexport class AdministrativeArea extends BaseModel {\n  public countryId:     string;\n  public englishName:   string;\n  public englishType:   string;\n  public level:         number;\n  public localizedName: string;\n  public localizedType: string;\n  constructor(args?: IAdministrativeArea) {\n    super(args);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoComplete.html":{"url":"interfaces/IAutoComplete.html","title":"interface - IAutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/autocomplete-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        AdministrativeArea\n                                \n                                \n                                        Country\n                                \n                                \n                                        Key\n                                \n                                \n                                        LocalizedName\n                                \n                                \n                                        Rank\n                                \n                                \n                                        Type\n                                \n                                \n                                        Version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Version\n                                    \n                                \n                                \n                                    \n                                        Version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers                               } from '@env/environment'\nimport { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel                               } from '@models/base-model'\n\nexport interface IAutoComplete {\n  AdministrativeArea: IAdministrativeArea;\n  Country           : IAdministrativeArea;\n  Key               : string             ;\n  LocalizedName     : string             ;\n  Rank              : number             ;\n  Type              : string             ;\n  Version           : number             ;\n}\nexport class AutoComplete extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public country           : AdministrativeArea;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public version           : number            ;\n  constructor(args?: IAutoComplete) {\n    super(args);\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea);\n    this.country            = new AdministrativeArea(args?.Country           );\n  }\n  public toString = (): string => `${this.localizedName} (${this.type}), ${this.country.localizedName} (${this.administrativeArea.localizedName})`;\n  public flagIcon = (): string => `${providers.countryFlags.baseUrl}/${this.country.id}/shiny/32.png`;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConditions.html":{"url":"interfaces/IConditions.html","title":"interface - IConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EpochTime\n                                \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        IsDayTime\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        LocalObservationDateTime\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                                \n                                            Optional\n                                        WeatherIcon\n                                \n                                \n                                            Optional\n                                        WeatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EpochTime\n                                    \n                                \n                                \n                                    \n                                        EpochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDayTime\n                                    \n                                \n                                \n                                    \n                                        IsDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        LocalObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherIcon\n                                    \n                                \n                                \n                                    \n                                        WeatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeatherText\n                                    \n                                \n                                \n                                    \n                                        WeatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IConditions {\n  EpochTime               ?: number      ;\n  HasPrecipitation        ?: boolean     ;\n  IsDayTime               ?: boolean     ;\n  Link                    ?: string      ;\n  LocalObservationDateTime?: Date        ;\n  MobileLink              ?: string      ;\n  Temperature             ?: ITemperature;\n  WeatherIcon             ?: number      ;\n  WeatherText             ?: string      ;\n}\nexport class Conditions extends BaseModel {\n  public epochTime               : number     ;\n  public hasPrecipitation        : boolean    ;\n  public isDayTime               : boolean    ;\n  public link                    : string     ;\n  public localObservationDateTime: Date       ;\n  public mobileLink              : string     ;\n  public temperature             : Temperature;\n  public weatherIcon             : number     ;\n  public weatherText             : string     ;\n  constructor(args?: IConditions) {\n    super(args);\n    this.temperature = new Temperature(args?.Temperature);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.weatherIcon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountry.html":{"url":"interfaces/ICountry.html","title":"interface - ICountry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/country-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        ID\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ICountry {\n  EnglishName  ?: string;\n  ID           ?: string;\n  LocalizedName?: string;\n}\nexport class Country extends BaseModel {\n  public englishName  : string;\n  public localizedName: string;\n  constructor(args?: ICountry) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDay.html":{"url":"interfaces/IDay.html","title":"interface - IDay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/day-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        HasPrecipitation\n                                \n                                \n                                            Optional\n                                        Icon\n                                \n                                \n                                            Optional\n                                        IconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        HasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Icon\n                                    \n                                \n                                \n                                    \n                                        Icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconPhrase\n                                    \n                                \n                                \n                                    \n                                        IconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { providers } from '@env/environment';\nimport { BaseModel } from '@models/base-model'\n\nexport interface IDay {\n  HasPrecipitation?: boolean;\n  Icon            ?: number ;\n  IconPhrase      ?: string ;\n}\nexport class Day extends BaseModel {\n  public hasPrecipitation: boolean;\n  public icon            : number ;\n  public iconPhrase      : string ;\n  constructor(args?: IDay) {\n    super(args);\n  }\n  public getIcon = () => `${providers.weather.icons}/${this.icon}.svg`;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElevation.html":{"url":"interfaces/IElevation.html","title":"interface - IElevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IElevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/elevation-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Imperial\n                                \n                                \n                                            Optional\n                                        Metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Imperial\n                                    \n                                \n                                \n                                    \n                                        Imperial:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Metric\n                                    \n                                \n                                \n                                    \n                                        Metric:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface IElevation {\n  Imperial?: IMetric;\n  Metric  ?: IMetric;\n}\nexport class Elevation extends BaseModel {\n  public imperial: Metric;\n  public metric  : Metric;\n  constructor(args?: IElevation) {\n    super(args)\n    this.imperial = new Metric(args?.Imperial);\n    this.metric   = new Metric(args?.Metric  );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForecast.html":{"url":"interfaces/IForecast.html","title":"interface - IForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DailyForecasts\n                                \n                                \n                                            Optional\n                                        Headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DailyForecasts\n                                    \n                                \n                                \n                                    \n                                        DailyForecasts:         IWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IWeather[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Headline\n                                    \n                                \n                                \n                                    \n                                        Headline:         IHeadline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHeadline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Headline, IHeadline } from '@models/headline-model'\nimport { IWeather, Weather } from '@models/weather-model'\n\nexport interface IForecast {\n  DailyForecasts?: IWeather [];\n  Headline      ?: IHeadline  ;\n}\nexport class Forecast extends BaseModel {\n  public forecasts: Weather [];\n  public headline : Headline  ;\n  constructor(args?: IForecast) {\n    super(args);\n    this.forecasts = !args?.DailyForecasts\n      ? new Array()\n      : args?.DailyForecasts?.map(item => new Weather(item));\n    this.headline = new Headline(args?.Headline);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGeoPosition.html":{"url":"interfaces/IGeoPosition.html","title":"interface - IGeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/geoPosition-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Elevation\n                                \n                                \n                                            Optional\n                                        Latitude\n                                \n                                \n                                            Optional\n                                        Longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Elevation\n                                    \n                                \n                                \n                                    \n                                        Elevation:         IElevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IElevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Latitude\n                                    \n                                \n                                \n                                    \n                                        Latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Longitude\n                                    \n                                \n                                \n                                    \n                                        Longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Elevation, IElevation } from '@models/elevation-model'\n\nexport interface IGeoPosition {\n  Elevation?: IElevation;\n  Latitude ?: number    ;\n  Longitude?: number    ;\n}\nexport class GeoPosition extends BaseModel {\n  public elevation: Elevation;\n  public latitude : number   ;\n  public longitude: number   ;\n  constructor(args?: IGeoPosition) {\n    super(args);\n    this.elevation = new Elevation(args?.Elevation);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHeadline.html":{"url":"interfaces/IHeadline.html","title":"interface - IHeadline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHeadline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/headline-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Category\n                                \n                                \n                                            Optional\n                                        EffectiveDate\n                                \n                                \n                                            Optional\n                                        EffectiveEpochDate\n                                \n                                \n                                            Optional\n                                        EndDate\n                                \n                                \n                                            Optional\n                                        EndEpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Severity\n                                \n                                \n                                            Optional\n                                        Text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                    \n                                \n                                \n                                    \n                                        Category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EffectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        EffectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndDate\n                                    \n                                \n                                \n                                    \n                                        EndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EndEpochDate\n                                    \n                                \n                                \n                                    \n                                        EndEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Severity\n                                    \n                                \n                                \n                                    \n                                        Severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Text\n                                    \n                                \n                                \n                                    \n                                        Text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IHeadline {\n  Category          ?: string;\n  EffectiveDate     ?: Date  ;\n  EffectiveEpochDate?: number;\n  EndDate           ?: Date  ;\n  EndEpochDate      ?: number;\n  Link              ?: string;\n  MobileLink        ?: string;\n  Severity          ?: number;\n  Text              ?: string;\n}\nexport class Headline extends BaseModel {\n  public category          : string;\n  public effectiveDate     : Date  ;\n  public effectiveEpochDate: number;\n  public endDate           : Date  ;\n  public endEpochDate      : number;\n  public link              : string;\n  public mobileLink        : string;\n  public severity          : number;\n  public text              : string;\n  constructor(args?: IHeadline) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocation.html":{"url":"interfaces/ILocation.html","title":"interface - ILocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        AdministrativeArea\n                                \n                                \n                                            Optional\n                                        Country\n                                \n                                \n                                            Optional\n                                        DataSets\n                                \n                                \n                                            Optional\n                                        EnglishName\n                                \n                                \n                                            Optional\n                                        GeoPosition\n                                \n                                \n                                            Optional\n                                        IsAlias\n                                \n                                \n                                            Optional\n                                        Key\n                                \n                                \n                                            Optional\n                                        LocalizedName\n                                \n                                \n                                            Optional\n                                        Rank\n                                \n                                \n                                            Optional\n                                        Region\n                                \n                                \n                                            Optional\n                                        TimeZone\n                                \n                                \n                                            Optional\n                                        Type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AdministrativeArea\n                                    \n                                \n                                \n                                    \n                                        AdministrativeArea:         IAdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Country\n                                    \n                                \n                                \n                                    \n                                        Country:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DataSets\n                                    \n                                \n                                \n                                    \n                                        DataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EnglishName\n                                    \n                                \n                                \n                                    \n                                        EnglishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GeoPosition\n                                    \n                                \n                                \n                                    \n                                        GeoPosition:         IGeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsAlias\n                                    \n                                \n                                \n                                    \n                                        IsAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Key\n                                    \n                                \n                                \n                                    \n                                        Key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LocalizedName\n                                    \n                                \n                                \n                                    \n                                        LocalizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Rank\n                                    \n                                \n                                \n                                    \n                                        Rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                    \n                                \n                                \n                                    \n                                        Region:         ICountry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TimeZone\n                                    \n                                \n                                \n                                    \n                                        TimeZone:         ITimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                    \n                                \n                                \n                                    \n                                        Type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuEvent.html":{"url":"interfaces/IMenuEvent.html","title":"interface - IMenuEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/menu-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                                \n                                        originalEvent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     PointerEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PointerEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MenuItem } from 'primeng/api';\n\nexport interface IMenuEvent {\n  item         : MenuItem    ;\n  originalEvent: PointerEvent;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMetric.html":{"url":"interfaces/IMetric.html","title":"interface - IMetric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMetric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Unit\n                                \n                                \n                                            Optional\n                                        UnitType\n                                \n                                \n                                            Optional\n                                        Value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Unit\n                                    \n                                \n                                \n                                    \n                                        Unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UnitType\n                                    \n                                \n                                \n                                    \n                                        UnitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Value\n                                    \n                                \n                                \n                                    \n                                        Value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query        : string                 ;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemperature.html":{"url":"interfaces/ITemperature.html","title":"interface - ITemperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Maximum\n                                \n                                \n                                            Optional\n                                        Minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Maximum\n                                    \n                                \n                                \n                                    \n                                        Maximum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Minimum\n                                    \n                                \n                                \n                                    \n                                        Minimum:         IMetric\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMetric\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimeZone.html":{"url":"interfaces/ITimeZone.html","title":"interface - ITimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Code\n                                \n                                \n                                            Optional\n                                        GmtOffset\n                                \n                                \n                                            Optional\n                                        IsDaylightSaving\n                                \n                                \n                                            Optional\n                                        Name\n                                \n                                \n                                            Optional\n                                        NextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Code\n                                    \n                                \n                                \n                                    \n                                        Code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        GmtOffset\n                                    \n                                \n                                \n                                    \n                                        GmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        IsDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        NextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWeather.html":{"url":"interfaces/IWeather.html","title":"interface - IWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Date\n                                \n                                \n                                            Optional\n                                        Day\n                                \n                                \n                                            Optional\n                                        EpochDate\n                                \n                                \n                                            Optional\n                                        Link\n                                \n                                \n                                            Optional\n                                        MobileLink\n                                \n                                \n                                            Optional\n                                        Night\n                                \n                                \n                                            Optional\n                                        Sources\n                                \n                                \n                                            Optional\n                                        Temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Date\n                                    \n                                \n                                \n                                    \n                                        Date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Day\n                                    \n                                \n                                \n                                    \n                                        Day:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        EpochDate\n                                    \n                                \n                                \n                                    \n                                        EpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Link\n                                    \n                                \n                                \n                                    \n                                        Link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MobileLink\n                                    \n                                \n                                \n                                    \n                                        MobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Night\n                                    \n                                \n                                \n                                    \n                                        Night:         IDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDay\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Sources\n                                    \n                                \n                                \n                                    \n                                        Sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Temperature\n                                    \n                                \n                                \n                                    \n                                        Temperature:         ITemperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITemperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                administrativeArea\n                            \n                            \n                                    Public\n                                conditions\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                dataSets\n                            \n                            \n                                    Public\n                                englishName\n                            \n                            \n                                    Public\n                                forecast\n                            \n                            \n                                    Public\n                                geoPosition\n                            \n                            \n                                    Public\n                                isAlias\n                            \n                            \n                                    Public\n                                isFavorite\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                localizedName\n                            \n                            \n                                    Public\n                                rank\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                timeZone\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ILocation)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ILocation\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            administrativeArea\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AdministrativeArea\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Conditions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            englishName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Forecast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GeoPosition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFavorite\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localizedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rank\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/location-model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AdministrativeArea, IAdministrativeArea } from '@models/administrativeArea-model'\nimport { BaseModel } from '@models/base-model'\nimport { Conditions } from '@models/conditions-model'\nimport { Country, ICountry } from '@models/country-model'\nimport { Forecast } from '@models/forecast-model'\nimport { GeoPosition, IGeoPosition } from '@models/geoPosition-model'\nimport { ITimeZone, TimeZone } from '@models/timeZone-model'\n\nexport interface ILocation {\n  AdministrativeArea?: IAdministrativeArea;\n  Country           ?: ICountry           ;\n  DataSets          ?: string[]           ;\n  EnglishName       ?: string             ;\n  GeoPosition       ?: IGeoPosition       ;\n  IsAlias           ?: boolean            ;\n  Key               ?: string             ;\n  LocalizedName     ?: string             ;\n  Rank              ?: number             ;\n  Region            ?: ICountry           ;\n  TimeZone          ?: ITimeZone          ;\n  Type              ?: string             ;\n}\nexport class Location extends BaseModel {\n  public administrativeArea: AdministrativeArea;\n  public conditions        : Conditions        ;\n  public country           : Country           ;\n  public dataSets          : string[]          ;\n  public englishName       : string            ;\n  public forecast          : Forecast          ;\n  public geoPosition       : GeoPosition       ;\n  public isAlias           : boolean           ;\n  public isFavorite        : boolean           ;\n  public key               : string            ;\n  public localizedName     : string            ;\n  public rank              : number            ;\n  public region            : Country           ;\n  public timeZone          : TimeZone          ;\n  constructor(args?: ILocation) {\n    super(args);\n    this.dataSets = this.dataSets ?? new Array();\n    this.administrativeArea = new AdministrativeArea(args?.AdministrativeArea)\n    this.country            = new Country           (args?.Country           );\n    this.geoPosition        = new GeoPosition       (args?.GeoPosition       );\n    this.region             = new Country           (args?.Region            );\n    this.timeZone           = new TimeZone          (args?.TimeZone          );\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable, of } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    return of(null);\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Metric.html":{"url":"classes/Metric.html","title":"class - Metric","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Metric\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/metric-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unit\n                            \n                            \n                                    Public\n                                unitType\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IMetric)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IMetric\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unitType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/metric-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface IMetric {\n  Unit    ?: string;\n  UnitType?: number;\n  Value   ?: number;\n}\nexport class Metric extends BaseModel {\n  public unit    : string;\n  public unitType: number;\n  public value   : number;\n  constructor(args?: IMetric) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(req: HttpRequest, response: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/cache.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { CacheResult } from '@models/cache-model'\n\nexport abstract class RequestCache {\n  abstract get(req: HttpRequest)         : HttpResponse | undefined;\n  abstract put(req: HttpRequest, response: HttpResponse): void     ;\n}\n\n@Injectable()\nexport class CacheService implements RequestCache {\n  private readonly maxAge = 8.64e+7; // maximum cache age (ms)\n  private readonly cached = new Map();\n  constructor() { }\n\n  public get(req: HttpRequest): HttpResponse | undefined {\n    const cachedOrigin = req.urlWithParams;\n    const cachedResult = this.cached.get(cachedOrigin);\n    return (!cachedResult)\n      ? undefined\n      : cachedResult.lastRead , response: HttpResponse): void {\n    const origin = req.urlWithParams;\n    const expire = Date.now() - this.maxAge;\n    this.cached.set(origin, { url: origin, response, lastRead: Date.now() });\n    this.cached.forEach(entry => entry.lastRead \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, cache: RequestCache)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        RequestCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs'\nimport { delay, tap } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { providers } from '@env/environment'\nimport { decodeBase64 } from '@helpers/formatters'\nimport { ApplicationService } from '@services/application.service'\nimport { RequestCache } from '@services/cache.service'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService, private cache: RequestCache) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.application.loadingChange$.next(true);\n    req = req.url.includes(providers.weather.baseUrl)\n      ? req.clone({\n        params: req.params.append('apikey', decodeBase64(providers.weather.apiKey))\n      }) : req;\n    const cachedResponse = this.cache.get(req);\n    return (!cachedResponse ? next.handle(req) : of(cachedResponse))\n      .pipe(\n        tap((event) => {\n          if (event instanceof HttpResponse) {\n            this.cache.put(req, event);\n            this.application.loadingChange$.next(false);\n          }\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { ApplicationService } from '@services/application.service'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor(private application: ApplicationService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                coordinatesForm\n                            \n                            \n                                    Public\n                                createForm\n                            \n                            \n                                    Public\n                                currentOption\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                searchOptions\n                            \n                            \n                                    Public\n                                searchPattern\n                            \n                            \n                                    Private\n                                    Optional\n                                searchSubject$\n                            \n                            \n                                    Private\n                                setOptions\n                            \n                            \n                                    Public\n                                    Optional\n                                suggestions$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weather: WeatherService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            coordinatesForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentOption\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /[a-zA-Z ]/\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            searchSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            suggestions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Observable, Subject } from 'rxjs'\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators'\nimport { Component, OnInit } from '@angular/core'\nimport { ISearchEvent } from '@helpers/search-event'\nimport { AutoComplete } from '@models/autoComplete-model'\nimport { WeatherService } from '@services/weather.service'\nimport { MenuItem } from 'primeng/api'\nimport { IMenuEvent } from '@helpers/menu-event'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  private searchSubject$?: Subject;\n  public coordinatesForm: FormGroup;\n  public searchOptions: MenuItem[];\n  public currentOption: MenuItem;\n  public searchPattern: RegExp = /[a-zA-Z ]/;\n  public suggestions$?: Observable;\n  constructor(private weather: WeatherService) { }\n  ngOnInit() {\n    this.createForm();\n    this.setOptions();\n    this.currentOption = this.searchOptions[1];\n    this.searchSubject$ = new Subject();\n    this.suggestions$ = this.searchSubject$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(text => this.weather.autoComplete(text.toLowerCase())));\n  }\n  public onSearch = (event: ISearchEvent) =>\n    event.query ? this.searchSubject$.next(event.query) : {};\n  public onSelect = (value: AutoComplete) => {\n    // this.weather.getConditions(value);\n  };\n  public onSubmit = ($event) => { }\n  public createForm = () => this.coordinatesForm =\n    new FormGroup({\n      lat: new FormControl(undefined, [Validators.required, Validators.max(90.0000000), Validators.min(-90.0000000)]),\n      lng: new FormControl(undefined, [Validators.required, Validators.max(180.0000000), Validators.min(-180.0000000)]),\n    });\n  private setOptions = () => {\n    this.searchOptions = [\n      { label: 'Location', icon: 'fa fa-map-marker', command: (e: IMenuEvent) => this.currentOption = e.item },\n      {\n        label: 'Coordinates',\n        icon: 'fa fa-compass',\n        command: (e: IMenuEvent) => {\n          this.currentOption = e.item;\n          this.createForm();\n        }\n      },\n    ];\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      Search\n    \n    \n      \n    \n  \n  \n    \n      Location\n      \n        \n          \n            \n            {{result.toString()}}\n          \n        \n      \n    \n    \n      \n        Latitude\n        \n        \n        \n      \n      \n        Longitude\n        \n        \n        \n      \n      \n        \n          \n      \n    \n  \n\n\n\n\n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                @import \"common.scss\";\n\n.app-search {\n  border-radius: 25px;\n  padding: 35px;\n  margin-bottom: 15px;\n  @extend .shadow;\n  .search-header {\n    padding: 5px;\n    align-items: center;\n    color: $font-color;\n    display: flex;\n    font-size: 32px;\n    justify-content: space-between;\n    .header-title {\n      display: flex;\n      align-items: center;\n      padding-right: 10px;\n      .fa {\n        font-size: smaller;\n        margin-right: 10px;\n      }\n    }\n    .search-options {\n      padding-left: 10px;\n      flex: auto;\n    }\n  }\n  .search-form {\n    padding: 10px 0px;\n    .form-autocomplete {\n      display: flex;\n      flex-direction: column;\n      padding: 0px 2.5px;\n    }\n    .form-coordinates {\n      margin-bottom: 0px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n}\nlabel {\n  margin: 0px;\n  color: $font-color;\n}\ninput:focus {\n  @extend .shadow;\n}\n.form-control.ng-invalid:not(.ng-pristine) {\n  border: 2px solid red;\n  color: red;\n}\n.form-control.ng-valid:not(.ng-pristine) {\n  border: 2px solid $teal;\n  color: $teal;\n}\n.input-col {\n  flex: auto;\n  padding: 0px 2.5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search                                Location                                                {{result.toString()}}                                              Latitude                                            Longitude                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FeatureModule, SearchRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component         , Input, OnInit } from '@angular/core'\nimport { PanelState                        } from '@constants/panel-state.enum'\nimport { ApplicationService                } from '@services/application.service'\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Temperature.html":{"url":"classes/Temperature.html","title":"class - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/temperature-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                maximum\n                            \n                            \n                                    Public\n                                minimum\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITemperature)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITemperature\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maximum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minimum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metric\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/temperature-model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { IMetric, Metric } from '@models/metric-model'\n\nexport interface ITemperature {\n  Maximum?: IMetric;\n  Minimum?: IMetric;\n}\nexport class Temperature extends BaseModel {\n  public maximum: Metric;\n  public minimum: Metric;\n  constructor(args?: ITemperature) {\n    super(args);\n    this.maximum = new Metric(args?.Maximum);\n    this.minimum = new Metric(args?.Minimum);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeZone.html":{"url":"classes/TimeZone.html","title":"class - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/timeZone-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                gmtOffset\n                            \n                            \n                                    Public\n                                isDaylightSaving\n                            \n                            \n                                    Public\n                                nextOffsetChange\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: ITimeZone)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        ITimeZone\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gmtOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDaylightSaving\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nextOffsetChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/timeZone-model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\n\nexport interface ITimeZone {\n  Code            ?: string ;\n  GmtOffset       ?: number ;\n  IsDaylightSaving?: boolean;\n  Name            ?: string ;\n  NextOffsetChange?: Date   ;\n}\nexport class TimeZone extends BaseModel {\n  public code            : string ;\n  public gmtOffset       : number ;\n  public isDaylightSaving: boolean;\n  public nextOffsetChange: Date   ;\n  constructor(args?: ITimeZone) {\n    super(args);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/weather-model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                day\n                            \n                            \n                                    Public\n                                epochDate\n                            \n                            \n                                    Public\n                                link\n                            \n                            \n                                    Public\n                                mobileLink\n                            \n                            \n                                    Public\n                                night\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IWeather)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IWeather\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            day\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            epochDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobileLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            night\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Day\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Temperature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/weather-model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid | string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model'\nimport { Day, IDay } from '@models/day-model'\nimport { ITemperature, Temperature } from '@models/temperature-model'\n\nexport interface IWeather {\n  Date       ?: Date        ;\n  Day        ?: IDay        ;\n  EpochDate  ?: number      ;\n  Link       ?: string      ;\n  MobileLink ?: string      ;\n  Night      ?: IDay        ;\n  Sources    ?: string[]    ;\n  Temperature?: ITemperature;\n}\nexport class Weather extends BaseModel {\n  public date       : Date       ;\n  public day        : Day        ;\n  public epochDate  : number     ;\n  public link       : string     ;\n  public mobileLink : string     ;\n  public night      : Day        ;\n  public sources    : string[]   ;\n  public temperature: Temperature;\n  constructor(args?: IWeather) {\n    super(args);\n    this.sources = this.sources ?? new Array();\n    this.day         = new Day        (args?.Day        );\n    this.night       = new Day        (args?.Night      );\n    this.temperature = new Temperature(args?.Temperature);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { WeatherRoutingModule } from '@weather/weather-routing.module'\nimport { WeatherComponent     } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, WeatherRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherRoutingModule.html":{"url":"modules/WeatherRoutingModule.html","title":"module - WeatherRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                 } from '@angular/core'\nimport { RouterModule    , Routes } from '@angular/router'\nimport { WeatherComponent         } from '@weather/weather.component'\n\nexport const WeatherRoutes: Routes = [\n  { path: '', component: WeatherComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(WeatherRoutes)],\n  exports: [RouterModule]\n})\nexport class WeatherRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                createContext\n                            \n                            \n                                    Public\n                                getConditions\n                            \n                            \n                                    Private\n                                getContext\n                            \n                            \n                                    Public\n                                getForecast\n                            \n                            \n                                    Public\n                                getGeoPosition\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Private\n                                setContext\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGeoPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/weather.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable  , of            } from 'rxjs'\nimport { map                         } from 'rxjs/operators'\nimport { HttpClient                  } from '@angular/common/http'\nimport { Injectable                  } from '@angular/core'\nimport { DataSets                    } from '@constants/data-sets.enum'\nimport { providers                   } from '@env/environment'\nimport { AppSettings                 } from '@helpers/app-settings'\nimport { AutoComplete, IAutoComplete } from '@models/autoComplete-model'\nimport { BaseModel                   } from '@models/base-model'\nimport { Conditions  , IConditions   } from '@models/conditions-model'\nimport { Forecast    , IForecast     } from '@models/forecast-model'\nimport { ILocation   , Location      } from '@models/location-model'\n\n@Injectable()\nexport class WeatherService {\n  private readonly context: Map = new Map();\n  constructor(private http: HttpClient, private args?: AppSettings) { this.createContext(); }\n\n  private setContext = (dataSet: string, value: any): any | null => {\n    !this.getContext(null, dataSet, x => x == value)\n      ? this.context.get(dataSet).unshift(value) : {};\n    return value;\n  }\n  private getContext = (key?: string, dataSet: string = DataSets.Locations, predicate?: (value: any) => unknown): any | null =>\n    this.context.get(dataSet).some(predicate ?? ((item: Location) => item.key == key))\n      ? this.context.get(dataSet).slice().find((item: Location) => item.key == key) : null;\n\n  public autoComplete = (search: string): Observable => this.http\n    .get(providers.weather.autocomplete, { params: { q: search } })\n    .pipe(map(result => result.map(item => new AutoComplete(item))));\n\n  public getConditions = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.conditions}/${locationKey}`)\n    .pipe(map(result => this.setContext(DataSets.Conditions, new Conditions(result))));\n\n  public getForecast = (locationKey: string): Observable => this.http\n    .get(`${providers.weather.forecasts}/${locationKey}`)\n    .pipe(map(result => new Forecast(result)));\n\n  public getGeoPosition = (lat: number, lng: number): Observable => this.http\n    .get(providers.weather.geoposition, { params: { q: `${lat},${lng}` } })\n    .pipe(map(result => this.setContext(DataSets.Locations, new Location(result))));\n\n  public getLocation = (key: string): Observable =>\n    this.getContext(key)\n      ? of(this.getContext(key))\n      : this.http\n        .get(`${providers.weather.locations}/${key}`)\n        .pipe(map(result => this.setContext(DataSets.Locations, new Location(result))));\n\n  private createContext = () => this.context\n    .set(DataSets.Conditions, new Array())\n    .set(DataSets.Forecasts , new Array())\n    .set(DataSets.Locations , new Array());\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            decodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            encodeBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            toCamelCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/formatters.ts\n            \n            variable\n            toTitleCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/menu-event.ts\n            \n            interface\n            IMenuEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            interceptor\n            ExceptionInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            errors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-interceptor.ts\n            \n            variable\n            stored\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            class\n            AdministrativeArea\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/common/models/administrativeArea-model.ts\n            \n            interface\n            IAdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            class\n            AutoComplete\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/autocomplete-model.ts\n            \n            interface\n            IAutoComplete\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base-model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/cache-model.ts\n            \n            interface\n            CacheResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            class\n            Conditions\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            IConditions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            class\n            Country\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/country-model.ts\n            \n            interface\n            ICountry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            class\n            Day\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/day-model.ts\n            \n            interface\n            IDay\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            class\n            Elevation\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/elevation-model.ts\n            \n            interface\n            IElevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            class\n            Forecast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            IForecast\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            class\n            GeoPosition\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/geoPosition-model.ts\n            \n            interface\n            IGeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            class\n            Headline\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/common/models/headline-model.ts\n            \n            interface\n            IHeadline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            ILocation\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            class\n            Metric\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/metric-model.ts\n            \n            interface\n            IMetric\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            class\n            Temperature\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/temperature-model.ts\n            \n            interface\n            ITemperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            class\n            TimeZone\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/timeZone-model.ts\n            \n            interface\n            ITimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/models/weather-model.ts\n            \n            interface\n            IWeather\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            animate.css : ^4.1.1\n        \n            bootstrap : ^4.6.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorTheme   (src/.../color-theme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            LocationType   (src/.../location-type.enum.ts)\n                        \n                        \n                            Measure   (src/.../measure.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorTheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/location-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LocationType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/constants/measure.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Measure\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nFeatureModule \n\nFeatureModule \n\nFeatureModule  -->\n\nContainerModule->FeatureModule \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSearchModule \n\nSearchModule \n\nSearchModule  -->\n\nContainerModule->SearchModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nContainerModule -->\n\nFeatureModule->ContainerModule\n\n\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\nFavoritesModule -->\n\nFeatureModule->FavoritesModule\n\n\n\nForecastModule -->\n\nFeatureModule->ForecastModule\n\n\n\nWeatherModule -->\n\nFeatureModule->WeatherModule\n\n\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nHeaderModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\nSearchModule  -->\n\nHeaderModule->SearchModule \n\n\n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\nContainerModule -->\n\nSearchModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSearchModule->HeaderModule\n\n\n\nSearchModule -->\n\nSearchModule->SearchModule\n\n\n\nSidenavModule -->\n\nSearchModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nSearchModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\nSearchModule  -->\n\nSearchModule->SearchModule \n\n\n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSearchModule->FavoritesModule\n\n\n\nForecastModule -->\n\nSearchModule->ForecastModule\n\n\n\nWeatherModule -->\n\nSearchModule->WeatherModule\n\n\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nSidenavModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\nSearchModule  -->\n\nSidenavModule->SearchModule \n\n\n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nExceptionInterceptor\n\nExceptionInterceptor\n\nContainerModule -->\n\nExceptionInterceptor->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nFavoritesModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\nSearchModule  -->\n\nFavoritesModule->SearchModule \n\n\n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nForecastModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\nSearchModule  -->\n\nForecastModule->SearchModule \n\n\n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\nFeatureModule  -->\n\nWeatherModule->FeatureModule \n\n\n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\nSearchModule  -->\n\nWeatherModule->SearchModule \n\n\n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nWeatherRoutingModule\n\nWeatherRoutingModule\n\nWeatherModule -->\n\nWeatherRoutingModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            decodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            encodeBase64   (src/.../formatters.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errors   (src/.../exception-interceptor.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            providers   (src/.../environment.prod.ts)\n                        \n                        \n                            providers   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            stored   (src/.../exception-interceptor.ts)\n                        \n                        \n                            toCamelCase   (src/.../formatters.ts)\n                        \n                        \n                            toTitleCase   (src/.../formatters.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule, SearchModule, FeatureModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/common/helpers/formatters.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            decodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => atob(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encodeBase64\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value: string): string => btoa(value)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toCamelCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string => original[0].toLowerCase() +\n  (original.substring(1).length \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTitleCase\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (original: string): string =>\n  original.split(' ')\n    .map(item => item[0].toUpperCase() + item.substring(1))\n    .join(' ')\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather: {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k='                              ,\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete'      ,\n    baseUrl     : 'https://dataservice.accuweather.com'                                       ,\n    conditions  : 'https://dataservice.accuweather.comcurrentconditions/v1'                   ,\n    forecasts   : 'https://dataservice.accuweather.comforecasts/v1/daily/5day'                ,\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons'                           ,\n    locations   : 'https://dataservice.accuweather.com/locations/v1'                          ,\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { /* Tel-Aviv */\n  Latitude: 32.109333,\n  Longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countryFlags: {\n    baseUrl: 'https://www.countryflags.io'\n  },\n  weather     : {\n    apiKey      : 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n    autocomplete: 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete',\n    baseUrl     : 'https://dataservice.accuweather.com',\n    conditions  : 'https://dataservice.accuweather.comcurrentconditions/v1',\n    forecasts   : 'https://dataservice.accuweather.comforecasts/v1/daily/5day',\n    geoposition : 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search',\n    icons       : 'https://www.accuweather.com/images/weathericons',\n    locations   : 'https://dataservice.accuweather.com/locations/v1',\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/common/interceptors/exception-interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [400]: 'Request had bad syntax or the parameters supplied were invalid.'                           ,\n  [401]: 'Unauthorized. API authorization failed.'                                                   ,\n  [403]: 'Unauthorized. You do not have permission to access this endpoint.'                         ,\n  [404]: 'Server has not found a route matching the given URI.'                                      ,\n  [500]: 'Server encountered an unexpected condition which prevented it from fulfilling the request.'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stored\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  [providers.weather.autocomplete]: '../../assets/datasets/autocomplete.json',\n  [providers.weather.conditions  ]: '../../assets/datasets/conditions.json'  ,\n  [providers.weather.forecasts   ]: '../../assets/datasets/forecasts.json'   ,\n  [providers.weather.geoposition ]: '../../assets/datasets/geoposition.json' ,\n  [providers.weather.locations   ]: '../../assets/datasets/locations.json'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
