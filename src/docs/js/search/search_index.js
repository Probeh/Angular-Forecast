var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdministrativeArea.html",[0,0.364,1,1.643]],["body/interfaces/AdministrativeArea.html",[0,0.646,1,2.59,2,0.913,3,0.133,4,0.116,5,0.116,6,1.79,7,0.997,8,0.384,9,1.039,10,1.415,11,3.416,12,3.747,13,3.416,14,3.203,15,3.416,16,3.327,17,3.416,18,1.706,19,0.988,20,0.017,21,2.325,22,0.269,23,1.6,24,1.6,25,1.518,26,1.69,27,1.903,28,1.903,29,2.59,30,2.787,31,2.639,32,1.903,33,1.617,34,1.903,35,1.69,36,1.69,37,1.69,38,2.787,39,1.6,40,2.465,41,0.801,42,1.09,43,1.193,44,1.79,45,0.837,46,1.903,47,1.903,48,1.903,49,1.09,50,0.007,51,0.01,52,0.007]],["title/interfaces/AdministrativeArea-1.html",[0,0.304,1,1.372,53,2.076]],["body/interfaces/AdministrativeArea-1.html",[0,0.569,1,3.068,2,1.281,3,0.186,4,0.163,5,0.163,7,1.399,8,0.538,9,1.305,10,1.317,14,3.482,16,3.594,18,1.637,19,0.935,20,0.017,21,1.941,22,0.26,24,2.244,25,2.129,26,2.37,29,2.825,50,0.01,51,0.013,52,0.01,54,3.315,55,1.836,56,4.614,57,2.511,58,4.614]],["title/components/AppComponent.html",[59,0.995,60,1.564]],["body/components/AppComponent.html",[3,0.156,4,0.137,5,0.137,8,0.452,9,1.164,18,0.863,19,0.562,20,0.017,22,0.156,41,0.943,45,1.329,50,0.009,51,0.012,52,0.009,59,1.572,60,2.644,61,1.656,62,1.991,63,1.991,64,1.991,65,1.991,66,3.407,67,1.991,68,3.76,69,3.559,70,5.329,71,2.686,72,6.03,73,2.686,74,5.329,75,6.03,76,2.145,77,1.656,78,5.329,79,2.109,80,4.597,81,0.653,82,0.719,83,0.592,84,1.283,85,2.686,86,2.686,87,1.991,88,3.254,89,1.991,90,1.991,91,1.174,92,1.991,93,1.542,94,1.991,95,1.542,96,1.991,97,1.618,98,1.991,99,1.542,100,1.991,101,1.618,102,1.991,103,1.618,104,1.991,105,1.618,106,1.884,107,1.991,108,1.991]],["title/modules/AppModule.html",[109,0.952,110,2.691]],["body/modules/AppModule.html",[3,0.15,4,0.131,5,0.131,20,0.017,22,0.15,50,0.008,51,0.011,52,0.008,60,3.056,81,1.212,82,0.687,83,0.565,84,1.226,109,0.941,110,5.216,111,1.122,112,1.708,113,2.969,114,2.811,115,2.604,116,1.342,117,3.256,118,3.256,119,3.256,120,3.256,121,4.46,122,4.319,123,2.604,124,1.902,125,1.624,126,3.773,127,1.924,128,4.457,129,2.287,130,1.924,131,5.166,132,4.457,133,2.914,134,5.166,135,3.773,136,3.773,137,2.287,138,3.773,139,3.641,140,2.914,141,2.914,142,2.66,143,3.363,144,2.914,145,2.287,146,2.456,147,3.773,148,3.773,149,3.256,150,2.914,151,3.773,152,2.456,153,2.914]],["title/modules/AppRoutingModule.html",[109,0.952,121,2.485]],["body/modules/AppRoutingModule.html",[3,0.188,4,0.165,5,0.165,20,0.017,22,0.238,50,0.01,51,0.013,52,0.01,81,0.995,82,0.865,83,0.712,111,1.413,116,1.69,121,3.915,127,1.77,130,2.24,154,4.752,155,2.88,156,3.645,157,3.031,158,2.395,159,1.69,160,4.752,161,4.65,162,4.645,163,6.014,164,4.752,165,4.752,166,3.671,167,4.752,168,4.752,169,4.752,170,4.752,171,4.752,172,4.752]],["title/classes/AppSettings.html",[83,0.572,173,2.314]],["body/classes/AppSettings.html",[3,0.164,4,0.144,5,0.144,8,0.474,9,1.202,10,1.391,19,0.937,20,0.017,22,0.164,50,0.009,51,0.012,52,0.009,76,2.197,77,2.129,81,1.022,83,0.621,139,4.963,140,3.199,141,3.199,142,4.354,143,3.581,144,3.199,145,3.743,146,2.696,150,4.771,152,4.021,173,3.334,174,3.199,175,6.075,176,3.574,177,3.816,178,4.771,179,5.502,180,4.142,181,4.142,182,4.142,183,4.249]],["title/injectables/ApplicationService.html",[184,1.822,185,2.038]],["body/injectables/ApplicationService.html",[3,0.111,4,0.097,5,0.097,8,0.32,9,0.91,10,0.794,18,0.91,19,0.96,20,0.017,22,0.111,23,1.988,36,1.408,37,1.408,41,0.994,45,1.039,50,0.006,51,0.009,52,0.006,76,0.994,77,2.133,79,2.224,81,1.091,82,0.508,83,0.419,139,4.366,140,2.158,141,2.158,142,3.892,143,2.711,144,2.158,145,3.019,146,1.818,149,2.41,150,3.847,152,3.242,173,3.346,177,3.779,178,4.784,183,4.784,184,1.988,185,2.224,186,1.969,187,2.41,188,4.981,189,5.344,190,4.298,191,1.482,192,3.754,193,5.522,194,4.166,195,2.41,196,4.166,197,1.988,198,3.217,199,1.969,200,2.794,201,1.482,202,1.886,203,4.166,204,2.794,205,2.794,206,2.794,207,5.816,208,3.134,209,2.794,210,2.794,211,2.794,212,2.794,213,1.586,214,2.936,215,2.158,216,1.969,217,2.158,218,1.969,219,2.41,220,1.693,221,2.794,222,2.794,223,2.794,224,2.41,225,2.41,226,2.794,227,2.794,228,2.794,229,2.794,230,2.794,231,2.794,232,2.794,233,2.794,234,2.794,235,2.794,236,2.794,237,2.794]],["title/interfaces/AutoComplete.html",[0,0.364,55,1.491]],["body/interfaces/AutoComplete.html",[0,0.661,2,1.073,3,0.156,4,0.136,5,0.136,7,1.171,8,0.451,9,1.162,10,1.229,18,1.576,19,0.757,20,0.017,21,2.305,22,0.281,33,1.338,41,0.94,42,1.957,43,1.401,49,2.095,50,0.009,51,0.012,52,0.009,55,2.076,57,2.103,238,2.103,239,3.907,240,3.852,241,3.443,242,2.386,243,2.591,244,3.443,245,2.386,246,2.386,247,2.68,248,2.68,249,2.386,250,2.386,251,1.985,252,2.386,253,3.215,254,2.386,255,3.018,256,3.018,257,2.386,258,2.386,259,2.386,260,2.235,261,2.386,262,2.386,263,2.386]],["title/interfaces/AutoComplete-1.html",[0,0.304,53,2.076,55,1.245]],["body/interfaces/AutoComplete-1.html",[0,0.518,1,3.226,2,1.108,3,0.161,4,0.141,5,0.141,7,1.21,8,0.465,9,1.187,10,1.455,14,2.05,16,3.432,18,1.588,19,1.067,20,0.017,21,2.276,22,0.243,24,3.117,25,2.958,26,3.293,29,3.014,50,0.009,51,0.012,52,0.009,54,2.867,55,2.122,56,5.046,57,2.172,58,4.198]],["title/interfaces/Conditions.html",[0,0.364,264,2.314]],["body/interfaces/Conditions.html",[0,0.555,2,1.008,3,0.147,4,0.128,5,0.128,7,1.101,8,0.424,9,1.114,10,1.472,18,1.595,19,1.04,20,0.017,21,2.311,22,0.231,33,2.315,39,1.766,40,2.574,41,0.884,42,1.203,43,1.317,49,1.895,50,0.008,51,0.011,52,0.008,243,3.06,247,3.167,248,3.167,251,3.167,264,3.089,265,2.609,266,4.853,267,4.853,268,4.853,269,4.853,270,4.853,271,4.853,272,3.796]],["title/components/ContainerComponent.html",[59,0.995,91,1.135]],["body/components/ContainerComponent.html",[3,0.097,4,0.085,5,0.085,8,0.28,9,0.824,10,0.467,18,0.824,19,0.735,20,0.017,22,0.097,33,1.282,41,1.098,45,1.147,50,0.005,51,0.008,52,0.005,59,1.199,60,1.004,61,1.172,62,1.235,63,1.235,64,1.235,65,1.235,67,1.235,68,3.403,69,3.269,71,1.901,73,1.901,76,0.872,77,1.83,79,1.308,81,0.922,82,0.446,83,0.367,84,0.796,85,1.901,86,1.901,87,1.235,88,2.603,89,1.235,90,1.235,91,1.536,92,1.235,93,0.957,94,1.235,95,0.957,96,1.235,97,1.004,98,1.235,99,0.957,100,1.235,101,1.004,102,1.235,103,1.004,104,1.235,105,1.004,106,1.8,107,1.235,108,1.235,143,1.595,145,2.787,146,1.595,152,2.993,153,2.913,158,1.235,177,3.453,185,2.757,190,3.967,191,1.342,192,1.485,197,1.169,201,1.342,202,1.707,220,1.485,225,3.967,273,2.114,274,1.707,275,2.455,276,5.889,277,4.598,278,3.772,279,4.598,280,2.757,281,5.164,282,2.114,283,6.135,284,3.772,285,2.913,286,2.45,287,2.45,288,2.45,289,3.254,290,2.45,291,3.772,292,2.114,293,2.45,294,2.45,295,2.658,296,2.913,297,3.772,298,2.114,299,2.45,300,2.45,301,2.45,302,2.45,303,2.45,304,1.727,305,1.892,306,2.114,307,2.114,308,2.45,309,3.967,310,3.254,311,3.254,312,2.114,313,2.114,314,2.658,315,4.307,316,3.93,317,2.114,318,3.254,319,4.307,320,3.254,321,3.254,322,2.114,323,3.254,324,3.772,325,3.254,326,2.45,327,2.913,328,3.241,329,2.45,330,2.114,331,2.45,332,2.45,333,4.598,334,3.254,335,2.114,336,3.254]],["title/modules/ContainerModule.html",[109,0.952,122,2.485]],["body/modules/ContainerModule.html",[3,0.107,4,0.094,5,0.094,10,0.514,19,0.384,20,0.017,22,0.107,45,0.673,50,0.006,51,0.009,52,0.006,61,1.517,77,0.839,81,1.183,82,0.491,83,0.404,84,0.877,91,2.055,109,0.673,111,1.614,112,1.222,113,2.46,114,1.288,115,2.736,116,1.736,122,4.943,123,2.046,124,1.36,125,1.161,127,1.512,128,3.503,129,1.636,130,1.818,137,1.636,159,1.444,173,3.527,185,3.265,191,0.96,197,1.288,198,3.136,199,1.902,201,0.96,217,2.085,218,1.902,292,2.329,337,2.329,338,2.329,339,2.329,340,2.329,341,2.329,342,3.128,343,3.128,344,3.98,345,3.98,346,3.98,347,3.98,348,3.98,349,2.085,350,3.503,351,2.699,352,4.06,353,2.699,354,4.88,355,2.168,356,1.36,357,4.88,358,2.699,359,2.861,360,2.699,361,2.861,362,2.699,363,2.699,364,2.699,365,2.699,366,2.699,367,2.699,368,2.699,369,4.88,370,4.06,371,4.06,372,3.136,373,1.636,374,2.699]],["title/modules/ContainerRoutingModule.html",[109,0.952,344,2.485]],["body/modules/ContainerRoutingModule.html",[3,0.21,4,0.183,5,0.183,20,0.017,22,0.255,50,0.012,51,0.014,52,0.012,81,1.063,82,0.963,83,0.793,111,1.573,116,1.882,127,1.971,130,2.394,155,3.206,156,3.895,157,3.24,158,2.667,159,1.882,344,4.184,375,5.29,376,5.29,377,5.29]],["title/injectables/ContextService.html",[184,1.822,345,2.485]],["body/injectables/ContextService.html",[3,0.162,4,0.141,5,0.141,8,0.467,9,1.19,19,0.775,20,0.017,22,0.162,35,2.057,41,1.3,50,0.009,51,0.012,52,0.009,76,2.181,77,2.033,79,2.908,81,1.082,82,0.742,83,0.611,177,3.09,184,2.599,186,2.876,189,6.049,191,1.937,192,4.249,201,1.451,202,1.847,207,5.88,208,3.479,213,2.316,345,3.545,378,3.52,379,4.735,380,6.13,381,6.541,382,5.446,383,4.08,384,4.321,385,4.08,386,4.08,387,4.08,388,4.08,389,4.08,390,4.08,391,4.08,392,4.08,393,4.08]],["title/interfaces/Country.html",[0,0.364,29,1.643]],["body/interfaces/Country.html",[0,0.664,1,2.502,2,1.003,3,0.146,4,0.128,5,0.128,6,1.965,7,1.095,8,0.421,9,1.109,10,1.296,11,2.089,12,3.859,13,2.089,14,3.315,15,2.089,16,3.428,17,2.089,18,1.702,19,0.892,20,0.017,21,2.308,22,0.276,23,1.756,24,1.756,25,1.666,26,1.855,27,2.089,28,2.089,29,2.83,30,2.931,31,2.775,32,2.089,33,1.726,34,2.089,35,1.855,36,1.855,37,1.855,38,2.931,39,1.756,40,2.568,41,0.879,42,1.196,43,1.309,44,1.965,45,0.918,46,2.089,47,2.089,48,2.089,49,1.196,50,0.008,51,0.011,52,0.008]],["title/interfaces/DailyForecast.html",[0,0.364,241,2.038]],["body/interfaces/DailyForecast.html",[0,0.632,2,0.927,3,0.135,4,0.118,5,0.118,7,1.012,8,0.389,9,1.05,10,1.435,18,1.625,19,0.991,20,0.017,21,2.301,22,0.27,33,1.157,41,0.813,42,1.812,43,1.211,49,2.301,50,0.007,51,0.01,52,0.007,55,1.329,57,1.817,238,1.817,239,2.063,240,2.977,241,2.977,242,3.672,243,2.997,244,3.876,245,3.672,246,3.672,247,3.221,248,3.221,249,2.063,250,2.063,251,1.716,252,2.063,253,2.977,254,2.063,255,2.729,256,2.729,257,2.063,258,2.063,259,2.063,260,1.932,261,2.063,262,2.063,263,2.063]],["title/interfaces/Day.html",[0,0.364,244,2.038]],["body/interfaces/Day.html",[0,0.656,2,1.045,3,0.152,4,0.133,5,0.133,7,1.141,8,0.439,9,1.142,10,1.313,18,1.606,19,0.846,20,0.017,21,2.363,22,0.279,33,2.02,41,0.916,42,1.931,43,1.365,49,2.073,50,0.008,51,0.011,52,0.008,55,1.498,57,2.049,238,2.049,239,2.326,240,3.173,241,2.79,242,2.326,243,2.557,244,3.564,245,2.326,246,2.326,247,2.634,248,2.634,249,3.866,250,3.866,251,3.216,252,2.326,253,3.173,254,2.326,255,2.966,256,2.966,257,2.326,258,2.326,259,2.326,260,2.178,261,2.326,262,2.326,263,2.326]],["title/interfaces/Elevation.html",[0,0.364,38,1.924]],["body/interfaces/Elevation.html",[0,0.668,1,2.535,2,1.028,3,0.15,4,0.131,5,0.131,6,2.015,7,1.122,8,0.432,9,1.128,10,1.208,11,2.142,12,3.343,13,2.142,14,2.604,15,2.142,16,2.969,17,2.142,18,1.679,19,0.839,20,0.017,21,2.321,22,0.278,23,1.8,24,1.8,25,1.708,26,1.902,27,2.142,28,2.142,29,2.726,30,2.969,31,2.811,32,2.142,33,1.756,34,2.142,35,1.902,36,1.902,37,1.902,38,3.193,39,3.023,40,3.031,41,0.901,42,1.226,43,1.342,44,2.015,45,0.941,46,2.142,47,2.142,48,2.142,49,1.226,50,0.008,51,0.011,52,0.008]],["title/classes/Encoding.html",[83,0.572,394,2.949]],["body/classes/Encoding.html",[3,0.109,4,0.096,5,0.096,8,0.316,10,1.175,18,1.698,19,1.001,20,0.017,22,0.109,25,2.975,41,1.633,45,1.538,50,0.006,51,0.009,52,0.006,77,1.916,79,2.204,81,0.683,83,0.413,159,1.759,174,2.131,177,3.108,191,1.468,197,3.136,199,1.945,201,2.193,202,1.249,208,1.566,214,1.945,216,1.945,272,1.796,350,6.368,373,3.737,394,3.188,395,2.381,396,4.128,397,4.128,398,4.128,399,4.128,400,4.128,401,4.128,402,4.128,403,2.759,404,4.128,405,2.759,406,2.759,407,5.876,408,4.128,409,2.759,410,4.128,411,2.759,412,4.128,413,2.759,414,6.572,415,4.128,416,2.759,417,2.759,418,2.759,419,2.381,420,2.381,421,2.759,422,2.759,423,2.759,424,2.759,425,2.759,426,2.759,427,4.128,428,2.759,429,2.759,430,2.759,431,4.128,432,2.759,433,4.128,434,2.759,435,2.759,436,2.759,437,2.759,438,2.759]],["title/components/FavoritesComponent.html",[59,0.995,93,1.491]],["body/components/FavoritesComponent.html",[3,0.125,4,0.109,5,0.109,8,0.361,20,0.017,22,0.125,45,1.135,50,0.007,51,0.01,52,0.007,59,1.392,60,1.291,61,1.414,62,1.588,63,1.588,64,1.588,65,1.588,67,1.588,68,3.603,69,3.411,71,2.294,73,2.294,76,1.9,77,1.414,81,0.753,82,0.573,83,0.472,84,1.024,85,2.294,86,2.294,87,1.588,88,2.948,89,1.588,90,1.588,91,0.937,92,1.588,93,2.284,94,1.588,95,1.23,96,1.588,97,1.291,98,1.588,99,1.23,100,1.588,101,1.291,102,1.588,103,1.291,104,1.588,105,1.291,106,1.503,107,1.588,108,1.588,166,3.514,191,1.619,201,1.121,202,1.426,274,2.06,275,2.852,280,3.123,295,3.207,304,2.221,305,2.433,316,2.221,319,4.993,327,2.433,328,2.221,439,2.718,440,5.341,441,4.55,442,3.151,443,3.151,444,5.85,445,7.225,446,6.465,447,6.465,448,6.465,449,5.85,450,5.85,451,4.55,452,5.341,453,2.718,454,2.718,455,3.151,456,3.151,457,3.151,458,3.151,459,3.151,460,3.151,461,3.151,462,3.151,463,4.125,464,3.151,465,3.151,466,2.718,467,3.151]],["title/modules/FavoritesModule.html",[109,0.952,468,2.691]],["body/modules/FavoritesModule.html",[3,0.155,4,0.136,5,0.136,20,0.017,22,0.155,50,0.009,51,0.012,52,0.009,61,1.866,81,1.064,82,0.712,83,0.587,84,1.272,91,2.171,93,2.068,109,0.977,111,1.913,112,1.772,113,3.026,114,1.868,115,2.67,116,2.135,123,2.67,124,1.973,125,1.685,127,1.973,130,1.973,137,2.373,159,1.884,342,3.306,343,3.306,355,2.828,356,1.973,468,5.379,469,3.378,470,3.915,471,3.915,472,3.378,473,4.509,474,3.024,475,3.915,476,3.378]],["title/modules/FavoritesRoutingModule.html",[109,0.952,473,2.485]],["body/modules/FavoritesRoutingModule.html",[3,0.198,4,0.173,5,0.173,20,0.017,22,0.246,50,0.011,51,0.014,52,0.011,59,1.303,81,1.117,82,0.909,83,0.749,93,2.423,111,1.486,116,1.778,127,1.862,130,2.312,155,3.029,156,3.761,157,3.128,158,2.519,159,1.778,161,3.522,473,4.04,476,4.312,477,4.998,478,4.998,479,3.86,480,4.998]],["title/modules/FeatureModule.html",[109,0.952,481,2.167]],["body/modules/FeatureModule.html",[3,0.143,4,0.125,5,0.125,20,0.017,22,0.143,50,0.008,51,0.011,52,0.008,81,1.28,82,0.656,83,0.54,111,1.071,116,1.282,127,1.342,130,1.864,220,2.183,355,2.672,356,1.816,372,2.783,481,2.84,482,3.603,483,5.749,484,3.603,485,5.004,486,3.603,487,5.004,488,3.603,489,5.004,490,3.603,491,5.004,492,3.603,493,5.004,494,3.603,495,5.004,496,3.603,497,5.004,498,3.603,499,5.004,500,3.603,501,5.004,502,3.603,503,5.004,504,3.603,505,5.004,506,3.603,507,5.004,508,3.603,509,5.004,510,3.603,511,5.004,512,3.603,513,5.004,514,3.603,515,4.317,516,3.108,517,5.004,518,3.603,519,5.004,520,3.603,521,5.004,522,3.603,523,3.603]],["title/components/ForecastComponent.html",[59,0.995,95,1.491]],["body/components/ForecastComponent.html",[3,0.154,4,0.134,5,0.134,8,0.444,20,0.017,22,0.154,45,1.314,50,0.008,51,0.011,52,0.008,59,1.558,60,1.59,61,1.637,62,1.956,63,1.956,64,1.956,65,1.956,67,1.956,68,3.749,69,3.549,71,2.654,73,2.654,76,2.126,77,1.637,81,0.642,82,0.706,83,0.582,84,1.261,85,2.654,86,2.654,87,1.956,88,3.231,89,1.956,90,1.956,91,1.154,92,1.956,93,1.515,94,1.956,95,2.503,96,1.956,97,1.59,98,1.956,99,1.515,100,1.956,101,1.59,102,1.956,103,1.59,104,1.956,105,1.59,106,1.852,107,1.956,108,1.956,191,1.873,201,1.381,202,1.757,274,2.384,275,3.191,280,3.422,524,3.349,525,5.53,526,5.977,527,5.266,528,3.882,529,3.882,530,4.067]],["title/modules/ForecastModule.html",[109,0.952,531,2.691]],["body/modules/ForecastModule.html",[3,0.155,4,0.136,5,0.136,20,0.017,22,0.155,50,0.009,51,0.012,52,0.009,61,1.866,81,1.064,82,0.712,83,0.587,84,1.272,91,2.171,95,2.068,109,0.977,111,1.913,112,1.772,113,3.026,114,1.868,115,2.67,116,2.135,123,2.67,124,1.973,125,1.685,127,1.973,130,1.973,137,2.373,159,1.884,342,3.306,343,3.306,355,2.828,356,1.973,531,5.379,532,3.378,533,3.915,534,3.915,535,3.378,536,4.509,537,3.024,538,3.915,539,3.378]],["title/modules/ForecastRoutingModule.html",[109,0.952,536,2.485]],["body/modules/ForecastRoutingModule.html",[3,0.198,4,0.173,5,0.173,20,0.017,22,0.246,50,0.011,51,0.014,52,0.011,59,1.303,81,1.117,82,0.909,83,0.749,95,2.423,111,1.486,116,1.778,127,1.862,130,2.312,155,3.029,156,3.761,157,3.128,158,2.519,159,1.778,161,3.522,479,3.86,536,4.04,539,4.312,540,4.998,541,4.998,542,4.998]],["title/interfaces/GeoPosition.html",[0,0.364,31,1.822]],["body/interfaces/GeoPosition.html",[0,0.664,1,2.502,2,1.003,3,0.146,4,0.128,5,0.128,6,1.965,7,1.095,8,0.421,9,1.109,10,1.296,11,2.089,12,3.3,13,2.089,14,2.56,15,2.089,16,2.931,17,2.089,18,1.675,19,0.892,20,0.017,21,2.414,22,0.276,23,1.756,24,1.756,25,1.666,26,1.855,27,2.089,28,2.089,29,2.698,30,2.931,31,2.991,32,2.089,33,1.726,34,2.089,35,1.855,36,3.16,37,3.16,38,3.579,39,1.756,40,2.568,41,0.879,42,1.196,43,1.309,44,1.965,45,0.918,46,2.089,47,2.089,48,2.089,49,1.196,50,0.008,51,0.011,52,0.008]],["title/components/HeaderComponent.html",[59,0.995,97,1.564]],["body/components/HeaderComponent.html",[3,0.09,4,0.079,5,0.079,8,0.26,9,0.776,19,0.506,20,0.017,22,0.09,41,0.542,45,0.887,49,1.939,50,0.005,51,0.008,52,0.005,59,1.142,60,0.93,61,1.105,62,1.144,63,1.144,64,1.144,65,1.144,67,1.144,68,3.336,69,3.209,71,1.791,73,1.791,76,1.558,77,1.673,79,1.212,81,0.588,82,0.413,83,0.34,84,0.738,85,1.791,86,1.791,87,1.144,88,2.498,89,1.144,90,1.144,91,0.675,92,1.144,93,0.886,94,1.144,95,0.886,96,1.144,97,2.03,98,1.144,99,0.886,100,1.144,101,0.93,102,1.144,103,0.93,104,1.144,105,0.93,106,1.083,107,1.144,108,1.144,125,1.529,166,2.745,177,3.007,191,1.264,201,1.264,202,1.609,208,2.486,260,1.288,274,1.609,275,2.339,280,2.646,304,1.6,305,1.753,306,1.958,307,1.958,309,3.779,310,3.779,311,3.779,312,1.958,313,1.958,314,4.205,315,4.156,316,4.352,318,4.276,319,3.828,320,1.958,321,1.958,322,3.066,325,3.066,327,1.753,328,4.023,330,3.066,334,3.779,335,3.779,453,3.066,454,1.958,463,3.828,466,1.958,543,1.958,544,5.966,545,4.38,546,3.554,547,4.38,548,4.957,549,3.554,550,4.38,551,3.554,552,4.957,553,2.27,554,2.27,555,2.27,556,3.554,557,2.27,558,3.554,559,3.554,560,3.554,561,3.554,562,3.066,563,3.066,564,4.38,565,5.381,566,5.707,567,6.175,568,2.27,569,2.27,570,2.27,571,3.554,572,2.27,573,4.957,574,4.957,575,4.957,576,3.554,577,4.38,578,2.27,579,2.27,580,2.27,581,1.958,582,2.27,583,2.27,584,3.554,585,3.554,586,2.27,587,2.27,588,2.27,589,3.066,590,3.066,591,3.554,592,2.27]],["title/modules/HeaderModule.html",[109,0.952,342,1.728]],["body/modules/HeaderModule.html",[3,0.152,4,0.133,5,0.133,20,0.017,22,0.152,50,0.008,51,0.011,52,0.008,61,1.844,81,1.103,82,0.696,83,0.573,84,1.244,91,2.161,97,2.136,109,0.955,111,1.895,112,1.732,113,2.991,114,1.826,115,2.629,116,2.111,123,2.629,124,1.929,125,1.647,127,1.943,130,1.943,137,2.319,159,1.855,342,3.539,343,3.29,355,2.785,356,1.929,481,3.905,593,3.301,594,3.827,595,3.301,596,3.827,597,4.479,598,2.956,599,2.956,600,3.827,601,3.827]],["title/modules/HeaderRoutingModule.html",[109,0.952,597,2.485]],["body/modules/HeaderRoutingModule.html",[3,0.21,4,0.183,5,0.183,20,0.017,22,0.255,50,0.012,51,0.014,52,0.012,81,1.063,82,0.963,83,0.793,111,1.573,116,1.882,127,1.971,130,2.394,155,3.206,156,3.895,157,3.24,158,2.667,159,1.882,597,4.184,602,5.29,603,5.29,604,5.29]],["title/interfaces/Headline.html",[0,0.364,240,2.038]],["body/interfaces/Headline.html",[0,0.627,2,0.907,3,0.132,4,0.115,5,0.115,7,0.99,8,0.381,9,1.034,10,1.444,18,1.639,19,1.003,20,0.017,21,2.392,22,0.268,33,1.131,41,0.795,42,1.79,43,1.184,49,2.25,50,0.007,51,0.01,52,0.007,55,1.3,57,1.777,238,1.777,239,2.017,240,3.203,241,2.527,242,2.017,243,2.37,244,3.203,245,2.017,246,2.017,247,3.194,248,3.194,249,2.017,250,2.017,251,1.678,252,2.017,253,2.941,254,2.017,255,2.686,256,2.686,257,3.635,258,3.635,259,3.635,260,3.404,261,3.635,262,3.635,263,3.635]],["title/interfaces/IDictionary.html",[0,0.364,384,2.691]],["body/interfaces/IDictionary.html",[0,0.522,2,1.493,3,0.217,4,0.19,5,0.19,18,1.435,20,0.016,22,0.217,25,2.973,50,0.012,51,0.014,52,0.012,77,1.704,81,0.907,384,4.629,605,4.73,606,5.483,607,7.031,608,5.483,609,5.483,610,5.483]],["title/interfaces/ISearchEvent.html",[0,0.364,611,2.691]],["body/interfaces/ISearchEvent.html",[0,0.496,2,1.419,3,0.206,4,0.18,5,0.18,8,0.596,9,1.391,18,1.502,19,0.906,20,0.017,22,0.206,50,0.011,51,0.014,52,0.011,611,4.488,612,4.494,613,4.494,614,7.164,615,7.164,616,6.877,617,6.877]],["title/interfaces/Imperial.html",[0,0.364,40,1.564]],["body/interfaces/Imperial.html",[0,0.61,2,1.218,3,0.177,4,0.155,5,0.155,7,1.329,8,0.511,9,1.263,10,1.371,18,1.571,19,0.913,20,0.017,21,2.41,22,0.254,33,1.966,39,2.133,40,2.876,41,1.618,42,2.203,43,2.411,49,1.453,50,0.01,51,0.013,52,0.01,243,2.758,247,2.253,248,2.253,251,2.253,264,2.709,265,3.151,266,3.453,267,3.453,268,3.453,269,3.453,270,3.453,271,3.453,272,2.91]],["title/interfaces/Imperial-1.html",[0,0.304,40,1.307,53,2.076]],["body/interfaces/Imperial-1.html",[0,0.664,1,2.502,2,1.003,3,0.146,4,0.128,5,0.128,6,1.965,7,1.095,8,0.421,9,1.109,10,1.296,11,2.089,12,3.3,13,2.089,14,2.56,15,2.089,16,2.931,17,2.089,18,1.685,19,0.892,20,0.017,21,2.414,22,0.276,23,1.756,24,1.756,25,1.666,26,1.855,27,2.089,28,2.089,29,2.698,30,2.931,31,2.775,32,2.089,33,1.726,34,2.089,35,1.855,36,1.855,37,1.855,38,2.931,39,1.756,40,2.694,41,1.497,42,2.037,43,2.23,44,1.965,45,0.918,46,2.089,47,2.089,48,2.089,49,1.196,50,0.008,51,0.011,52,0.008]],["title/interfaces/Location.html",[0,0.364,23,1.822]],["body/interfaces/Location.html",[0,0.616,1,2.857,2,0.779,3,0.113,4,0.099,5,0.099,6,1.526,7,0.85,8,0.327,9,0.926,10,1.469,11,1.622,12,3.545,13,1.622,14,2.136,15,1.622,16,3.148,17,1.622,18,1.684,19,1.061,20,0.017,21,2.303,22,0.256,23,2.022,24,2.665,25,2.528,26,2.815,27,3.17,28,3.17,29,3.012,30,3.347,31,3.168,32,3.17,33,1.898,34,3.17,35,2.815,36,1.441,37,1.441,38,2.545,39,1.364,40,2.288,41,0.682,42,0.929,43,1.017,44,1.526,45,0.713,46,1.622,47,1.622,48,1.622,49,0.929,50,0.006,51,0.009,52,0.006]],["title/guards/LocationResolver.html",[361,2.691,618,2.949]],["body/guards/LocationResolver.html",[3,0.155,4,0.135,5,0.135,8,0.447,10,1.008,19,0.753,20,0.017,22,0.155,45,1.319,50,0.008,51,0.012,52,0.008,76,1.389,77,1.643,81,1.191,82,0.71,83,0.585,129,2.366,158,1.968,178,3.015,183,3.015,184,2.523,185,3.43,191,1.881,192,2.366,197,2.523,201,1.389,213,2.216,216,2.751,219,3.368,220,2.366,272,3.441,274,1.767,282,3.368,285,4.083,361,3.726,373,3.204,619,3.904,620,3.368,621,6.425,622,5.172,623,5.543,624,3.904,625,5.287,626,6.425,627,3.904,628,3.904,629,4.225,630,4.561,631,5.287,632,3.368,633,3.368,634,3.368,635,2.751,636,3.904,637,3.904,638,3.904,639,3.904,640,3.904,641,3.904]],["title/interceptors/RequestInterceptor.html",[346,2.485,359,2.691]],["body/interceptors/RequestInterceptor.html",[3,0.174,4,0.152,5,0.152,8,0.503,10,0.838,19,0.815,20,0.017,22,0.174,45,1.097,50,0.01,51,0.012,52,0.01,76,2.262,77,1.778,81,1.052,82,0.8,83,0.659,129,2.665,159,2.035,184,2.73,191,2.035,197,2.098,201,1.564,213,2.496,274,1.991,295,4.483,346,3.724,373,2.665,629,4.483,642,3.794,643,5.488,644,3.397,645,4.937,646,4.398,647,4.937,648,5.812,649,5.812,650,4.398,651,3.794,652,3.794,653,4.937,654,5.722,655,4.398,656,4.398,657,4.398,658,4.398,659,4.398,660,4.398]],["title/interceptors/ResponseInterceptor.html",[347,2.485,359,2.691]],["body/interceptors/ResponseInterceptor.html",[3,0.164,4,0.144,5,0.144,8,0.474,10,0.79,19,0.59,20,0.017,22,0.164,45,1.033,50,0.009,51,0.012,52,0.009,76,2.197,77,1.71,81,1.089,82,0.754,83,0.621,129,2.51,159,1.957,184,2.625,191,1.957,197,1.977,201,1.473,213,2.351,274,1.875,295,4.354,296,4.249,298,3.574,347,3.581,373,3.334,629,4.354,632,3.574,633,3.574,642,3.574,644,3.199,645,4.746,647,4.746,648,5.678,649,5.678,651,3.574,652,3.574,653,4.746,661,5.329,662,4.142,663,4.142,664,5.502,665,4.746,666,5.502,667,4.142,668,4.142,669,5.502,670,4.142,671,4.142,672,4.142,673,4.142]],["title/components/SearchComponent.html",[59,0.995,99,1.491]],["body/components/SearchComponent.html",[3,0.115,4,0.101,5,0.101,8,0.332,9,0.936,10,0.553,18,0.936,19,0.725,20,0.017,22,0.115,45,1.271,50,0.011,51,0.009,52,0.006,59,1.328,60,1.188,61,1.332,62,1.462,63,1.462,64,1.462,65,1.462,67,1.462,68,3.54,69,3.392,71,2.159,73,2.159,76,1.812,77,2.019,81,0.843,82,0.528,83,0.435,84,0.943,85,2.159,86,2.159,87,1.462,88,2.835,89,1.462,90,1.462,91,0.863,92,1.462,93,1.133,94,1.462,95,1.133,96,1.462,97,1.188,98,1.462,99,2.196,100,1.462,101,1.188,102,1.462,103,1.188,104,1.462,105,1.188,106,1.384,107,1.462,108,1.462,162,4.345,177,3.583,191,1.524,192,3.087,197,1.384,201,2.001,202,2.547,208,2.432,274,1.94,275,2.72,280,3.003,296,3.309,611,3.965,674,2.503,675,5.094,676,4.284,677,5.094,678,5.094,679,5.625,680,4.284,681,5.625,682,4.284,683,2.901,684,2.901,685,4.284,686,2.901,687,2.901,688,5.625,689,2.901,690,4.284,691,2.901,692,2.241,693,2.901,694,2.901,695,2.901,696,2.901,697,2.901,698,2.901,699,2.901,700,2.901,701,2.901,702,2.901,703,2.901,704,2.901,705,2.901,706,2.901,707,2.901]],["title/modules/SearchModule.html",[109,0.952,708,2.691]],["body/modules/SearchModule.html",[3,0.143,4,0.125,5,0.125,20,0.017,22,0.143,50,0.008,51,0.011,52,0.008,61,1.789,81,1.147,82,0.657,83,0.541,84,1.174,91,2.134,99,1.957,109,0.901,111,1.849,112,1.635,113,2.902,114,1.724,115,2.527,116,2.048,123,2.527,124,1.821,125,1.554,127,1.867,130,1.867,137,2.189,159,1.783,342,3.249,343,3.249,355,2.677,356,1.821,481,3.837,599,2.79,692,2.79,708,5.41,709,3.117,710,3.117,711,3.613,712,3.613,713,4.4,714,4.4,715,2.79,716,5.013,717,3.613,718,3.117,719,3.613]],["title/modules/SearchRoutingModule.html",[109,0.952,713,2.485]],["body/modules/SearchRoutingModule.html",[3,0.198,4,0.173,5,0.173,20,0.017,22,0.246,50,0.011,51,0.014,52,0.011,59,1.303,81,1.117,82,0.909,83,0.749,99,2.423,111,1.486,116,1.778,127,1.862,130,2.312,155,3.029,156,3.761,157,3.128,158,2.519,159,1.778,161,3.522,479,3.86,713,4.04,718,4.312,720,4.998,721,4.998,722,4.998]],["title/components/SettingsComponent.html",[59,0.995,101,1.564]],["body/components/SettingsComponent.html",[3,0.154,4,0.134,5,0.134,8,0.444,20,0.017,22,0.154,45,1.314,50,0.008,51,0.011,52,0.008,59,1.558,60,1.59,61,1.637,62,1.956,63,1.956,64,1.956,65,1.956,67,1.956,68,3.749,69,3.549,71,2.654,73,2.654,76,2.126,77,1.637,81,0.642,82,0.706,83,0.582,84,1.261,85,2.654,86,2.654,87,1.956,88,3.231,89,1.956,90,1.956,91,1.154,92,1.956,93,1.515,94,1.956,95,1.515,96,1.956,97,1.59,98,1.956,99,1.515,100,1.956,101,2.626,102,1.956,103,1.59,104,1.956,105,1.59,106,1.852,107,1.956,108,1.956,191,1.873,201,1.381,202,1.757,218,4.518,274,2.384,275,3.191,280,3.422,530,4.067,723,3.349,724,5.977,725,5.266,726,3.882,727,3.882]],["title/components/SidenavComponent.html",[59,0.995,103,1.564]],["body/components/SidenavComponent.html",[3,0.128,4,0.112,5,0.112,8,0.371,10,0.618,19,0.661,20,0.017,22,0.128,41,0.774,45,1.354,50,0.007,51,0.01,52,0.007,59,1.415,60,1.328,61,1.443,62,1.634,63,1.634,64,1.634,65,1.634,67,1.634,68,3.624,69,3.523,71,2.341,73,2.341,76,1.153,77,1.687,79,1.731,81,0.98,82,0.59,83,0.486,84,1.053,85,2.341,86,2.341,87,1.634,88,2.987,89,1.634,90,1.634,91,0.964,92,1.634,93,1.265,94,1.634,95,1.265,96,1.634,97,1.328,98,1.634,99,1.265,100,1.634,101,1.328,102,1.634,103,2.428,104,1.634,105,1.328,106,1.546,107,1.634,108,1.634,125,1.998,143,2.11,145,3.289,146,2.11,152,3.532,153,3.587,177,1.634,185,3.164,191,1.652,197,1.546,201,1.153,202,1.467,220,1.964,274,2.102,275,2.898,280,3.164,304,2.284,314,2.284,315,2.503,316,2.284,317,2.796,328,3.273,336,4.682,463,2.503,562,2.796,563,2.796,589,4.007,590,4.007,634,2.796,728,2.796,729,5.427,730,4.644,731,4.644,732,3.241,733,4.644,734,4.644,735,3.241,736,4.644,737,3.241,738,4.644,739,3.241,740,3.241]],["title/modules/SidenavModule.html",[109,0.952,343,1.728]],["body/modules/SidenavModule.html",[3,0.152,4,0.133,5,0.133,20,0.017,22,0.152,50,0.008,51,0.011,52,0.008,61,1.85,81,1.14,82,0.7,83,0.577,84,1.251,91,2.164,101,2.145,103,2.145,109,0.96,111,1.899,112,1.742,113,3,114,1.836,115,2.639,116,2.117,123,2.639,124,1.94,125,1.656,127,1.95,130,1.95,159,1.862,342,3.294,343,3.526,355,2.796,356,1.94,481,3.912,515,4.517,516,3.32,599,2.972,741,3.848,742,3.848,743,3.848,744,3.848,745,2.972,746,3.848,747,3.848]],["title/interfaces/Temperature.html",[0,0.364,243,1.643]],["body/interfaces/Temperature.html",[0,0.619,2,1.255,3,0.183,4,0.16,5,0.16,7,1.37,8,0.527,9,1.288,10,1.307,18,1.498,19,0.839,20,0.017,21,2.228,22,0.258,33,2.004,39,3.271,40,3.132,41,1.1,42,1.497,43,1.639,49,1.497,50,0.01,51,0.013,52,0.01,243,2.95,247,2.322,248,2.322,251,2.322,264,2.792,265,3.247,266,3.558,267,3.558,268,3.558,269,3.558,270,3.558,271,3.558,272,2.999]],["title/interfaces/Temperature-1.html",[0,0.304,53,2.076,243,1.372]],["body/interfaces/Temperature-1.html",[0,0.661,2,1.073,3,0.156,4,0.136,5,0.136,7,1.171,8,0.451,9,1.162,10,1.229,18,1.576,19,0.757,20,0.017,21,2.305,22,0.281,33,1.338,41,0.94,42,1.957,43,1.401,49,2.095,50,0.009,51,0.012,52,0.009,55,1.537,57,2.103,238,2.103,239,2.386,240,3.215,241,2.839,242,2.386,243,2.775,244,3.443,245,2.386,246,2.386,247,2.68,248,2.68,249,2.386,250,2.386,251,1.985,252,3.907,253,3.788,254,3.907,255,3.018,256,3.018,257,2.386,258,2.386,259,2.386,260,2.235,261,2.386,262,2.386,263,2.386]],["title/interfaces/TemperatureData.html",[0,0.364,253,2.038]],["body/interfaces/TemperatureData.html",[0,0.656,2,1.045,3,0.152,4,0.133,5,0.133,7,1.141,8,0.439,9,1.142,10,1.313,18,1.567,19,0.846,20,0.017,21,2.412,22,0.279,33,1.304,41,1.523,42,2.33,43,2.269,49,2.073,50,0.008,51,0.011,52,0.008,55,1.498,57,2.049,238,2.049,239,2.326,240,3.173,241,2.79,242,2.326,243,2.557,244,3.406,245,2.326,246,2.326,247,2.634,248,2.634,249,2.326,250,2.326,251,1.934,252,2.326,253,3.406,254,2.326,255,2.966,256,2.966,257,2.326,258,2.326,259,2.326,260,2.178,261,2.326,262,2.326,263,2.326]],["title/interfaces/TimeSpan.html",[0,0.364,748,2.949]],["body/interfaces/TimeSpan.html",[0,0.502,2,1.435,3,0.209,4,0.183,5,0.183,8,0.603,9,1.401,10,1.371,19,0.913,20,0.016,22,0.209,49,2.436,50,0.011,51,0.014,52,0.011,748,4.953,749,4.546,750,7.192,751,7.192]],["title/interfaces/TimeZone.html",[0,0.364,30,1.924]],["body/interfaces/TimeZone.html",[0,0.655,1,2.439,2,0.956,3,0.139,4,0.122,5,0.122,6,1.874,7,1.044,8,0.402,9,1.073,10,1.377,11,1.992,12,3.217,13,1.992,14,2.476,15,1.992,16,2.857,17,1.992,18,1.686,19,0.954,20,0.017,21,2.348,22,0.273,23,1.675,24,1.675,25,1.589,26,1.769,27,1.992,28,1.992,29,2.643,30,3.095,31,2.705,32,1.992,33,2.087,34,1.992,35,1.769,36,1.769,37,1.769,38,2.857,39,1.675,40,2.516,41,0.838,42,1.14,43,1.248,44,3.279,45,1.532,46,3.485,47,3.485,48,3.485,49,1.842,50,0.008,51,0.011,52,0.008]],["title/components/WeatherComponent.html",[59,0.995,105,1.564]],["body/components/WeatherComponent.html",[3,0.154,4,0.134,5,0.134,8,0.444,20,0.017,22,0.154,45,1.314,50,0.008,51,0.011,52,0.008,59,1.558,60,1.59,61,1.637,62,1.956,63,1.956,64,1.956,65,1.956,67,1.956,68,3.749,69,3.549,71,2.654,73,2.654,76,2.126,77,1.637,81,0.642,82,0.706,83,0.582,84,1.261,85,2.654,86,2.654,87,1.956,88,3.231,89,1.956,90,1.956,91,1.154,92,1.956,93,1.515,94,1.956,95,1.515,96,1.956,97,1.59,98,1.956,99,1.515,100,1.956,101,1.59,102,1.956,103,1.59,104,1.956,105,2.626,106,3.197,107,1.956,108,1.956,191,1.873,201,1.381,202,1.757,274,2.384,275,3.191,280,3.422,530,4.067,752,3.349,753,5.977,754,5.266,755,3.882,756,3.882]],["title/modules/WeatherModule.html",[109,0.952,714,2.485]],["body/modules/WeatherModule.html",[3,0.161,4,0.141,5,0.141,20,0.017,22,0.161,50,0.009,51,0.012,52,0.009,61,1.903,81,1.012,82,0.74,83,0.609,84,1.322,91,2.188,105,2.226,109,1.015,111,1.943,112,1.842,113,3.085,114,1.941,115,2.74,116,2.177,123,2.74,124,2.05,125,1.75,127,2.025,130,2.025,159,1.933,342,3.332,343,3.332,355,2.902,356,2.05,714,4.944,757,4.068,758,4.068,759,4.068,760,4.068,761,3.142,762,4.068]],["title/injectables/WeatherService.html",[184,1.822,348,2.485]],["body/injectables/WeatherService.html",[3,0.173,4,0.151,5,0.151,8,0.498,10,1.084,18,1.242,19,0.809,20,0.017,22,0.173,45,1.419,50,0.009,51,0.012,52,0.009,55,2.22,76,1.549,77,1.767,81,1.152,82,0.792,83,0.653,129,2.639,162,3.364,173,4.067,177,3.191,184,2.713,186,3.07,191,2.023,192,2.639,195,3.758,197,2.713,198,4.392,199,3.07,201,1.549,213,2.472,216,3.07,217,3.364,218,3.07,220,2.639,348,3.701,373,2.639,622,5.462,623,5.79,629,3.07,630,3.758,635,3.07,763,3.758,764,4.355,765,5.686,766,4.355,767,4.355,768,4.355]],["title/coverage.html",[769,4.493]],["body/coverage.html",[0,0.689,1,1.477,5,0.075,6,3.132,7,2.11,19,0.309,20,0.017,23,1.036,29,0.934,30,1.095,31,1.036,38,1.095,40,1.406,50,0.005,51,0.007,52,0.005,54,2.419,55,1.34,59,1.632,60,0.889,61,1.823,66,1.873,83,0.514,91,0.646,93,0.848,95,0.848,97,0.889,99,0.848,101,0.889,103,0.889,105,0.889,111,1.744,173,1.316,175,1.873,176,1.873,184,2.031,185,1.159,187,1.873,208,1.232,214,2.419,215,2.651,238,2.991,240,1.159,241,1.159,243,1.477,244,1.159,253,1.159,264,1.316,265,3,273,1.873,323,6.762,345,1.413,346,1.413,347,1.413,348,1.413,349,2.651,359,2.419,361,1.531,378,1.873,379,1.677,384,1.531,394,1.677,395,1.873,439,1.873,474,2.651,524,1.873,537,2.651,543,1.873,598,2.651,605,1.873,611,1.531,612,1.873,613,1.873,618,1.677,620,1.873,635,2.419,643,1.873,644,2.651,661,1.873,674,1.873,715,2.651,723,1.873,728,1.873,745,2.651,748,1.677,749,1.873,752,1.873,761,2.651,763,1.873,769,1.873,770,2.172,771,2.172,772,2.172,773,6.979,774,3.433,775,7.34,776,7.371,777,4.257,778,5.866,779,4.257,780,3.433,781,2.172,782,2.172,783,2.172,784,2.172,785,4.173,786,2.961,787,4.173,788,2.961,789,1.873,790,2.172,791,2.172]],["title/dependencies.html",[112,2.078,792,3.19]],["body/dependencies.html",[20,0.017,50,0.01,51,0.013,52,0.01,82,0.827,112,2.058,114,2.169,132,5.043,133,4.515,158,2.291,213,2.58,356,2.291,419,3.921,420,3.921,581,3.921,692,3.511,793,4.545,794,6.486,795,4.545,796,4.545,797,4.545,798,4.545,799,4.545,800,4.545,801,4.545,802,4.545,803,4.545,804,4.545,805,4.545,806,4.545,807,4.545,808,4.545,809,4.545,810,4.545,811,4.545,812,4.545,813,4.545,814,4.545,815,5.846,816,4.545,817,4.545,818,4.545,819,4.545,820,4.545,821,4.545,822,4.545,823,4.545]],["title/miscellaneous/enumerations.html",[824,2.248,825,3.961]],["body/miscellaneous/enumerations.html",[7,1.955,8,0.473,20,0.017,29,2.362,35,2.767,41,1.848,42,1.784,50,0.009,51,0.012,52,0.009,54,2.911,55,2.144,56,4.24,58,4.24,106,2.62,139,3.87,142,3.87,145,3.327,224,4.737,238,2.205,255,3.116,256,3.116,264,3.327,824,2.911,825,3.563,826,4.13,827,5.49,828,4.13,829,5.49,830,5.49,831,5.49,832,5.49,833,4.13,834,4.13,835,4.13,836,5.49,837,5.49,838,4.13,839,5.49,840,4.737,841,5.49,842,4.737,843,5.49,844,5.49,845,5.49,846,5.49]],["title/index.html",[8,0.365,665,2.752,847,3.19]],["body/index.html",[4,0.144,20,0.012,24,1.977,42,1.788,44,2.212,45,1.033,50,0.009,51,0.012,52,0.009,59,1.61,69,1.977,80,5.329,125,1.782,208,2.351,285,3.199,314,2.92,525,3.574,794,3.574,848,5.502,849,4.142,850,6.177,851,6.177,852,7.042,853,4.142,854,4.142,855,4.142,856,4.142,857,4.142,858,4.142,859,5.502,860,7.185,861,4.142,862,4.142,863,4.142,864,4.142,865,4.142,866,4.142,867,4.142,868,4.142,869,4.142,870,6.177,871,6.177,872,4.142,873,6.85,874,4.142,875,4.142,876,4.142,877,4.142,878,4.142,879,4.142,880,3.574,881,5.502,882,6.581,883,4.142,884,5.502,885,5.502,886,4.142,887,6.581,888,4.142,889,4.142,890,4.142,891,6.177,892,4.142,893,4.142,894,4.142,895,3.199,896,4.142,897,4.142,898,4.142]],["title/modules.html",[111,1.549]],["body/modules.html",[20,0.013,50,0.01,51,0.013,52,0.01,110,3.292,111,1.389,121,3.04,122,3.04,133,5.78,342,2.114,343,2.114,344,3.04,468,3.292,473,3.04,481,2.651,531,3.292,536,3.04,597,3.04,708,3.292,713,3.04,714,3.04,899,7.483,900,7.483,901,7.796,902,7.392,903,7.392]],["title/overview.html",[895,4.022]],["body/overview.html",[2,0.664,20,0.017,50,0.005,51,0.008,52,0.005,53,1.586,60,2.508,61,0.757,84,0.792,91,2.225,109,0.608,110,4.572,111,0.725,112,1.103,113,1.228,114,1.163,115,1.228,116,0.867,117,2.103,118,2.103,119,2.103,120,2.103,121,2.983,122,4.852,123,1.893,124,1.228,125,1.049,157,1.228,174,1.882,185,2.447,186,1.718,337,2.103,338,2.103,339,2.103,340,2.103,341,2.103,342,3.49,343,3.479,344,2.983,345,2.983,346,2.983,347,2.983,348,2.983,468,4.884,469,2.103,472,2.103,473,2.983,481,3.157,531,4.884,532,2.103,535,2.103,536,2.983,593,2.103,595,2.103,597,2.983,618,1.882,708,5.067,709,2.103,710,2.103,713,2.983,714,4.453,895,1.882,904,2.437,905,2.437,906,2.437,907,2.437,908,2.437,909,2.437]],["title/routes.html",[157,2.625]],["body/routes.html",[20,0.015,50,0.013,51,0.015,52,0.013,157,3.075]],["title/miscellaneous/variables.html",[824,2.248,910,3.961]],["body/miscellaneous/variables.html",[8,0.282,18,0.828,19,1.063,20,0.017,31,1.81,36,1.912,37,1.912,41,1.776,50,0.005,51,0.008,52,0.005,55,1.481,61,2.183,79,3.971,91,0.734,93,0.964,95,0.964,97,1.011,99,0.964,101,1.011,103,1.011,105,1.011,111,2.089,214,3.654,215,4.004,289,2.129,342,1.117,343,1.117,349,1.906,372,2.929,379,2.929,474,1.906,537,1.906,598,1.906,635,3.654,715,1.906,745,1.906,761,1.906,785,2.129,786,4.473,787,2.129,788,2.129,789,3.272,824,1.74,840,3.272,842,3.272,880,3.272,910,2.129,911,5.184,912,5.184,913,3.793,914,3.793,915,3.793,916,3.793,917,3.793,918,3.793,919,3.793,920,3.793,921,3.793,922,3.793,923,3.793,924,3.793,925,3.793,926,5.906,927,3.793,928,3.793,929,3.793,930,3.793,931,3.793,932,3.793,933,3.793,934,3.793,935,3.793,936,3.793,937,3.793,938,3.793,939,3.793,940,3.793,941,3.793,942,3.793,943,3.793,944,3.793,945,2.468,946,2.468,947,2.468]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":323,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":588,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.9",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":463,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":53,"title":{"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Imperial-1.html":{},"interfaces/Temperature-1.html":{}},"body":{"overview.html":{}}}],["1.1.1",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":312,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["100",{"_index":461,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["100vh",{"_index":317,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":329,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":584,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11.0.0",{"_index":794,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.3.1",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["13.2.1",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":904,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":335,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["2",{"_index":907,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":313,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["200ms",{"_index":591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["21",{"_index":908,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":739,"title":{},"body":{"components/SidenavComponent.html":{}}}],["25px",{"_index":462,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["3",{"_index":906,"title":{},"body":{"overview.html":{}}}],["3.6.0",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["300ms",{"_index":738,"title":{},"body":{"components/SidenavComponent.html":{}}}],["32.109333",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.855499",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":460,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["400px",{"_index":456,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["4c87",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":569,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6.6.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7",{"_index":909,"title":{},"body":{"overview.html":{}}}],["868c",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":905,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":465,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["action",{"_index":583,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actions",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":626,"title":{},"body":{"guards/LocationResolver.html":{}}}],["actual_component",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["administrativearea",{"_index":1,"title":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["aes",{"_index":417,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.decrypt(ciphertext",{"_index":425,"title":{},"body":{"classes/Encoding.html":{}}}],["aes.encrypt(value",{"_index":422,"title":{},"body":{"classes/Encoding.html":{}}}],["afa5425d",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["afd9",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":565,"title":{},"body":{"components/HeaderComponent.html":{}}}],["amd",{"_index":703,"title":{},"body":{"components/SearchComponent.html":{}}}],["amount",{"_index":311,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["angular",{"_index":850,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":356,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["angular/compiler",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":692,"title":{},"body":{"components/SearchComponent.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"modules/SearchRoutingModule.html":{},"dependencies.html":{}}}],["apikey",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":60,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apple",{"_index":701,"title":{},"body":{"components/SearchComponent.html":{}}}],["application",{"_index":285,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{},"index.html":{}}}],["application/json",{"_index":657,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["applicationservice",{"_index":185,"title":{"injectables/ApplicationService.html":{}},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":110,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":121,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":173,"title":{"classes/AppSettings.html":{}},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["args",{"_index":198,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["array",{"_index":393,"title":{},"body":{"injectables/ContextService.html":{}}}],["artifacts",{"_index":874,"title":{},"body":{"index.html":{}}}],["atob(value",{"_index":424,"title":{},"body":{"classes/Encoding.html":{}}}],["authreq",{"_index":658,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["auto",{"_index":333,"title":{},"body":{"components/ContainerComponent.html":{}}}],["autocomplete",{"_index":55,"title":{"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{}},"body":{"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["autocomplete(search",{"_index":765,"title":{},"body":{"injectables/WeatherService.html":{}}}],["autocompletemodule",{"_index":485,"title":{},"body":{"modules/FeatureModule.html":{}}}],["automatically",{"_index":865,"title":{},"body":{"index.html":{}}}],["available",{"_index":903,"title":{},"body":{"modules.html":{}}}],["aviv",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awesome",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":305,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["basemodel",{"_index":607,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["baseurl",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":321,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["black",{"_index":458,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["boolean",{"_index":33,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{}}}],["bootstrap",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":585,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bottom",{"_index":467,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["browse",{"_index":901,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":579,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":592,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btoa(value",{"_index":421,"title":{},"body":{"classes/Encoding.html":{}}}],["build",{"_index":873,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":487,"title":{},"body":{"modules/FeatureModule.html":{}}}],["c",{"_index":256,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"miscellaneous/enumerations.html":{}}}],["calc(#{$navbar",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caption",{"_index":457,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carousel",{"_index":452,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["carouselmodule",{"_index":489,"title":{},"body":{"modules/FeatureModule.html":{}}}],["category",{"_index":261,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["center",{"_index":567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["change",{"_index":867,"title":{},"body":{"index.html":{}}}],["check",{"_index":894,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":491,"title":{},"body":{"modules/FeatureModule.html":{}}}],["children",{"_index":479,"title":{},"body":{"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["ciphertext",{"_index":406,"title":{},"body":{"classes/Encoding.html":{}}}],["city",{"_index":58,"title":{},"body":{"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"miscellaneous/enumerations.html":{}}}],["class",{"_index":83,"title":{"classes/AppSettings.html":{},"classes/Encoding.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/AppSettings.html":{},"classes/Encoding.html":{},"overview.html":{}}}],["cli",{"_index":851,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["client_id",{"_index":214,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Encoding.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":188,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["cluster_appmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":337,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":339,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_exports",{"_index":338,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_imports",{"_index":341,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":340,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule",{"_index":469,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_favoritesmodule_declarations",{"_index":471,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_exports",{"_index":470,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["cluster_favoritesmodule_imports",{"_index":472,"title":{},"body":{"modules/FavoritesModule.html":{},"overview.html":{}}}],["cluster_forecastmodule",{"_index":532,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_forecastmodule_declarations",{"_index":534,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_exports",{"_index":533,"title":{},"body":{"modules/ForecastModule.html":{}}}],["cluster_forecastmodule_imports",{"_index":535,"title":{},"body":{"modules/ForecastModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":593,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":596,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_exports",{"_index":594,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_headermodule_imports",{"_index":595,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":709,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":711,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":712,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":710,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_sidenavmodule",{"_index":741,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":744,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_exports",{"_index":743,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_sidenavmodule_imports",{"_index":742,"title":{},"body":{"modules/SidenavModule.html":{}}}],["cluster_weathermodule",{"_index":757,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_declarations",{"_index":758,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_exports",{"_index":759,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_imports",{"_index":760,"title":{},"body":{"modules/WeatherModule.html":{}}}],["code",{"_index":44,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"index.html":{}}}],["codedoc",{"_index":856,"title":{},"body":{"index.html":{}}}],["color",{"_index":453,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["colortheme",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["colortheme.light",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationService.html":{}}}],["column",{"_index":332,"title":{},"body":{"components/ContainerComponent.html":{}}}],["command",{"_index":896,"title":{},"body":{"index.html":{}}}],["common.scss",{"_index":304,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["common/interceptors/request",{"_index":358,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/interceptors/response",{"_index":360,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/resolvers/location.resolver",{"_index":362,"title":{},"body":{"modules/ContainerModule.html":{}}}],["common/services/application.service",{"_index":292,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{}}}],["commonmodule",{"_index":355,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["component",{"_index":59,"title":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":264,"title":{"interfaces/Conditions.html":{}},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["config",{"_index":734,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(`request",{"_index":670,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["console.log(event",{"_index":699,"title":{},"body":{"components/SearchComponent.html":{}}}],["const",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"classes/Encoding.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["constants/color",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["constants/data",{"_index":386,"title":{},"body":{"injectables/ContextService.html":{}}}],["constants/panel",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(application",{"_index":282,"title":{},"body":{"components/ContainerComponent.html":{},"guards/LocationResolver.html":{}}}],["constructor(args",{"_index":195,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/WeatherService.html":{}}}],["constructor(config",{"_index":732,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(private",{"_index":220,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/FeatureModule.html":{},"guards/LocationResolver.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["container",{"_index":276,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["container.component.html",{"_index":278,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":277,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":363,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":364,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["container/feature.module",{"_index":599,"title":{},"body":{"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{}}}],["container/header/header",{"_index":600,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.component",{"_index":601,"title":{},"body":{"modules/HeaderModule.html":{}}}],["container/header/header.module",{"_index":365,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/settings/settings.component",{"_index":746,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":747,"title":{},"body":{"modules/SidenavModule.html":{}}}],["container/sidenav/sidenav.module",{"_index":366,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":91,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":122,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutes",{"_index":376,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["containerroutingmodule",{"_index":344,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["content",{"_index":319,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["context",{"_index":379,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextservice",{"_index":345,"title":{"injectables/ContextService.html":{}},"body":{"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"coverage.html":{},"overview.html":{}}}],["countries",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["country",{"_index":29,"title":{"interfaces/Country.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["countryid",{"_index":11,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["coverage",{"_index":769,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crypto",{"_index":419,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["currentconditions",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentconditions/v1",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentdate",{"_index":547,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentroute",{"_index":279,"title":{},"body":{"components/ContainerComponent.html":{}}}],["d",{"_index":561,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dailyforecast",{"_index":241,"title":{"interfaces/DailyForecast.html":{}},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"coverage.html":{}}}],["dailyforecasts",{"_index":239,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["dark",{"_index":836,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["datasets",{"_index":35,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":49,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{}}}],["date.now",{"_index":666,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["day",{"_index":244,"title":{"interfaces/Day.html":{}},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"coverage.html":{}}}],["declarations",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decodebase64",{"_index":396,"title":{},"body":{"classes/Encoding.html":{}}}],["decodebase64(value",{"_index":402,"title":{},"body":{"classes/Encoding.html":{}}}],["decoded",{"_index":431,"title":{},"body":{"classes/Encoding.html":{}}}],["decryptaes",{"_index":397,"title":{},"body":{"classes/Encoding.html":{}}}],["decryptaes(ciphertext",{"_index":404,"title":{},"body":{"classes/Encoding.html":{}}}],["default",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["default_location",{"_index":215,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IDictionary.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":862,"title":{},"body":{"index.html":{}}}],["development",{"_index":858,"title":{},"body":{"index.html":{}}}],["df144bdb3b49",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direction",{"_index":331,"title":{},"body":{"components/ContainerComponent.html":{}}}],["directive",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":872,"title":{},"body":{"index.html":{}}}],["directory",{"_index":877,"title":{},"body":{"index.html":{}}}],["display",{"_index":314,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["dist",{"_index":876,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["dropdownmodule",{"_index":493,"title":{},"body":{"modules/FeatureModule.html":{}}}],["dynamic",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":888,"title":{},"body":{"index.html":{}}}],["ease",{"_index":590,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["eeee",{"_index":559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["effectivedate",{"_index":257,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["effectiveepochdate",{"_index":258,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["elapsed",{"_index":669,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["element",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["elevation",{"_index":38,"title":{"interfaces/Elevation.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["enc",{"_index":418,"title":{},"body":{"classes/Encoding.html":{}}}],["encodebase64",{"_index":398,"title":{},"body":{"classes/Encoding.html":{}}}],["encodebase64(value",{"_index":408,"title":{},"body":{"classes/Encoding.html":{}}}],["encoded",{"_index":429,"title":{},"body":{"classes/Encoding.html":{}}}],["encoding",{"_index":394,"title":{"classes/Encoding.html":{}},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["encryptaes",{"_index":399,"title":{},"body":{"classes/Encoding.html":{}}}],["encryptaes(value",{"_index":410,"title":{},"body":{"classes/Encoding.html":{}}}],["encrypted",{"_index":427,"title":{},"body":{"classes/Encoding.html":{}}}],["end",{"_index":887,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":262,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["endepochdate",{"_index":263,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["endpoints",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["englishname",{"_index":12,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["englishtype",{"_index":13,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["enum",{"_index":57,"title":{},"body":{"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["enumerations",{"_index":825,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":216,"title":{},"body":{"injectables/ApplicationService.html":{},"classes/Encoding.html":{},"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["environment",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epochdate",{"_index":242,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["epochtime",{"_index":266,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{}}}],["event",{"_index":296,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["event.ts",{"_index":613,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":299,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eventemitter",{"_index":552,"title":{},"body":{"components/HeaderComponent.html":{}}}],["execute",{"_index":884,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["extend",{"_index":562,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["f",{"_index":255,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"miscellaneous/enumerations.html":{}}}],["fa",{"_index":580,"title":{},"body":{"components/HeaderComponent.html":{}}}],["failure",{"_index":234,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["false",{"_index":289,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["favorites",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["favorites'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["favorites.component.html",{"_index":441,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.scss",{"_index":440,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites/favorites",{"_index":475,"title":{},"body":{"modules/FavoritesModule.html":{}}}],["favorites/favorites.component",{"_index":476,"title":{},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{}}}],["favoritescomponent",{"_index":93,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritesmodule",{"_index":468,"title":{"modules/FavoritesModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules.html":{},"overview.html":{}}}],["favoritesroutes",{"_index":478,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["favoritesroutingmodule",{"_index":473,"title":{"modules/FavoritesRoutingModule.html":{}},"body":{"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["featuremodule",{"_index":481,"title":{"modules/FeatureModule.html":{}},"body":{"modules/FeatureModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules.html":{},"overview.html":{}}}],["fieldsetmodule",{"_index":495,"title":{},"body":{"modules/FeatureModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["files",{"_index":868,"title":{},"body":{"index.html":{}}}],["finaldate",{"_index":750,"title":{},"body":{"interfaces/TimeSpan.html":{}}}],["first",{"_index":444,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["flag",{"_index":879,"title":{},"body":{"index.html":{}}}],["flex",{"_index":315,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["focusevent",{"_index":617,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["font",{"_index":581,"title":{},"body":{"components/HeaderComponent.html":{},"dependencies.html":{}}}],["foreach(key",{"_index":391,"title":{},"body":{"injectables/ContextService.html":{}}}],["forecast",{"_index":525,"title":{},"body":{"components/ForecastComponent.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["forecast.component.html",{"_index":527,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.component.scss",{"_index":526,"title":{},"body":{"components/ForecastComponent.html":{}}}],["forecast.web.app",{"_index":855,"title":{},"body":{"index.html":{}}}],["forecast.web.app/docs",{"_index":857,"title":{},"body":{"index.html":{}}}],["forecast/forecast",{"_index":538,"title":{},"body":{"modules/ForecastModule.html":{}}}],["forecast/forecast.component",{"_index":539,"title":{},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{}}}],["forecastcomponent",{"_index":95,"title":{"components/ForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecastmodule",{"_index":531,"title":{"modules/ForecastModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules.html":{},"overview.html":{}}}],["forecastroutes",{"_index":541,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["forecastroutingmodule",{"_index":536,"title":{"modules/ForecastRoutingModule.html":{}},"body":{"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["forecasts",{"_index":840,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecasts/v1/daily/5day",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":690,"title":{},"body":{"components/SearchComponent.html":{}}}],["formgroup",{"_index":688,"title":{},"body":{"components/SearchComponent.html":{}}}],["forroot",{"_index":351,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":352,"title":{},"body":{"modules/ContainerModule.html":{}}}],["fromstorage",{"_index":400,"title":{},"body":{"classes/Encoding.html":{}}}],["fromstorage(key",{"_index":412,"title":{},"body":{"classes/Encoding.html":{}}}],["fsevents",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":890,"title":{},"body":{"index.html":{}}}],["generate",{"_index":870,"title":{},"body":{"index.html":{}}}],["generated",{"_index":849,"title":{},"body":{"index.html":{}}}],["geolocation",{"_index":183,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["geoposition",{"_index":31,"title":{"interfaces/GeoPosition.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentposition",{"_index":229,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["getting",{"_index":847,"title":{"index.html":{}},"body":{}}],["getuserlocation",{"_index":193,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["gmapmodule",{"_index":497,"title":{},"body":{"modules/FeatureModule.html":{}}}],["gmtoffset",{"_index":46,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["go",{"_index":893,"title":{},"body":{"index.html":{}}}],["gradient(to",{"_index":307,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["graph",{"_index":902,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":618,"title":{"guards/LocationResolver.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":619,"title":{},"body":{"guards/LocationResolver.html":{}}}],["guid",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["hasprecipitation",{"_index":251,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["header",{"_index":544,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["header.component.html",{"_index":546,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":545,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":97,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headermodule",{"_index":342,"title":{"modules/HeaderModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["headerroutes",{"_index":603,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["headerroutingmodule",{"_index":597,"title":{"modules/HeaderRoutingModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["headers",{"_index":654,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["headline",{"_index":240,"title":{"interfaces/Headline.html":{}},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"coverage.html":{}}}],["height",{"_index":316,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":891,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":217,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"injectables/WeatherService.html":{}}}],["helpers/dictionary",{"_index":388,"title":{},"body":{"injectables/ContextService.html":{}}}],["helpers/geolocation",{"_index":219,"title":{},"body":{"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["helpers/search",{"_index":693,"title":{},"body":{"components/SearchComponent.html":{}}}],["herolo",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["hidden",{"_index":326,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hide",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":622,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["http://dataservice.accuweather.com",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":864,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":357,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":623,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{}}}],["httpevent",{"_index":652,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":649,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":653,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":648,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":664,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["https://www.accuweather.com/images/weathericons",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ibm",{"_index":704,"title":{},"body":{"components/SearchComponent.html":{}}}],["icon",{"_index":249,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["iconphrase",{"_index":250,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["icons",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["identifier",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["idictionary",{"_index":384,"title":{"interfaces/IDictionary.html":{}},"body":{"injectables/ContextService.html":{},"interfaces/IDictionary.html":{},"coverage.html":{}}}],["image",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["imperial",{"_index":40,"title":{"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["implements",{"_index":274,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/IDictionary.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["import('./favorites/favorites.module').then(m",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./search/search.module').then(m",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/Headline.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":606,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["initcontext",{"_index":381,"title":{},"body":{"injectables/ContextService.html":{}}}],["initform",{"_index":679,"title":{},"body":{"components/SearchComponent.html":{}}}],["injectable",{"_index":184,"title":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":186,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["input",{"_index":736,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputevent",{"_index":616,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["inputs",{"_index":731,"title":{},"body":{"components/SidenavComponent.html":{}}}],["inputswitchmodule",{"_index":499,"title":{},"body":{"modules/FeatureModule.html":{}}}],["inputtextmodule",{"_index":501,"title":{},"body":{"modules/FeatureModule.html":{}}}],["instanceof",{"_index":298,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intel",{"_index":702,"title":{},"body":{"components/SearchComponent.html":{}}}],["intercept",{"_index":645,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":647,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":359,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":644,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:10",{"_index":663,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:6",{"_index":646,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptor.ts:7",{"_index":662,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["interceptor.ts:9",{"_index":650,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["interceptors",{"_index":642,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"overview.html":{}}}],["isalias",{"_index":32,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["isdaylightsaving",{"_index":47,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["isdaytime",{"_index":267,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{}}}],["isearchevent",{"_index":611,"title":{"interfaces/ISearchEvent.html":{}},"body":{"interfaces/ISearchEvent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["isloading",{"_index":190,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["item",{"_index":455,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["items",{"_index":566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["jquery",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":420,"title":{},"body":{"classes/Encoding.html":{},"dependencies.html":{}}}],["json.parse(decoded",{"_index":434,"title":{},"body":{"classes/Encoding.html":{}}}],["json.stringify(value",{"_index":438,"title":{},"body":{"classes/Encoding.html":{}}}],["justify",{"_index":318,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["karma",{"_index":886,"title":{},"body":{"index.html":{}}}],["key",{"_index":25,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"interfaces/GeoPosition.html":{},"interfaces/IDictionary.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["key).tostring",{"_index":423,"title":{},"body":{"classes/Encoding.html":{}}}],["key).tostring(enc.utf8",{"_index":426,"title":{},"body":{"classes/Encoding.html":{}}}],["keyfiltermodule",{"_index":503,"title":{},"body":{"modules/FeatureModule.html":{}}}],["label",{"_index":446,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["languages",{"_index":841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["latitude",{"_index":36,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":466,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["legend",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["level",{"_index":15,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["light",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighten($color",{"_index":310,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["linear",{"_index":306,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["link",{"_index":248,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["literal",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":853,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localizedname",{"_index":16,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["localizedtype",{"_index":17,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["localobservationdatetime",{"_index":268,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{}}}],["localstorage.getitem(key",{"_index":428,"title":{},"body":{"classes/Encoding.html":{}}}],["localstorage.setitem(key",{"_index":435,"title":{},"body":{"classes/Encoding.html":{}}}],["location",{"_index":23,"title":{"interfaces/Location.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["locationkey",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locationresolver",{"_index":361,"title":{"guards/LocationResolver.html":{}},"body":{"modules/ContainerModule.html":{},"guards/LocationResolver.html":{},"coverage.html":{}}}],["locations",{"_index":842,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["locations/v1",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locations/v1/cities/autocomplete",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locations/v1/cities/geoposition/search",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longitude",{"_index":37,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"injectables/ApplicationService.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"miscellaneous/variables.html":{}}}],["m.favoritesmodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.searchmodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":330,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["map",{"_index":632,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{}}}],["map(event",{"_index":668,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["map(x",{"_index":639,"title":{},"body":{"guards/LocationResolver.html":{}}}],["margin",{"_index":322,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":334,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["maximum",{"_index":254,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["media",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["menumodule",{"_index":505,"title":{},"body":{"modules/FeatureModule.html":{}}}],["metadata",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":191,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["metric",{"_index":39,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/TimeZone.html":{}}}],["microsoft",{"_index":705,"title":{},"body":{"components/SearchComponent.html":{}}}],["min",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{}}}],["minimum",{"_index":252,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["miscellaneous",{"_index":824,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mmmm",{"_index":560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mobilelink",{"_index":247,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["mode.enum",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["mode.enum.ts",{"_index":831,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["model",{"_index":610,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["model.ts",{"_index":7,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["models/base",{"_index":609,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["module",{"_index":109,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":111,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulewithproviders",{"_index":354,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":892,"title":{},"body":{"index.html":{}}}],["ms",{"_index":673,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["multi",{"_index":371,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":45,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["navbar",{"_index":564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigate",{"_index":863,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":291,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigator.geolocation",{"_index":228,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["new",{"_index":208,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":295,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next.handle(authreq",{"_index":660,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":667,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["nextoffsetchange",{"_index":48,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["ng",{"_index":860,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{}}}],["ngoninit",{"_index":280,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["ngx",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["night",{"_index":245,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["none",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{}}}],["null",{"_index":272,"title":{},"body":{"interfaces/Conditions.html":{},"classes/Encoding.html":{},"interfaces/Imperial.html":{},"guards/LocationResolver.html":{},"interfaces/Temperature.html":{}}}],["number",{"_index":21,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{}}}],["object",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(datasets",{"_index":390,"title":{},"body":{"injectables/ContextService.html":{}}}],["observable",{"_index":629,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["onchange",{"_index":380,"title":{},"body":{"injectables/ContextService.html":{}}}],["oninit",{"_index":275,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["onsearch",{"_index":680,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsearch(event",{"_index":685,"title":{},"body":{"components/SearchComponent.html":{}}}],["onsidenavtoggle",{"_index":281,"title":{},"body":{"components/ContainerComponent.html":{}}}],["onsubmit",{"_index":681,"title":{},"body":{"components/SearchComponent.html":{}}}],["opacity",{"_index":459,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"injectables/WeatherService.html":{}}}],["originalevent",{"_index":614,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["out",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":556,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":549,"title":{},"body":{"components/HeaderComponent.html":{}}}],["over",{"_index":844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":324,"title":{},"body":{"components/ContainerComponent.html":{}}}],["overview",{"_index":895,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":792,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":327,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":898,"title":{},"body":{"index.html":{}}}],["panelmode",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["panelmode.push",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["panelstate",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["panelstate.hide",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["panelstate.show",{"_index":303,"title":{},"body":{"components/ContainerComponent.html":{}}}],["parameters",{"_index":197,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["path",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["pathmatch",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":631,"title":{},"body":{"guards/LocationResolver.html":{}}}],["placeholder",{"_index":448,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["popper.js",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":464,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["precipitationtype",{"_index":269,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{}}}],["preview",{"_index":854,"title":{},"body":{"index.html":{}}}],["previous",{"_index":451,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["primary",{"_index":309,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["primarypostalcode",{"_index":27,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["primeflex",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":484,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/autocomplete",{"_index":486,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/button",{"_index":488,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/carousel",{"_index":490,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/checkbox",{"_index":492,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/dropdown",{"_index":494,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/fieldset",{"_index":496,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/gmap",{"_index":498,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputswitch",{"_index":500,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/inputtext",{"_index":502,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/keyfilter",{"_index":504,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/menu",{"_index":506,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/progressbar",{"_index":508,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/progressspinner",{"_index":510,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/radiobutton",{"_index":512,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/ripple",{"_index":514,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tabmenu",{"_index":516,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["primeng/toast",{"_index":518,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/togglebutton",{"_index":520,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primeng/tooltip",{"_index":522,"title":{},"body":{"modules/FeatureModule.html":{}}}],["primengconfig",{"_index":483,"title":{},"body":{"modules/FeatureModule.html":{}}}],["private",{"_index":192,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":878,"title":{},"body":{"index.html":{}}}],["production",{"_index":880,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressbarmodule",{"_index":507,"title":{},"body":{"modules/FeatureModule.html":{}}}],["progressspinnermodule",{"_index":509,"title":{},"body":{"modules/FeatureModule.html":{}}}],["project",{"_index":848,"title":{},"body":{"index.html":{}}}],["promise",{"_index":630,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/Headline.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"components/SearchComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{}}}],["protractor",{"_index":889,"title":{},"body":{"index.html":{}}}],["provide",{"_index":369,"title":{},"body":{"modules/ContainerModule.html":{}}}],["provider",{"_index":635,"title":{},"body":{"guards/LocationResolver.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["public",{"_index":177,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"injectables/WeatherService.html":{}}}],["push",{"_index":224,"title":{},"body":{"injectables/ApplicationService.html":{},"miscellaneous/enumerations.html":{}}}],["query",{"_index":615,"title":{},"body":{"interfaces/ISearchEvent.html":{}}}],["radiobuttonmodule",{"_index":511,"title":{},"body":{"modules/FeatureModule.html":{}}}],["radius",{"_index":587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rank",{"_index":26,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["reactiveformsmodule",{"_index":716,"title":{},"body":{"modules/SearchModule.html":{}}}],["readonly",{"_index":189,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{}}}],["redirectto",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":897,"title":{},"body":{"index.html":{}}}],["region",{"_index":28,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["reload",{"_index":866,"title":{},"body":{"index.html":{}}}],["representative",{"_index":447,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["req",{"_index":651,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":659,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.headers",{"_index":655,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.urlwithparams",{"_index":671,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["requestinterceptor",{"_index":346,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resolve",{"_index":621,"title":{},"body":{"guards/LocationResolver.html":{}}}],["resolve(route",{"_index":625,"title":{},"body":{"guards/LocationResolver.html":{}}}],["responseinterceptor",{"_index":347,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":50,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":373,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{}}}],["returns",{"_index":201,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["right",{"_index":568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ripplemodule",{"_index":513,"title":{},"body":{"modules/FeatureModule.html":{}}}],["root",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":628,"title":{},"body":{"guards/LocationResolver.html":{}}}],["router",{"_index":283,"title":{},"body":{"components/ContainerComponent.html":{}}}],["routermodule",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(containerroutes",{"_index":377,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["routermodule.forchild(favoritesroutes",{"_index":480,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["routermodule.forchild(forecastroutes",{"_index":542,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["routermodule.forchild(headerroutes",{"_index":604,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["routermodule.forchild(searchroutes",{"_index":722,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":157,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{}}}],["routing.module.ts",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/ForecastRoutingModule.html":{},"modules/HeaderRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["run",{"_index":852,"title":{},"body":{"index.html":{}}}],["running",{"_index":881,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":213,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":633,"title":{},"body":{"guards/LocationResolver.html":{},"interceptors/ResponseInterceptor.html":{}}}],["scaffolding",{"_index":869,"title":{},"body":{"index.html":{}}}],["screen",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{}}}],["search",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SearchComponent.html":{},"injectables/WeatherService.html":{}}}],["search'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["search.component.html",{"_index":676,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":675,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":717,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":718,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["searchcomponent",{"_index":99,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchform",{"_index":677,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchmodule",{"_index":708,"title":{"modules/SearchModule.html":{}},"body":{"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchroutes",{"_index":721,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["searchroutingmodule",{"_index":713,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["searchtype",{"_index":56,"title":{},"body":{"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"miscellaneous/enumerations.html":{}}}],["second",{"_index":449,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["secret",{"_index":407,"title":{},"body":{"classes/Encoding.html":{}}}],["selector",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":861,"title":{},"body":{"index.html":{}}}],["server",{"_index":859,"title":{},"body":{"index.html":{}}}],["services/application.service",{"_index":634,"title":{},"body":{"guards/LocationResolver.html":{},"components/SidenavComponent.html":{}}}],["services/context.service",{"_index":367,"title":{},"body":{"modules/ContainerModule.html":{}}}],["services/weather.service",{"_index":368,"title":{},"body":{"modules/ContainerModule.html":{}}}],["set('content",{"_index":656,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["sets.enum",{"_index":387,"title":{},"body":{"injectables/ContextService.html":{}}}],["sets.enum.ts",{"_index":829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settings",{"_index":218,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"components/SettingsComponent.html":{},"injectables/WeatherService.html":{}}}],["settings'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["settings.component.html",{"_index":725,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":724,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.ts",{"_index":176,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["settings.ts:6",{"_index":180,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:7",{"_index":181,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:8",{"_index":182,"title":{},"body":{"classes/AppSettings.html":{}}}],["settings.ts:9",{"_index":179,"title":{},"body":{"classes/AppSettings.html":{}}}],["settingscomponent",{"_index":101,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setuserlocation",{"_index":194,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["setuserlocation(location",{"_index":203,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["severity",{"_index":259,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["shadow",{"_index":563,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sidenav",{"_index":336,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["sidenav.component.html",{"_index":730,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":729,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.hide",{"_index":740,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.show",{"_index":737,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":103,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sidenavmode",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["sidenavmodule",{"_index":343,"title":{"modules/SidenavModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["sidenavstate",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenavstatechange",{"_index":550,"title":{},"body":{"components/HeaderComponent.html":{}}}],["size",{"_index":582,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slice().filter(x",{"_index":706,"title":{},"body":{"components/SearchComponent.html":{}}}],["slide",{"_index":445,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"modules/FavoritesModule.html":{},"modules/FavoritesRoutingModule.html":{},"modules/FeatureModule.html":{},"components/ForecastComponent.html":{},"modules/ForecastModule.html":{},"modules/ForecastRoutingModule.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"modules/HeaderRoutingModule.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"modules/SidenavModule.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["sources",{"_index":246,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["space",{"_index":320,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["spec\\.ts",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../container.module.ts",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorites.module.ts",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../forecast",{"_index":834,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../forecast.module.ts",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.module.ts",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../panel",{"_index":830,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search",{"_index":833,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../search.module.ts",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.module.ts",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.module.ts",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":375,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":273,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:12",{"_index":288,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:13",{"_index":290,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:14",{"_index":284,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:25",{"_index":286,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:26",{"_index":287,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":349,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:38",{"_index":353,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/feature.module.ts",{"_index":482,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/app/container/header/header",{"_index":602,"title":{},"body":{"modules/HeaderRoutingModule.html":{}}}],["src/app/container/header/header.component.ts",{"_index":543,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/container/header/header.component.ts:10",{"_index":551,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:12",{"_index":554,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:13",{"_index":555,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.component.ts:9",{"_index":553,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/container/header/header.module.ts",{"_index":598,"title":{},"body":{"modules/HeaderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts",{"_index":723,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:10",{"_index":727,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/settings/settings.component.ts:8",{"_index":726,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":728,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":733,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:13",{"_index":735,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.module.ts",{"_index":745,"title":{},"body":{"modules/SidenavModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/favorites/favorites",{"_index":477,"title":{},"body":{"modules/FavoritesRoutingModule.html":{}}}],["src/app/favorites/favorites.component.ts",{"_index":439,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/favorites/favorites.component.ts:10",{"_index":443,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.component.ts:8",{"_index":442,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/favorites/favorites.module.ts",{"_index":474,"title":{},"body":{"modules/FavoritesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/forecast/forecast",{"_index":540,"title":{},"body":{"modules/ForecastRoutingModule.html":{}}}],["src/app/forecast/forecast.component.ts",{"_index":524,"title":{},"body":{"components/ForecastComponent.html":{},"coverage.html":{}}}],["src/app/forecast/forecast.component.ts:10",{"_index":529,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.component.ts:8",{"_index":528,"title":{},"body":{"components/ForecastComponent.html":{}}}],["src/app/forecast/forecast.module.ts",{"_index":537,"title":{},"body":{"modules/ForecastModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":720,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":674,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:11",{"_index":689,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:12",{"_index":682,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:14",{"_index":684,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:15",{"_index":683,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:20",{"_index":686,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:30",{"_index":687,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":715,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/weather.component.ts",{"_index":752,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:10",{"_index":756,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:8",{"_index":755,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.module.ts",{"_index":761,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/constants/color",{"_index":835,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/data",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/constants/panel",{"_index":843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/app",{"_index":175,"title":{},"body":{"classes/AppSettings.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts",{"_index":605,"title":{},"body":{"interfaces/IDictionary.html":{},"coverage.html":{}}}],["src/common/helpers/dictionary.ts:3",{"_index":608,"title":{},"body":{"interfaces/IDictionary.html":{}}}],["src/common/helpers/encoding.ts",{"_index":395,"title":{},"body":{"classes/Encoding.html":{},"coverage.html":{}}}],["src/common/helpers/encoding.ts:11",{"_index":403,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:14",{"_index":405,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:17",{"_index":413,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:26",{"_index":416,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:5",{"_index":409,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/encoding.ts:8",{"_index":411,"title":{},"body":{"classes/Encoding.html":{}}}],["src/common/helpers/search",{"_index":612,"title":{},"body":{"interfaces/ISearchEvent.html":{},"coverage.html":{}}}],["src/common/helpers/timespan.ts",{"_index":749,"title":{},"body":{"interfaces/TimeSpan.html":{},"coverage.html":{}}}],["src/common/interceptors/request",{"_index":643,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":661,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/models/conditions",{"_index":265,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{},"coverage.html":{}}}],["src/common/models/forecast",{"_index":238,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/common/models/location",{"_index":6,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["src/common/models/search",{"_index":54,"title":{},"body":{"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/common/resolvers/location.resolver.ts",{"_index":620,"title":{},"body":{"guards/LocationResolver.html":{},"coverage.html":{}}}],["src/common/resolvers/location.resolver.ts:11",{"_index":624,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/resolvers/location.resolver.ts:13",{"_index":627,"title":{},"body":{"guards/LocationResolver.html":{}}}],["src/common/services/application.service.ts",{"_index":187,"title":{},"body":{"injectables/ApplicationService.html":{},"coverage.html":{}}}],["src/common/services/application.service.ts:12",{"_index":212,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:13",{"_index":209,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:14",{"_index":205,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:15",{"_index":206,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:16",{"_index":210,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:17",{"_index":211,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:18",{"_index":196,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:26",{"_index":200,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/application.service.ts:33",{"_index":204,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["src/common/services/context.service.ts",{"_index":378,"title":{},"body":{"injectables/ContextService.html":{},"coverage.html":{}}}],["src/common/services/context.service.ts:12",{"_index":383,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:8",{"_index":385,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/context.service.ts:9",{"_index":382,"title":{},"body":{"injectables/ContextService.html":{}}}],["src/common/services/weather.service.ts",{"_index":763,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/common/services/weather.service.ts:10",{"_index":766,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/common/services/weather.service.ts:8",{"_index":764,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/environments/environment.prod.ts",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["startdate",{"_index":751,"title":{},"body":{"interfaces/TimeSpan.html":{}}}],["started",{"_index":665,"title":{"index.html":{}},"body":{"interceptors/ResponseInterceptor.html":{}}}],["state.enum",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["state.enum.ts",{"_index":832,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":350,"title":{},"body":{"modules/ContainerModule.html":{},"classes/Encoding.html":{}}}],["stored",{"_index":875,"title":{},"body":{"index.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/IDictionary.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"components/SearchComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["string):promise",{"_index":767,"title":{},"body":{"injectables/WeatherService.html":{}}}],["styles",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["subject",{"_index":207,"title":{},"body":{"injectables/ApplicationService.html":{},"injectables/ContextService.html":{}}}],["subscribe",{"_index":301,"title":{},"body":{"components/ContainerComponent.html":{}}}],["success",{"_index":230,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.latitude",{"_index":232,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["success.coords.longitude",{"_index":233,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["suggestions",{"_index":678,"title":{},"body":{"components/SearchComponent.html":{}}}],["supplementaladminareas",{"_index":34,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{}}}],["support",{"_index":899,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":900,"title":{},"body":{"modules.html":{}}}],["t",{"_index":414,"title":{},"body":{"classes/Encoding.html":{}}}],["table",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["tabmenumodule",{"_index":515,"title":{},"body":{"modules/FeatureModule.html":{},"modules/SidenavModule.html":{}}}],["tel",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temperature",{"_index":243,"title":{"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{}},"body":{"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"coverage.html":{}}}],["temperaturedata",{"_index":253,"title":{"interfaces/TemperatureData.html":{}},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"coverage.html":{}}}],["template",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":883,"title":{},"body":{"index.html":{}}}],["tests",{"_index":882,"title":{},"body":{"index.html":{}}}],["text",{"_index":260,"title":{},"body":{"interfaces/AutoComplete.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"components/HeaderComponent.html":{},"interfaces/Headline.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{}}}],["theme.enum",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{}}}],["theme.enum.ts",{"_index":827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["third",{"_index":450,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["this.application",{"_index":638,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.isloading",{"_index":300,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.isloading$.next(true",{"_index":636,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.application.sidenavstate",{"_index":293,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.application.userlocation",{"_index":637,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.args.sidenavstate",{"_index":226,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.clientsecret",{"_index":221,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.colortheme",{"_index":222,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.context[key",{"_index":392,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.currentdate",{"_index":558,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.currentroute",{"_index":297,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.decodebase64(encoded",{"_index":432,"title":{},"body":{"classes/Encoding.html":{}}}],["this.decryptaes(encrypted",{"_index":430,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encodebase64",{"_index":437,"title":{},"body":{"classes/Encoding.html":{}}}],["this.encryptaes",{"_index":436,"title":{},"body":{"classes/Encoding.html":{}}}],["this.getuserlocation",{"_index":227,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.http.get(provider.accuweather.endpoints",{"_index":640,"title":{},"body":{"guards/LocationResolver.html":{}}}],["this.http.get(provider.accuweather.endpoints.locations",{"_index":768,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.initcontext",{"_index":389,"title":{},"body":{"injectables/ContextService.html":{}}}],["this.initform",{"_index":694,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.isloading",{"_index":302,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.primengconfig.ripple",{"_index":523,"title":{},"body":{"modules/FeatureModule.html":{}}}],["this.router.events.subscribe",{"_index":294,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.searchform",{"_index":695,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setuserlocation",{"_index":231,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.setuserlocation(default_location",{"_index":235,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavmode",{"_index":223,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.sidenavstate",{"_index":225,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{}}}],["this.sidenavstatechange.emit",{"_index":557,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.suggestions",{"_index":700,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.userlocation",{"_index":236,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["this.userlocation$.next(location",{"_index":237,"title":{},"body":{"injectables/ApplicationService.html":{}}}],["timespan",{"_index":748,"title":{"interfaces/TimeSpan.html":{}},"body":{"interfaces/TimeSpan.html":{},"coverage.html":{}}}],["timezone",{"_index":30,"title":{"interfaces/TimeZone.html":{}},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"coverage.html":{}}}],["title",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmodule",{"_index":517,"title":{},"body":{"modules/FeatureModule.html":{}}}],["toastr",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["togglebuttonmodule",{"_index":519,"title":{},"body":{"modules/FeatureModule.html":{}}}],["togglesidenav",{"_index":548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["took",{"_index":672,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["tooltipmodule",{"_index":521,"title":{},"body":{"modules/FeatureModule.html":{}}}],["top",{"_index":308,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tostorage",{"_index":401,"title":{},"body":{"classes/Encoding.html":{}}}],["tostorage(key",{"_index":415,"title":{},"body":{"classes/Encoding.html":{}}}],["transition",{"_index":589,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["transparent",{"_index":586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tree",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":372,"title":{},"body":{"modules/ContainerModule.html":{},"modules/FeatureModule.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"components/AppComponent.html":{},"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/Headline.html":{},"interfaces/ISearchEvent.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"guards/LocationResolver.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"components/SidenavComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeSpan.html":{},"interfaces/TimeZone.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":433,"title":{},"body":{"classes/Encoding.html":{}}}],["unit",{"_index":42,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["unittype",{"_index":43,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{}}}],["use",{"_index":871,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":370,"title":{},"body":{"modules/ContainerModule.html":{}}}],["userlocation",{"_index":178,"title":{},"body":{"classes/AppSettings.html":{},"injectables/ApplicationService.html":{},"guards/LocationResolver.html":{}}}],["usevalue",{"_index":374,"title":{},"body":{"modules/ContainerModule.html":{}}}],["validators",{"_index":691,"title":{},"body":{"components/SearchComponent.html":{}}}],["validators.pattern('[a",{"_index":696,"title":{},"body":{"components/SearchComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"components/AppComponent.html":{},"injectables/ApplicationService.html":{},"interfaces/AutoComplete.html":{},"interfaces/Conditions.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"interfaces/Country.html":{},"interfaces/DailyForecast.html":{},"interfaces/Day.html":{},"interfaces/Elevation.html":{},"classes/Encoding.html":{},"interfaces/GeoPosition.html":{},"components/HeaderComponent.html":{},"interfaces/Headline.html":{},"interfaces/Imperial.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"components/SidenavComponent.html":{},"interfaces/Temperature.html":{},"interfaces/Temperature-1.html":{},"interfaces/TemperatureData.html":{},"interfaces/TimeZone.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":910,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":24,"title":{},"body":{"interfaces/AdministrativeArea.html":{},"interfaces/AdministrativeArea-1.html":{},"interfaces/AutoComplete-1.html":{},"interfaces/Country.html":{},"interfaces/Elevation.html":{},"interfaces/GeoPosition.html":{},"interfaces/Imperial-1.html":{},"interfaces/Location.html":{},"interfaces/TimeZone.html":{},"index.html":{}}}],["via",{"_index":885,"title":{},"body":{"index.html":{}}}],["void",{"_index":202,"title":{},"body":{"injectables/ApplicationService.html":{},"components/ContainerComponent.html":{},"injectables/ContextService.html":{},"classes/Encoding.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{}}}],["weather",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"miscellaneous/enumerations.html":{}}}],["weather.component.html",{"_index":754,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":753,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather.component",{"_index":762,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.module",{"_index":719,"title":{},"body":{"modules/SearchModule.html":{}}}],["weathercomponent",{"_index":105,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/ForecastComponent.html":{},"components/HeaderComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"components/SidenavComponent.html":{},"components/WeatherComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weathericon",{"_index":270,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{}}}],["weathermodule",{"_index":714,"title":{"modules/WeatherModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherservice",{"_index":348,"title":{"injectables/WeatherService.html":{}},"body":{"modules/ContainerModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["weathertext",{"_index":271,"title":{},"body":{"interfaces/Conditions.html":{},"interfaces/Imperial.html":{},"interfaces/Temperature.html":{}}}],["white",{"_index":454,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{}}}],["width",{"_index":328,"title":{},"body":{"components/ContainerComponent.html":{},"components/FavoritesComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":530,"title":{},"body":{"components/ForecastComponent.html":{},"components/SettingsComponent.html":{},"components/WeatherComponent.html":{}}}],["x",{"_index":641,"title":{},"body":{"guards/LocationResolver.html":{}}}],["x.tolowercase().includes(event.query.tolowercase",{"_index":707,"title":{},"body":{"components/SearchComponent.html":{}}}],["y",{"_index":325,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["yes",{"_index":199,"title":{},"body":{"injectables/ApplicationService.html":{},"modules/ContainerModule.html":{},"classes/Encoding.html":{},"injectables/WeatherService.html":{}}}],["yly5qjrddu1jmhu1r0d6a0xbavvizxrpv29mnzbyb3k",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":698,"title":{},"body":{"components/SearchComponent.html":{}}}],["za",{"_index":697,"title":{},"body":{"components/SearchComponent.html":{}}}],["zone.js",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/FavoritesModule.html":{},"modules/ForecastModule.html":{},"modules/HeaderModule.html":{},"modules/SearchModule.html":{},"modules/SidenavModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdministrativeArea.html":{"url":"interfaces/AdministrativeArea.html","title":"interface - AdministrativeArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        countryId\n                                \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        englishType\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        level\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        localizedType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryId\n                                    \n                                \n                                \n                                    \n                                        countryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishType\n                                    \n                                \n                                \n                                    \n                                        englishType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedType\n                                    \n                                \n                                \n                                    \n                                        localizedType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdministrativeArea-1.html":{"url":"interfaces/AdministrativeArea-1.html","title":"interface - AdministrativeArea-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdministrativeArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/search-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  version?:            number;\n  key?:                string;\n  type?:               SearchType;\n  rank?:               number;\n  localizedName?:      string;\n  country?:            AdministrativeArea;\n  administrativeArea?: AdministrativeArea;\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n}\n\nexport enum SearchType {\n  City = \"City\",\n  Country = \"Country\",\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Herolo'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herolo';\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule } from '@client/app-routing.module'\nimport { AppComponent } from '@client/app.component'\nimport { ColorTheme } from '@constants/color-theme.enum'\nimport { PanelMode } from '@constants/panel-mode.enum'\nimport { PanelState } from '@constants/panel-state.enum'\nimport { ContainerModule } from '@container/container.module'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ContainerModule.forRoot({\n      colorTheme: ColorTheme.Light,\n      sidenavMode: PanelMode.Push,\n      sidenavState: PanelState.Hide,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const AppRoutes: Routes = [\n  { path: 'search', loadChildren: () => \"import('./search/search.module').then(m => m.SearchModule)\" },\n  { path: 'favorites', loadChildren: () => \"import('./favorites/favorites.module').then(m => m.FavoritesModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'search' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppSettings.html":{"url":"classes/AppSettings.html","title":"class - AppSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/app-settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                colorTheme\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavMode\n                            \n                            \n                                    Public\n                                    Optional\n                                sidenavState\n                            \n                            \n                                    Public\n                                    Optional\n                                userLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            colorTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Geolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/helpers/app-settings.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColorTheme } from '@constants/color-theme.enum'\nimport { PanelMode } from '@constants/panel-mode.enum'\nimport { PanelState } from '@constants/panel-state.enum'\n\nexport class AppSettings {\n  public colorTheme  ?: ColorTheme ;\n  public sidenavMode ?: PanelMode  ;\n  public sidenavState?: PanelState ;\n  public userLocation?: Geolocation;\n  constructor() { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationService.html":{"url":"injectables/ApplicationService.html","title":"injectable - ApplicationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/application.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientSecret\n                            \n                            \n                                    Public\n                                colorTheme\n                            \n                            \n                                    Public\n                                    Readonly\n                                isLoading$\n                            \n                            \n                                    Public\n                                sidenavMode\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                            \n                                    Public\n                                userLocation\n                            \n                            \n                                    Public\n                                    Readonly\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUserLocation\n                            \n                            \n                                    Private\n                                setUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLocation(location: Geolocation)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/application.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                            Geolocation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientSecret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colorTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorTheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            isLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Geolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/application.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject                       } from 'rxjs'\nimport { Injectable                    } from '@angular/core'\nimport { ColorTheme                    } from '@constants/color-theme.enum'\nimport { PanelMode                     } from '@constants/panel-mode.enum'\nimport { PanelState                    } from '@constants/panel-state.enum'\nimport { CLIENT_ID  , DEFAULT_LOCATION } from '@env/environment'\nimport { AppSettings                   } from '@helpers/app-settings'\nimport { Geolocation                   } from '@helpers/geolocation'\n\n@Injectable()\nexport class ApplicationService {\n  public readonly userLocation$: Subject = new Subject();\n  public readonly isLoading$: Subject = new Subject();\n  public clientSecret: string     ;\n  public colorTheme  : ColorTheme ;\n  public sidenavMode : PanelMode  ;\n  public sidenavState: PanelState ;\n  public userLocation: Geolocation;\n  constructor(private args?: AppSettings) {\n    this.clientSecret = CLIENT_ID       ;\n    this.colorTheme   = ColorTheme.Light;\n    this.sidenavMode  = PanelMode .Push ;\n    this.sidenavState = this.args.sidenavState;\n    this.getUserLocation();\n  }\n  private getUserLocation() {\n    navigator.geolocation\n      .getCurrentPosition(\n        (success) => this.setUserLocation({ latitude: success.coords.latitude, longitude: success.coords.longitude }),\n        (failure) => this.setUserLocation(DEFAULT_LOCATION)\n      );\n  }\n  private setUserLocation(location: Geolocation) {\n    this.userLocation = location;\n    this.userLocation$.next(location);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoComplete.html":{"url":"interfaces/AutoComplete.html","title":"interface - AutoComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dailyForecasts\n                                \n                                \n                                            Optional\n                                        headline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dailyForecasts\n                                    \n                                \n                                \n                                    \n                                        dailyForecasts:         DailyForecast[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DailyForecast[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headline\n                                    \n                                \n                                \n                                    \n                                        headline:         Headline\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Headline\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  headline?:       Headline;\n  dailyForecasts?: DailyForecast[];\n}\n\nexport interface DailyForecast {\n  date?:        Date;\n  epochDate?:   number;\n  temperature?: Temperature;\n  day?:         Day;\n  night?:       Day;\n  sources?:     string[];\n  mobileLink?:  string;\n  link?:        string;\n}\n\nexport interface Day {\n  icon?:             number;\n  iconPhrase?:       string;\n  hasPrecipitation?: boolean;\n}\n\nexport interface Temperature {\n  minimum?: TemperatureData;\n  maximum?: TemperatureData;\n}\n\nexport interface TemperatureData {\n  value?:    number;\n  unit?:     Unit;\n  unitType?: number;\n}\n\nexport enum Unit {\n  F = \"F\",\n  C = \"C\",\n}\n\nexport interface Headline {\n  effectiveDate?:      Date;\n  effectiveEpochDate?: number;\n  severity?:           number;\n  text?:               string;\n  category?:           string;\n  endDate?:            Date;\n  endEpochDate?:       number;\n  mobileLink?:         string;\n  link?:               string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoComplete-1.html":{"url":"interfaces/AutoComplete-1.html","title":"interface - AutoComplete-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AutoComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/search-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        administrativeArea\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        rank\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        administrativeArea\n                                    \n                                \n                                \n                                    \n                                        administrativeArea:         AdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         AdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         SearchType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SearchType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  version?:            number;\n  key?:                string;\n  type?:               SearchType;\n  rank?:               number;\n  localizedName?:      string;\n  country?:            AdministrativeArea;\n  administrativeArea?: AdministrativeArea;\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n}\n\nexport enum SearchType {\n  City = \"City\",\n  Country = \"Country\",\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Conditions.html":{"url":"interfaces/Conditions.html","title":"interface - Conditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Conditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        epochTime\n                                \n                                \n                                            Optional\n                                        hasPrecipitation\n                                \n                                \n                                            Optional\n                                        isDayTime\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        localObservationDateTime\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        precipitationType\n                                \n                                \n                                            Optional\n                                        temperature\n                                \n                                \n                                            Optional\n                                        weatherIcon\n                                \n                                \n                                            Optional\n                                        weatherText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        epochTime\n                                    \n                                \n                                \n                                    \n                                        epochTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        hasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDayTime\n                                    \n                                \n                                \n                                    \n                                        isDayTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localObservationDateTime\n                                    \n                                \n                                \n                                    \n                                        localObservationDateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precipitationType\n                                    \n                                \n                                \n                                    \n                                        precipitationType:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         Temperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Temperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherText\n                                    \n                                \n                                \n                                    \n                                        weatherText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Conditions {\n  localObservationDateTime?: Date;\n  epochTime?:                number;\n  weatherText?:              string;\n  weatherIcon?:              number;\n  hasPrecipitation?:         boolean;\n  precipitationType?:        null;\n  isDayTime?:                boolean;\n  temperature?:              Temperature;\n  mobileLink?:               string;\n  link?:                     string;\n}\n\nexport interface Temperature {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                sidenavState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSidenavToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSidenavToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSidenavToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PanelState\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router';\nimport { ApplicationService } from '@common/services/application.service'\nimport { PanelState } from '@constants/panel-state.enum'\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public currentRoute: string;\n  public isLoading: boolean = false;\n  public sidenavState: PanelState;\n  constructor(private application: ApplicationService, private router: Router) {\n    this.sidenavState = this.application.sidenavState;\n    this.router.events.subscribe({\n      next: event =>\n        this.currentRoute = !(event instanceof NavigationEnd) ? this.currentRoute :\n          `Weather ${event.urlAfterRedirects.slice(1).replace('/', ' ')}`\n    });\n    this.application.isLoading$\n      .subscribe({ next: value => this.isLoading = value });\n  }\n  ngOnInit() { }\n  public onSidenavToggle() {\n    this.sidenavState =\n      this.sidenavState == PanelState.Hide\n        ? PanelState.Show\n        : PanelState.Hide;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n\n.app-container {\n  background: linear-gradient(to top, $primary, lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n  display: flex;\n  height: 100vh;\n  justify-content: space-between;\n  margin: 0;\n  overflow-y: hidden;\n  padding: 0;\n  width: 100vw;\n\n  .container-main {\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n    height: $content-height;\n    justify-content: space-between;\n    .container-content {\n      max-height: $content-height;\n\n      flex: auto;\n      padding: 15px;\n      overflow-y: auto;\n    }\n    .container-sidenav {\n      max-width: $sidenav-width;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApplicationService\n                        \n                        \n                            ContextService\n                        \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppSettings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppSettings\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule                             } from '@angular/common'\nimport { HTTP_INTERCEPTORS     , HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders   , NgModule         } from '@angular/core'\nimport { RequestInterceptor                       } from '@common/interceptors/request-interceptor'\nimport { ResponseInterceptor                      } from '@common/interceptors/response-interceptor'\nimport { LocationResolver                         } from '@common/resolvers/location.resolver'\nimport { ApplicationService                       } from '@common/services/application.service'\nimport { ContainerRoutingModule                   } from '@container/container-routing.module'\nimport { ContainerComponent                       } from '@container/container.component'\nimport { HeaderModule                             } from '@container/header/header.module'\nimport { SidenavModule                            } from '@container/sidenav/sidenav.module'\nimport { AppSettings                              } from '@helpers/app-settings'\nimport { ContextService                           } from '@services/context.service'\nimport { WeatherService                           } from '@services/weather.service'\n\nconst Components = [ContainerComponent];\nconst Modules = [SidenavModule, HeaderModule];\n\n@NgModule({\n  declarations: Components,\n  exports: [Components, Modules],\n  imports: [\n    CommonModule,\n    ContainerRoutingModule,\n    HttpClientModule,\n    Modules\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor, multi: true },\n    ApplicationService,\n    LocationResolver  ,\n    ContextService    ,\n    WeatherService\n  ],\n})\nexport class ContainerModule {\n  static forRoot(args?: AppSettings): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppSettings, useValue: args },\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const ContainerRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(ContainerRoutes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContextService.html":{"url":"injectables/ContextService.html","title":"injectable - ContextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/context.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                onChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initContext()\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/context.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IDictionary\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            onChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/context.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { DataSets } from '@constants/data-sets.enum'\nimport { IDictionary } from '@helpers/dictionary'\n\n@Injectable()\nexport class ContextService {\n  private readonly context: IDictionary = {};\n  public readonly onChange$: Subject = new Subject();\n  constructor() { this.initContext(); }\n\n  private initContext() {\n    Object.keys(DataSets)\n      .forEach(key => this.context[key] = new Array());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country.html":{"url":"interfaces/Country.html","title":"interface - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DailyForecast.html":{"url":"interfaces/DailyForecast.html","title":"interface - DailyForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DailyForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        date\n                                \n                                \n                                            Optional\n                                        day\n                                \n                                \n                                            Optional\n                                        epochDate\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        night\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        temperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         Day\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Day\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        epochDate\n                                    \n                                \n                                \n                                    \n                                        epochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        night\n                                    \n                                \n                                \n                                    \n                                        night:         Day\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Day\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         Temperature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Temperature\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  headline?:       Headline;\n  dailyForecasts?: DailyForecast[];\n}\n\nexport interface DailyForecast {\n  date?:        Date;\n  epochDate?:   number;\n  temperature?: Temperature;\n  day?:         Day;\n  night?:       Day;\n  sources?:     string[];\n  mobileLink?:  string;\n  link?:        string;\n}\n\nexport interface Day {\n  icon?:             number;\n  iconPhrase?:       string;\n  hasPrecipitation?: boolean;\n}\n\nexport interface Temperature {\n  minimum?: TemperatureData;\n  maximum?: TemperatureData;\n}\n\nexport interface TemperatureData {\n  value?:    number;\n  unit?:     Unit;\n  unitType?: number;\n}\n\nexport enum Unit {\n  F = \"F\",\n  C = \"C\",\n}\n\nexport interface Headline {\n  effectiveDate?:      Date;\n  effectiveEpochDate?: number;\n  severity?:           number;\n  text?:               string;\n  category?:           string;\n  endDate?:            Date;\n  endEpochDate?:       number;\n  mobileLink?:         string;\n  link?:               string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hasPrecipitation\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        iconPhrase\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrecipitation\n                                    \n                                \n                                \n                                    \n                                        hasPrecipitation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconPhrase\n                                    \n                                \n                                \n                                    \n                                        iconPhrase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  headline?:       Headline;\n  dailyForecasts?: DailyForecast[];\n}\n\nexport interface DailyForecast {\n  date?:        Date;\n  epochDate?:   number;\n  temperature?: Temperature;\n  day?:         Day;\n  night?:       Day;\n  sources?:     string[];\n  mobileLink?:  string;\n  link?:        string;\n}\n\nexport interface Day {\n  icon?:             number;\n  iconPhrase?:       string;\n  hasPrecipitation?: boolean;\n}\n\nexport interface Temperature {\n  minimum?: TemperatureData;\n  maximum?: TemperatureData;\n}\n\nexport interface TemperatureData {\n  value?:    number;\n  unit?:     Unit;\n  unitType?: number;\n}\n\nexport enum Unit {\n  F = \"F\",\n  C = \"C\",\n}\n\nexport interface Headline {\n  effectiveDate?:      Date;\n  effectiveEpochDate?: number;\n  severity?:           number;\n  text?:               string;\n  category?:           string;\n  endDate?:            Date;\n  endEpochDate?:       number;\n  mobileLink?:         string;\n  link?:               string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Elevation.html":{"url":"interfaces/Elevation.html","title":"interface - Elevation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Elevation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imperial\n                                \n                                \n                                            Optional\n                                        metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imperial\n                                    \n                                \n                                \n                                    \n                                        imperial:         Imperial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Imperial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metric\n                                    \n                                \n                                \n                                    \n                                        metric:         Imperial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Imperial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encoding.html":{"url":"classes/Encoding.html","title":"class - Encoding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encoding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/encoding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decodeBase64\n                            \n                            \n                                    Static\n                                decryptAES\n                            \n                            \n                                    Static\n                                encodeBase64\n                            \n                            \n                                    Static\n                                encryptAES\n                            \n                            \n                                    Static\n                                fromStorage\n                            \n                            \n                                    Static\n                                toStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            decodeBase64\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeBase64(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            decryptAES\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptAES(ciphertext: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ciphertext\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        secret\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            encodeBase64\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encodeBase64(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            encryptAES\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptAES(value: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        secret\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromStorage(key: string, type?)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:17\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toStorage(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/helpers/encoding.ts:26\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CLIENT_ID as secret } from '@env/environment';\nimport { AES, enc } from 'crypto-js';\n\nexport class Encoding {\n  public static encodeBase64(value: string): string {\n    return btoa(value);\n  }\n  public static encryptAES(value: string, key: string = secret): string {\n    return AES.encrypt(value, key).toString();\n  }\n  public static decodeBase64(value: string): string {\n    return atob(value);\n  }\n  public static decryptAES(ciphertext: string, key: string = secret): string {\n    return AES.decrypt(ciphertext, key).toString(enc.Utf8);\n  }\n  public static fromStorage(key: string, type?: new () => T): T {\n    const encrypted: string = localStorage.getItem(key);\n    if (encrypted) {\n      const encoded: string = this.decryptAES(encrypted);\n      const decoded: string = this.decodeBase64(encoded);\n      return typeof (type) == 'string' ? decoded : JSON.parse(decoded);\n    }\n    return null;\n  }\n  public static toStorage(key: string, value: T) {\n    localStorage.setItem(key,\n      this.encryptAES(\n        this.encodeBase64(\n          typeof (value) == 'string'\n            ? value\n            : JSON.stringify(value))));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/favorites/favorites.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                ./favorites.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/favorites/favorites.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/favorites/favorites.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n      \n        First slide label\n        Some representative placeholder content for the first slide.\n      \n    \n    \n      \n        Second slide label\n        Some representative placeholder content for the second slide.\n      \n    \n    \n      \n        Third slide label\n        Some representative placeholder content for the third slide.\n      \n    \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n    \n\n    \n                \n                    ./favorites.component.scss\n                \n                @import \"common.scss\";\n.carousel {\n  color: white;\n}\n.carousel-item {\n  height: 400px;\n}\n.carousel-caption {\n  background: black;\n  opacity: 40%;\n  width: 100%;\n  padding: 25px 0px;\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    First slide label        Some representative placeholder content for the first slide.                            Second slide label        Some representative placeholder content for the second slide.                            Third slide label        Some representative placeholder content for the third slide.                      Previous            Next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesModule.html":{"url":"modules/FavoritesModule.html","title":"module - FavoritesModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_exports\n\n\n\ncluster_FavoritesModule_declarations\n\n\n\ncluster_FavoritesModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FavoritesRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule           } from '@angular/common'\nimport { NgModule               } from '@angular/core'\nimport { FavoritesRoutingModule } from '@favorites/favorites-routing.module'\nimport { FavoritesComponent     } from '@favorites/favorites.component'\n\nconst Components = [FavoritesComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, FavoritesRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class FavoritesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoritesRoutingModule.html":{"url":"modules/FavoritesRoutingModule.html","title":"module - FavoritesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoritesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/favorites/favorites-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                   } from '@angular/core'\nimport { RouterModule      , Routes } from '@angular/router'\nimport { FavoritesComponent         } from '@favorites/favorites.component'\n\nexport const FavoritesRoutes: Routes = [\n  { path: '', component: FavoritesComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(FavoritesRoutes)],\n  exports: [RouterModule]\n})\nexport class FavoritesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/feature.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { PrimeNGConfig         } from 'primeng/api'\nimport { AutoCompleteModule    } from 'primeng/autocomplete'\nimport { ButtonModule          } from 'primeng/button'\nimport { CarouselModule        } from 'primeng/carousel'\nimport { CheckboxModule        } from 'primeng/checkbox'\nimport { DropdownModule        } from 'primeng/dropdown'\nimport { FieldsetModule        } from 'primeng/fieldset'\nimport { GMapModule            } from 'primeng/gmap'\nimport { InputSwitchModule     } from 'primeng/inputswitch'\nimport { InputTextModule       } from 'primeng/inputtext'\nimport { KeyFilterModule       } from 'primeng/keyfilter'\nimport { MenuModule            } from 'primeng/menu'\nimport { ProgressBarModule     } from 'primeng/progressbar'\nimport { ProgressSpinnerModule } from 'primeng/progressspinner'\nimport { RadioButtonModule     } from 'primeng/radiobutton'\nimport { RippleModule          } from 'primeng/ripple'\nimport { TabMenuModule         } from 'primeng/tabmenu'\nimport { ToastModule           } from 'primeng/toast'\nimport { ToggleButtonModule    } from 'primeng/togglebutton'\nimport { TooltipModule         } from 'primeng/tooltip'\nimport { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    AutoCompleteModule,\n    ButtonModule,\n    CarouselModule,\n    CheckboxModule,\n    DropdownModule,\n    FieldsetModule,\n    GMapModule,\n    InputSwitchModule,\n    InputTextModule,\n    KeyFilterModule,\n    MenuModule,\n    ProgressBarModule,\n    ProgressSpinnerModule,\n    RadioButtonModule,\n    RippleModule,\n    TabMenuModule,\n    ToastModule,\n    ToggleButtonModule,\n    TooltipModule\n  ]\n})\nexport class FeatureModule {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastComponent.html":{"url":"components/ForecastComponent.html","title":"component - ForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forecast/forecast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast\n            \n\n            \n                styleUrls\n                ./forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/forecast/forecast.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/forecast/forecast.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.scss']\n})\nexport class ForecastComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  forecast works!\n\n\n    \n\n    \n                \n                    ./forecast.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  forecast works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastModule.html":{"url":"modules/ForecastModule.html","title":"module - ForecastModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_exports\n\n\n\ncluster_ForecastModule_declarations\n\n\n\ncluster_ForecastModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ForecastRoutingModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule          } from '@angular/common'\nimport { NgModule              } from '@angular/core'\nimport { ForecastRoutingModule } from '@forecast/forecast-routing.module'\nimport { ForecastComponent     } from '@forecast/forecast.component'\n\nconst Components = [ForecastComponent];\nconst Modules = [];\n\n@NgModule({\n  imports     : [CommonModule, ForecastRoutingModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class ForecastModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ForecastRoutingModule.html":{"url":"modules/ForecastRoutingModule.html","title":"module - ForecastRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ForecastRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/forecast/forecast-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\nimport { ForecastComponent         } from '@forecast/forecast.component'\n\nexport const ForecastRoutes: Routes = [\n  { path: '', component: ForecastComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(ForecastRoutes)],\n  exports: [RouterModule]\n})\nexport class ForecastRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoPosition.html":{"url":"interfaces/GeoPosition.html","title":"interface - GeoPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        elevation\n                                \n                                \n                                            Optional\n                                        latitude\n                                \n                                \n                                            Optional\n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        elevation\n                                    \n                                \n                                \n                                    \n                                        elevation:         Elevation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Elevation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavStateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sidenavStateChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/header/header.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/header/header.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() public sidenavStateChange: EventEmitter = new EventEmitter();\n  public currentDate: Date = new Date();\n  constructor() { }\n  ngOnInit() { }\n  public toggleSidenav() {\n    this.sidenavStateChange.emit()\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Main\n    \n    \n      \n      Favorites\n    \n  \n  {{this.currentDate | date: 'EEEE MMMM d, y'}}\n  \n    \n    \n    \n  \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"common.scss\";\n\n.app-header {\n  @extend .shadow;\n  * {\n    max-height: $navbar-height;\n    color: white;\n  }\n  padding: 0px 15px;\n  height: $navbar-height;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(to right, lighten($color: $primary, $amount: 5%), lighten($color: $primary, $amount: 10%), lighten($color: $primary, $amount: 20%));\n\n  .header-items {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .header-image {\n      width: calc(#{$navbar-height} * 0.9);\n    }\n  }\n  .header-date {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      display: flex;\n      align-items: center;\n    }\n  }\n  .header-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n.btn {\n  .fa {\n    font-size: 15px;\n  }\n  .action-text {\n    @media screen and (max-width: 650px) {\n      display: none;\n    }\n    @media screen and (min-width: 650px) {\n      margin-left: 10px;\n    }\n  }\n  align-items: center;\n  border-color: transparent;\n  border-radius: 10px;\n  display: flex;\n  height: calc(#{$navbar-height}* 0.8);\n  justify-content: center;\n  margin: 0px 0px 0px 15px;\n  min-width: $navbar-height;\n  transition: ease-in-out 200ms;\n}\n.btn:hover {\n  transition: ease-in-out 200ms;\n  @extend .shadow;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Main                    Favorites        {{this.currentDate | date: \\'EEEE MMMM d, y\\'}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HeaderRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FeatureModule       } from '@container/feature.module'\nimport { HeaderRoutingModule } from '@container/header/header-routing.module'\nimport { HeaderComponent     } from '@container/header/header.component'\n\nconst Components = [HeaderComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, HeaderRoutingModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderRoutingModule.html":{"url":"modules/HeaderRoutingModule.html","title":"module - HeaderRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/header/header-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nexport const HeaderRoutes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(HeaderRoutes)],\n  exports: [RouterModule]\n})\nexport class HeaderRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Headline.html":{"url":"interfaces/Headline.html","title":"interface - Headline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Headline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        category\n                                \n                                \n                                            Optional\n                                        effectiveDate\n                                \n                                \n                                            Optional\n                                        effectiveEpochDate\n                                \n                                \n                                            Optional\n                                        endDate\n                                \n                                \n                                            Optional\n                                        endEpochDate\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        mobileLink\n                                \n                                \n                                            Optional\n                                        severity\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        effectiveDate\n                                    \n                                \n                                \n                                    \n                                        effectiveDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        effectiveEpochDate\n                                    \n                                \n                                \n                                    \n                                        effectiveEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDate\n                                    \n                                \n                                \n                                    \n                                        endDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endEpochDate\n                                    \n                                \n                                \n                                    \n                                        endEpochDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileLink\n                                    \n                                \n                                \n                                    \n                                        mobileLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        severity\n                                    \n                                \n                                \n                                    \n                                        severity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  headline?:       Headline;\n  dailyForecasts?: DailyForecast[];\n}\n\nexport interface DailyForecast {\n  date?:        Date;\n  epochDate?:   number;\n  temperature?: Temperature;\n  day?:         Day;\n  night?:       Day;\n  sources?:     string[];\n  mobileLink?:  string;\n  link?:        string;\n}\n\nexport interface Day {\n  icon?:             number;\n  iconPhrase?:       string;\n  hasPrecipitation?: boolean;\n}\n\nexport interface Temperature {\n  minimum?: TemperatureData;\n  maximum?: TemperatureData;\n}\n\nexport interface TemperatureData {\n  value?:    number;\n  unit?:     Unit;\n  unitType?: number;\n}\n\nexport enum Unit {\n  F = \"F\",\n  C = \"C\",\n}\n\nexport interface Headline {\n  effectiveDate?:      Date;\n  effectiveEpochDate?: number;\n  severity?:           number;\n  text?:               string;\n  category?:           string;\n  endDate?:            Date;\n  endEpochDate?:       number;\n  mobileLink?:         string;\n  link?:               string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDictionary.html":{"url":"interfaces/IDictionary.html","title":"interface - IDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/dictionary.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BaseModel[]\n\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/dictionary.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BaseModel } from '@models/base-model';\n\nexport interface IDictionary {\n  [key: string]: BaseModel[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchEvent.html":{"url":"interfaces/ISearchEvent.html","title":"interface - ISearchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/search-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        originalEvent\n                                \n                                \n                                        query\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        originalEvent\n                                    \n                                \n                                \n                                    \n                                        originalEvent:     InputEvent | FocusEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InputEvent | FocusEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISearchEvent {\n  originalEvent: InputEvent | FocusEvent;\n  query: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Imperial.html":{"url":"interfaces/Imperial.html","title":"interface - Imperial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Imperial\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitType\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitType\n                                    \n                                \n                                \n                                    \n                                        unitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Conditions {\n  localObservationDateTime?: Date;\n  epochTime?:                number;\n  weatherText?:              string;\n  weatherIcon?:              number;\n  hasPrecipitation?:         boolean;\n  precipitationType?:        null;\n  isDayTime?:                boolean;\n  temperature?:              Temperature;\n  mobileLink?:               string;\n  link?:                     string;\n}\n\nexport interface Temperature {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Imperial-1.html":{"url":"interfaces/Imperial-1.html","title":"interface - Imperial-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Imperial\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitType\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitType\n                                    \n                                \n                                \n                                    \n                                        unitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        administrativeArea\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        dataSets\n                                \n                                \n                                            Optional\n                                        englishName\n                                \n                                \n                                            Optional\n                                        geoPosition\n                                \n                                \n                                            Optional\n                                        isAlias\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        localizedName\n                                \n                                \n                                            Optional\n                                        primaryPostalCode\n                                \n                                \n                                            Optional\n                                        rank\n                                \n                                \n                                            Optional\n                                        region\n                                \n                                \n                                            Optional\n                                        supplementalAdminAreas\n                                \n                                \n                                            Optional\n                                        timeZone\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        administrativeArea\n                                    \n                                \n                                \n                                    \n                                        administrativeArea:         AdministrativeArea\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AdministrativeArea\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         Country\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Country\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataSets\n                                    \n                                \n                                \n                                    \n                                        dataSets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        englishName\n                                    \n                                \n                                \n                                    \n                                        englishName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoPosition\n                                    \n                                \n                                \n                                    \n                                        geoPosition:         GeoPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GeoPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAlias\n                                    \n                                \n                                \n                                    \n                                        isAlias:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizedName\n                                    \n                                \n                                \n                                    \n                                        localizedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPostalCode\n                                    \n                                \n                                \n                                    \n                                        primaryPostalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                    \n                                \n                                \n                                    \n                                        region:         Country\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Country\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supplementalAdminAreas\n                                    \n                                \n                                \n                                    \n                                        supplementalAdminAreas:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeZone\n                                    \n                                \n                                \n                                    \n                                        timeZone:         TimeZone\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeZone\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LocationResolver.html":{"url":"guards/LocationResolver.html","title":"guard - LocationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LocationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/resolvers/location.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(application: ApplicationService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/resolvers/location.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        application\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/resolvers/location.resolver.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Observable, pipe } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router'\nimport { Geolocation } from '@helpers/geolocation'\nimport { ApplicationService } from '@services/application.service'\nimport { HttpClient } from '@angular/common/http'\nimport { provider } from '@env/environment'\n\n@Injectable()\nexport class LocationResolver implements Resolve {\n  constructor(private application: ApplicationService, private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot): Observable | Promise | null {\n    this.application.isLoading$.next(true);\n\n    return !this.application.userLocation\n      ? this.application\n        .userLocation$\n        .pipe(\n          map(x => {\n            this.http.get(provider.accuweather.endpoints.)\n            return x;\n          }));\n\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/request-interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/request-interceptor.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const headers = req.headers\n      .set('Content-Type', 'application/json');\n    const authReq = req.clone({ headers });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/response-interceptor.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/response-interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor() { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    return next.handle(req).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n          const elapsed = Date.now() - started;\n          console.log(`Request for ${req.urlWithParams} took ${elapsed} ms.`);\n        }\n        return event;\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchForm\n                            \n                            \n                                    Public\n                                suggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSearch(event: ISearchEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ISearchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            suggestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { ISearchEvent } from '@helpers/search-event';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  public searchForm: FormGroup;\n  public suggestions: string[];\n  constructor() { }\n  ngOnInit() { this.initForm(); }\n  private initForm() {\n    this.searchForm = new FormGroup({\n      'search': new FormControl('', Validators.pattern('[a-zA-Z ]*'))\n    })\n  }\n  public onSearch(event: ISearchEvent) {\n    console.log(event)\n    this.suggestions = [\n      \"Apple\",\n      \"Intel\",\n      \"AMD\",\n      \"IBM\",\n      \"Microsoft\"\n    ].slice().filter(x => x.toLowerCase().includes(event.query.toLowerCase()));\n  }\n  public onSubmit() {\n\n  }\n\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          {{result}}\n        \n      \n    \n  \n  \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .app-search {\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{result}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SearchRoutingModule\n                        \n                        \n                            SidenavModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FeatureModule       } from '@container/feature.module'\nimport { SearchRoutingModule } from '@search/search-routing.module'\nimport { SearchComponent     } from '@search/search.component'\nimport { WeatherModule       } from '@weather/weather.module'\n\nconst Components = [SearchComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, SearchRoutingModule, ReactiveFormsModule, WeatherModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule                } from '@angular/core'\nimport { RouterModule   , Routes } from '@angular/router'\nimport { SearchComponent         } from '@search/search.component'\n\nexport const SearchRoutes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(SearchRoutes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/settings/settings.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/settings/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sidenavState\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApplicationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApplicationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sidenavState\n                    \n                \n                \n                    \n                        Type :         PanelState\n\n                    \n                \n                \n                    \n                        Default value : PanelState.Hide\n                    \n                \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core'\nimport { PanelState } from '@constants/panel-state.enum';\nimport { ApplicationService } from '@services/application.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  @Input() public sidenavState: PanelState = PanelState.Hide;\n  constructor(private config: ApplicationService) { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  height: 100vh;\n  @extend .shadow;\n}\n.app-sidenav.show {\n  transition: ease-in-out 300ms;\n  width: 250px;\n}\n.app-sidenav.hide {\n  width: 0px;\n  transition: ease-in-out 300ms;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_imports\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/sidenav/sidenav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeatureModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TabMenuModule     } from 'primeng/tabmenu'\nimport { CommonModule      } from '@angular/common'\nimport { NgModule          } from '@angular/core'\nimport { FeatureModule     } from '@container/feature.module'\nimport { SettingsComponent } from '@container/sidenav/settings/settings.component'\nimport { SidenavComponent  } from '@container/sidenav/sidenav.component'\n\nconst Components = [SidenavComponent, SettingsComponent];\nconst Modules = [];\n\n@NgModule({\n  imports: [CommonModule, FeatureModule, TabMenuModule, Modules],\n  declarations: Components,\n  exports: [Components, Modules],\n  providers: []\n})\nexport class SidenavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Temperature.html":{"url":"interfaces/Temperature.html","title":"interface - Temperature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/conditions-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        imperial\n                                \n                                \n                                            Optional\n                                        metric\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imperial\n                                    \n                                \n                                \n                                    \n                                        imperial:         Imperial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Imperial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metric\n                                    \n                                \n                                \n                                    \n                                        metric:         Imperial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Imperial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Conditions {\n  localObservationDateTime?: Date;\n  epochTime?:                number;\n  weatherText?:              string;\n  weatherIcon?:              number;\n  hasPrecipitation?:         boolean;\n  precipitationType?:        null;\n  isDayTime?:                boolean;\n  temperature?:              Temperature;\n  mobileLink?:               string;\n  link?:                     string;\n}\n\nexport interface Temperature {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Temperature-1.html":{"url":"interfaces/Temperature-1.html","title":"interface - Temperature-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Temperature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        maximum\n                                \n                                \n                                            Optional\n                                        minimum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maximum\n                                    \n                                \n                                \n                                    \n                                        maximum:         TemperatureData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TemperatureData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimum\n                                    \n                                \n                                \n                                    \n                                        minimum:         TemperatureData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TemperatureData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  headline?:       Headline;\n  dailyForecasts?: DailyForecast[];\n}\n\nexport interface DailyForecast {\n  date?:        Date;\n  epochDate?:   number;\n  temperature?: Temperature;\n  day?:         Day;\n  night?:       Day;\n  sources?:     string[];\n  mobileLink?:  string;\n  link?:        string;\n}\n\nexport interface Day {\n  icon?:             number;\n  iconPhrase?:       string;\n  hasPrecipitation?: boolean;\n}\n\nexport interface Temperature {\n  minimum?: TemperatureData;\n  maximum?: TemperatureData;\n}\n\nexport interface TemperatureData {\n  value?:    number;\n  unit?:     Unit;\n  unitType?: number;\n}\n\nexport enum Unit {\n  F = \"F\",\n  C = \"C\",\n}\n\nexport interface Headline {\n  effectiveDate?:      Date;\n  effectiveEpochDate?: number;\n  severity?:           number;\n  text?:               string;\n  category?:           string;\n  endDate?:            Date;\n  endEpochDate?:       number;\n  mobileLink?:         string;\n  link?:               string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TemperatureData.html":{"url":"interfaces/TemperatureData.html","title":"interface - TemperatureData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TemperatureData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/forecast-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitType\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitType\n                                    \n                                \n                                \n                                    \n                                        unitType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AutoComplete {\n  headline?:       Headline;\n  dailyForecasts?: DailyForecast[];\n}\n\nexport interface DailyForecast {\n  date?:        Date;\n  epochDate?:   number;\n  temperature?: Temperature;\n  day?:         Day;\n  night?:       Day;\n  sources?:     string[];\n  mobileLink?:  string;\n  link?:        string;\n}\n\nexport interface Day {\n  icon?:             number;\n  iconPhrase?:       string;\n  hasPrecipitation?: boolean;\n}\n\nexport interface Temperature {\n  minimum?: TemperatureData;\n  maximum?: TemperatureData;\n}\n\nexport interface TemperatureData {\n  value?:    number;\n  unit?:     Unit;\n  unitType?: number;\n}\n\nexport enum Unit {\n  F = \"F\",\n  C = \"C\",\n}\n\nexport interface Headline {\n  effectiveDate?:      Date;\n  effectiveEpochDate?: number;\n  severity?:           number;\n  text?:               string;\n  category?:           string;\n  endDate?:            Date;\n  endEpochDate?:       number;\n  mobileLink?:         string;\n  link?:               string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeSpan.html":{"url":"interfaces/TimeSpan.html","title":"interface - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/timespan.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        finalDate\n                                \n                                \n                                            Optional\n                                        startDate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finalDate\n                                    \n                                \n                                \n                                    \n                                        finalDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeSpan {\n  startDate?: Date;\n  finalDate?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeZone.html":{"url":"interfaces/TimeZone.html","title":"interface - TimeZone","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/location-model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        code\n                                \n                                \n                                            Optional\n                                        gmtOffset\n                                \n                                \n                                            Optional\n                                        isDaylightSaving\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        nextOffsetChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gmtOffset\n                                    \n                                \n                                \n                                    \n                                        gmtOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDaylightSaving\n                                    \n                                \n                                \n                                    \n                                        isDaylightSaving:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextOffsetChange\n                                    \n                                \n                                \n                                    \n                                        nextOffsetChange:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n  version?:                number;\n  key?:                    string;\n  type?:                   string;\n  rank?:                   number;\n  localizedName?:          string;\n  englishName?:            string;\n  primaryPostalCode?:      string;\n  region?:                 Country;\n  country?:                Country;\n  administrativeArea?:     AdministrativeArea;\n  timeZone?:               TimeZone;\n  geoPosition?:            GeoPosition;\n  isAlias?:                boolean;\n  supplementalAdminAreas?: any[];\n  dataSets?:               string[];\n}\n\nexport interface AdministrativeArea {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n  level?:         number;\n  localizedType?: string;\n  englishType?:   string;\n  countryId?:     string;\n}\n\nexport interface Country {\n  id?:            string;\n  localizedName?: string;\n  englishName?:   string;\n}\n\nexport interface GeoPosition {\n  latitude?:  number;\n  longitude?: number;\n  elevation?: Elevation;\n}\n\nexport interface Elevation {\n  metric?:   Imperial;\n  imperial?: Imperial;\n}\n\nexport interface Imperial {\n  value?:    number;\n  unit?:     string;\n  unitType?: number;\n}\n\nexport interface TimeZone {\n  code?:             string;\n  name?:             string;\n  gmtOffset?:        number;\n  isDaylightSaving?: boolean;\n  nextOffsetChange?: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  weather works!\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  weather works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'ForecastComponent', 'selector': 'app-forecast'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_imports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule     } from '@angular/common'\nimport { NgModule         } from '@angular/core'\nimport { WeatherComponent } from '@weather/weather.component'\n\nconst Components = [WeatherComponent];\nconst Modules    = [                ];\n\n@NgModule({\n  imports     : [CommonModule, Modules],\n  declarations: Components,\n  exports     : [Components, Modules],\n  providers   : []\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/weather.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autoComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppSettings, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/weather.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            autoComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autoComplete(search: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/weather.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core'\nimport { provider } from '@env/environment';\nimport { AppSettings } from '@helpers/app-settings';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class WeatherService {\n  constructor(private args?: AppSettings, private http: HttpClient) { }\n  public autoComplete(search: string):Promise {\n    return this.http.get(provider.accuweather.endpoints.locations)\n  }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/header/header.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.component.ts\n            \n            component\n            FavoritesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/favorites/favorites.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.component.ts\n            \n            component\n            ForecastComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/forecast/forecast.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather.module.ts\n            \n            variable\n            Modules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/app-settings.ts\n            \n            class\n            AppSettings\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/helpers/dictionary.ts\n            \n            interface\n            IDictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/encoding.ts\n            \n            class\n            Encoding\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/helpers/search-event.ts\n            \n            interface\n            ISearchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/helpers/timespan.ts\n            \n            interface\n            TimeSpan\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/request-interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            Conditions\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            Imperial\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/conditions-model.ts\n            \n            interface\n            Temperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            AutoComplete\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            DailyForecast\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            Day\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            Headline\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            Temperature\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/forecast-model.ts\n            \n            interface\n            TemperatureData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            AdministrativeArea\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            Elevation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            GeoPosition\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            Imperial\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            Location\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/common/models/location-model.ts\n            \n            interface\n            TimeZone\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/search-model.ts\n            \n            interface\n            AdministrativeArea\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/models/search-model.ts\n            \n            interface\n            AutoComplete\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/resolvers/location.resolver.ts\n            \n            guard\n            LocationResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/application.service.ts\n            \n            injectable\n            ApplicationService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/common/services/context.service.ts\n            \n            injectable\n            ContextService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/services/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            provider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            CLIENT_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            DEFAULT_LOCATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            provider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.6.0\n        \n            crypto-js : ^4.0.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            guid-ts : ^1.1.1\n        \n            jquery : ^3.6.0\n        \n            ngx-toastr : ^13.2.1\n        \n            popper.js : ^1.16.1\n        \n            primeflex : ^2.0.0\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorTheme   (src/.../color-theme.enum.ts)\n                        \n                        \n                            DataSets   (src/.../data-sets.enum.ts)\n                        \n                        \n                            PanelMode   (src/.../panel-mode.enum.ts)\n                        \n                        \n                            PanelState   (src/.../panel-state.enum.ts)\n                        \n                        \n                            SearchType   (src/.../search-model.ts)\n                        \n                        \n                            Unit   (src/.../forecast-model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants/color-theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorTheme\n                    \n                \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : Dark\n                            \n                        \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : Light\n                            \n                        \n            \n        \n\n    src/common/constants/data-sets.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DataSets\n                    \n                \n                        \n                            \n                                 AutoComplete\n                            \n                        \n                        \n                            \n                                Value : AutoComplete\n                            \n                        \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                Value : Conditions\n                            \n                        \n                        \n                            \n                                 Countries\n                            \n                        \n                        \n                            \n                                Value : Countries\n                            \n                        \n                        \n                            \n                                 Forecasts\n                            \n                        \n                        \n                            \n                                Value : Forecasts\n                            \n                        \n                        \n                            \n                                 Languages\n                            \n                        \n                        \n                            \n                                Value : Languages\n                            \n                        \n                        \n                            \n                                 Locations\n                            \n                        \n                        \n                            \n                                Value : Locations\n                            \n                        \n                        \n                            \n                                 Weather\n                            \n                        \n                        \n                            \n                                Value : Weather\n                            \n                        \n            \n        \n\n    src/common/constants/panel-mode.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelMode\n                    \n                \n                        \n                            \n                                 Over\n                            \n                        \n                        \n                            \n                                Value : Over\n                            \n                        \n                        \n                            \n                                 Push\n                            \n                        \n                        \n                            \n                                Value : Push\n                            \n                        \n            \n        \n\n    src/common/constants/panel-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PanelState\n                    \n                \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : Show\n                            \n                        \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : Hide\n                            \n                        \n            \n        \n\n    src/common/models/search-model.ts\n    \n        \n            \n                \n                    \n                        \n                        SearchType\n                    \n                \n                        \n                            \n                                 City\n                            \n                        \n                        \n                            \n                                Value : City\n                            \n                        \n                        \n                            \n                                 Country\n                            \n                        \n                        \n                            \n                                Value : Country\n                            \n                        \n            \n        \n\n    src/common/models/forecast-model.ts\n    \n        \n            \n                \n                    \n                        \n                        Unit\n                    \n                \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHerolo Forecast Application\nThis project was generated with Angular CLI version 11.0.0.\nRun Live Preview - herolo-forecast.web.app\nDisplay CodeDoc - herolo-forecast.web.app/docs\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoritesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ForecastRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_FavoritesModule\n\n\n\ncluster_FavoritesModule_imports\n\n\n\ncluster_ForecastModule\n\n\n\ncluster_ForecastModule_imports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nContainerModule->ContainerComponent \n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nContainerModule->HeaderModule \n\n\n\n\n\nSidenavModule \n\nSidenavModule \n\nSidenavModule  -->\n\nContainerModule->SidenavModule \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nContainerModule -->\n\nContainerComponent->ContainerModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nContainerComponent->HeaderModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nContainerComponent->SidenavModule\n\n\n\n\n\nFavoritesModule\n\nFavoritesModule\n\nFavoritesModule -->\n\nContainerComponent->FavoritesModule\n\n\n\n\n\nForecastModule\n\nForecastModule\n\nForecastModule -->\n\nContainerComponent->ForecastModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nContainerComponent->SearchModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nContainerComponent->WeatherModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\nContainerModule -->\n\nHeaderModule->ContainerModule\n\n\n\nHeaderModule -->\n\nHeaderModule->HeaderModule\n\n\n\nSidenavModule -->\n\nHeaderModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nHeaderModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nHeaderModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nHeaderModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nHeaderModule->FavoritesModule\n\n\n\nForecastModule -->\n\nHeaderModule->ForecastModule\n\n\n\nSearchModule -->\n\nHeaderModule->SearchModule\n\n\n\nWeatherModule -->\n\nHeaderModule->WeatherModule\n\n\n\nContainerModule -->\n\nSidenavModule->ContainerModule\n\n\n\nHeaderModule -->\n\nSidenavModule->HeaderModule\n\n\n\nSidenavModule -->\n\nSidenavModule->SidenavModule\n\n\n\nContainerComponent  -->\n\nSidenavModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nSidenavModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nSidenavModule->SidenavModule \n\n\n\nFavoritesModule -->\n\nSidenavModule->FavoritesModule\n\n\n\nForecastModule -->\n\nSidenavModule->ForecastModule\n\n\n\nSearchModule -->\n\nSidenavModule->SearchModule\n\n\n\nWeatherModule -->\n\nSidenavModule->WeatherModule\n\n\n\n\n\nApplicationService\n\nApplicationService\n\nContainerModule -->\n\nApplicationService->ContainerModule\n\n\n\n\n\nContextService\n\nContextService\n\nContainerModule -->\n\nContextService->ContainerModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nContainerModule -->\n\nRequestInterceptor->ContainerModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nContainerModule -->\n\nResponseInterceptor->ContainerModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nContainerModule -->\n\nWeatherService->ContainerModule\n\n\n\nContainerComponent  -->\n\nFavoritesModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nFavoritesModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nFavoritesModule->SidenavModule \n\n\n\n\n\nFavoritesRoutingModule\n\nFavoritesRoutingModule\n\nFavoritesModule -->\n\nFavoritesRoutingModule->FavoritesModule\n\n\n\nContainerComponent  -->\n\nForecastModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nForecastModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nForecastModule->SidenavModule \n\n\n\n\n\nForecastRoutingModule\n\nForecastRoutingModule\n\nForecastModule -->\n\nForecastRoutingModule->ForecastModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nHeaderModule -->\n\nFeatureModule->HeaderModule\n\n\n\nSidenavModule -->\n\nFeatureModule->SidenavModule\n\n\n\nSearchModule -->\n\nFeatureModule->SearchModule\n\n\n\n\n\nHeaderRoutingModule\n\nHeaderRoutingModule\n\nHeaderModule -->\n\nHeaderRoutingModule->HeaderModule\n\n\n\nContainerComponent  -->\n\nSearchModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nSearchModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nSearchModule->SidenavModule \n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\nContainerComponent  -->\n\nWeatherModule->ContainerComponent \n\n\n\nHeaderModule  -->\n\nWeatherModule->HeaderModule \n\n\n\nSidenavModule  -->\n\nWeatherModule->SidenavModule \n\n\n\nSearchModule -->\n\nWeatherModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CLIENT_ID   (src/.../environment.prod.ts)\n                        \n                        \n                            CLIENT_ID   (src/.../environment.ts)\n                        \n                        \n                            Components   (src/.../container.module.ts)\n                        \n                        \n                            Components   (src/.../favorites.module.ts)\n                        \n                        \n                            Components   (src/.../search.module.ts)\n                        \n                        \n                            Components   (src/.../weather.module.ts)\n                        \n                        \n                            Components   (src/.../forecast.module.ts)\n                        \n                        \n                            Components   (src/.../header.module.ts)\n                        \n                        \n                            Components   (src/.../sidenav.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.prod.ts)\n                        \n                        \n                            DEFAULT_LOCATION   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            Modules   (src/.../container.module.ts)\n                        \n                        \n                            Modules   (src/.../favorites.module.ts)\n                        \n                        \n                            Modules   (src/.../search.module.ts)\n                        \n                        \n                            Modules   (src/.../weather.module.ts)\n                        \n                        \n                            Modules   (src/.../forecast.module.ts)\n                        \n                        \n                            Modules   (src/.../header.module.ts)\n                        \n                        \n                            Modules   (src/.../sidenav.module.ts)\n                        \n                        \n                            provider   (src/.../environment.prod.ts)\n                        \n                        \n                            provider   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Tel-Aviv\n  latitude: 32.109333,\n  longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiKey: 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n  baseUrl: 'http://dataservice.accuweather.com',\n  icons: 'https://www.accuweather.com/images/weathericons',\n  endpoints: {\n    currentconditions: 'currentconditions/v1',\n    forecasts: 'forecasts/v1/daily/5day',\n    locations: {\n      autocomplete: 'locations/v1/cities/autocomplete',\n      geoposition: 'locations/v1/cities/geoposition/search',\n      locationKey: 'locations/v1'\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'afa5425d-afd9-4c87-868c-df144bdb3b49'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_LOCATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // Tel-Aviv\n  latitude: 32.109333,\n  longitude: 34.855499\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiKey: 'YlY5QjRDdU1JMHU1R0d6a0xBaVViZXRPV29mNzBYb3k=',\n  baseUrl: 'http://dataservice.accuweather.com',\n  icons: 'https://www.accuweather.com/images/weathericons',\n  endpoints: {\n    currentconditions: 'currentconditions/v1',\n    forecasts: 'forecasts/v1/daily/5day',\n    locations: {\n      autocomplete: 'locations/v1/cities/autocomplete',\n      geoposition: 'locations/v1/cities/geoposition/search',\n      locationKey: 'locations/v1'\n    }\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ContainerComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavModule, HeaderModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/favorites/favorites.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FavoritesComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/weather.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [WeatherComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [                ]\n                        \n                    \n\n\n            \n        \n\n    src/app/forecast/forecast.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ForecastComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/header/header.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [HeaderComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/container/sidenav/sidenav.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SidenavComponent, SettingsComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
